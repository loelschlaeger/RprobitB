[{"path":"https://loelschlaeger.github.io/RprobitB/articles/data_management.html","id":"specify-the-model-formula","dir":"Articles","previous_headings":"","what":"Specify the model formula","title":"Data management","text":"model formula specified using formula object, let’s call form. structure form choice ~ | B | C, choice discrete choice aim explain, alternative choice situation specific covariates generic coefficient (call covariates type 1), B choice situation specific covariates alternative specific coefficients (call covariates type 2), C alternative choice situation specific covariates alternative specific coefficients (call covariates type 3). Keep following rules mind: default, alternative specific constants added model1. can removed adding +0 second spot, e.g. choice ~ | B + 0. exclude covariates backmost categories, use either 0, e.g. choice ~ | B | 0 just leave part write choice ~ | B. However, exclude covariates front categories, use 0, e.g. choice ~ | 0 | C. include one covariate category, use +, e.g. choice ~ A1 + A2 | B. don’t want include covariates second category want estimate alternative specific constants, add 1 second spot, e.g. choice ~ | 1. expression choice ~ | 0 interpreted covariates second category alternative specific constants. random effects specific variables, need define character vector re corresponding variable names. random effects alternative specific constants, include \"ASC\" re.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/articles/data_management.html","id":"example-simulated-choice-of-transportation-means","dir":"Articles","previous_headings":"Specify the model formula","what":"Example: Simulated choice of transportation means","title":"Data management","text":"Say want explain choice transportation means variables cost, income, travel_time. furthermore want add alternative specific constants. cost alternative obviously alternative specific. However, can argue matter alternative spend money. Therefore, want estimate generic coefficient cost. income decision maker constant across alternatives, can different influence alternatives. therefore covariate type 2. travel_time covariate type 3: alternative specific contrast cost, can imagine spending time public transportation means different spending time ones car. Therefore, specify: typically expect heterogeneity preferences regarding spending money transportation means, therefore impose random effect cost:","code":"form = choice ~ cost | income | travel_time re = \"cost\""},{"path":"https://loelschlaeger.github.io/RprobitB/articles/data_management.html","id":"empirical-data","dir":"Articles","previous_headings":"","what":"Empirical data","title":"Data management","text":"section explains prepare empirical data estimation using function prepare(). Say data set empirical choice data, let’s call choice_data. must meet following requirements: must data frame. must wide format, means row represents one choice occasion. must contain column named id, contains unique identifier decision maker. must contain column named choice, choice must match name dependent variable form. alternative specific covariate p form choice alternative j, choice_data must contain column named p_j. covariate q constant across covariates (covariate type 2), choice_data must contain column named q. prepare choice_data estimation, must call function prepare() following optional arguments: alternatives: may want consider alternatives choice_data. case, can specify character vector alternatives selected names alternatives. re: character vector variable names form random effects. id: character, name column choice_data contains unique identifier decision maker. default \"id\". standardize: character vector variable names form get standardized, see .","code":"data = prepare(form = form, choice_data = choice_data)"},{"path":"https://loelschlaeger.github.io/RprobitB/articles/data_management.html","id":"example-train-data-set-of-the-mlogit-package","dir":"Articles","previous_headings":"Empirical data","what":"Example: “Train” data set of the mlogit package","title":"Data management","text":"Let’s prepare Train data set mlogit package estimation. consider covariates price (type 1), time, comfort change (type 3), link price time random effects2.","code":"data(\"Train\", package = \"mlogit\") data = prepare(form = choice ~ price | 0 | time + comfort + change,                 choice_data = Train,                re = c(\"price\",\"time\"))"},{"path":"https://loelschlaeger.github.io/RprobitB/articles/data_management.html","id":"simulated-data","dir":"Articles","previous_headings":"","what":"Simulated data","title":"Data management","text":"section explains simulate choice data using function simulate(). want simulate choices N deciders T choice occasions3 among J alternatives model formulation form, call function simulate() following optional arguments: re: character vector variable names form random effects. alternatives: character vector names choice alternatives length J. distr: named list number generation functions covariates drawn. element distr must form \"cov\" = list(\"name\" = \"<name number generation function>\", ...), cov name covariate4 ... required parameters number generation function. Covariates distribution specified drawn standard normal distribution. Possible number generation functions functions type r* base R (e.g. rnorm) required parameters (except n) must specified, function sample, required parameters except size) must specified. standardize: character vector variable names form get standardized, see . can specify true parameter values adding values alpha, fixed coefficient vector, C, number (greater equal 1) latent classes decision, makers s, vector class weights, b, matrix class means columns, Omega, matrix class covariance matrices columns, Sigma, differenced error term covariance matrix, Sigma_full, full error term covariance matrix.","code":"data = simulate(form = form, N = N, T = T, J = J)"},{"path":"https://loelschlaeger.github.io/RprobitB/articles/data_management.html","id":"example-simulated-choice-of-transportation-means-1","dir":"Articles","previous_headings":"Simulated data","what":"Example: Simulated choice of transportation means","title":"Data management","text":"revisit example simulated choice transportation means, already specified: Let us now simulate choices N = 100 decision makers T = 10 choice occasions J = 3 alternatives “car”, “bus” “train”. want C = 2 true latent classes specific distributions5 covariates:","code":"form = choice ~ cost | income | travel_time re = \"cost\" N = 100 T = 10 J = 3 alternatives = c(\"car\", \"bus\", \"train\") distr = list(\"cost\" = list(\"name\" = \"rnorm\", sd = 3),              \"income\" = list(\"name\" =  \"sample\", x = (1:10)*1e3, replace = TRUE),              \"travel_time_car\" = list(\"name\" = \"rlnorm\", meanlog = 1),              \"travel_time_bus\" = list(\"name\" = \"rlnorm\", meanlog = 2)) data = simulate(form = form, N = N, T = T, J = J, re = re,                 alternatives = alternatives, distr = distr, C = 2)"},{"path":"https://loelschlaeger.github.io/RprobitB/articles/data_management.html","id":"standardize-covariates","dir":"Articles","previous_headings":"","what":"Standardize covariates","title":"Data management","text":"simulate() prepare() optional input standardize, character vector names covariates get standardized, .e. normalize mean 0 standard deviation 1. standardize = \"\", covariates get standardized. Covariates type 1 3 addressed covariate_alternative. standardize = \"\", covariates get standardized.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/articles/data_management.html","id":"example-simulated-choice-of-transportation-means-2","dir":"Articles","previous_headings":"Standardize covariates","what":"Example: Simulated choice of transportation means","title":"Data management","text":"example simulated choice transportation means, scaling income reasonable can improve model fitting. demonstration purpose, also standardize travel_time alternative:","code":"standardize = c(\"income\", \"travel_time_car\", \"travel_time_bus\",                 \"travel_time_train\") data = simulate(form = form, N = N, T = T, J = J, re = re,                 alternatives = alternatives, parm = parm, distr = distr,                 standardize = standardize)"},{"path":"https://loelschlaeger.github.io/RprobitB/articles/data_management.html","id":"data-summary","dir":"Articles","previous_headings":"","what":"Data summary","title":"Data management","text":"can check data preparation simulation worked expected using summary() function. columns z re indicate standardized random effect covariates, respectively. rest output self-explanatory.","code":"summary(data)"},{"path":"https://loelschlaeger.github.io/RprobitB/articles/introduction_to_RprobitB_and_model_formulation.html","id":"introdution","dir":"Articles","previous_headings":"","what":"Introdution","title":"Introduction to RprobitB and model formulation","text":"RprobitB1 can analyze choices made deciders among discrete set alternatives, estimate (latent class) (mixed) (multinomial) probit models Bayesian framework, model heterogeneity approximating underlying mixing distributions mixture normal distributions, identify latent classes decision makers. Run install.packages(\"RprobitB\") R console install latest version RprobitB.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/articles/introduction_to_RprobitB_and_model_formulation.html","id":"levels-of-model-complexity","dir":"Articles","previous_headings":"","what":"Levels of model complexity","title":"Introduction to RprobitB and model formulation","text":"notation (latent class) (mixed) (multinomial) probit model? RprobitB can fit probit models increasing complexity: basic, modelling choice two alternatives (probit model). Considering two alternatives leads multinomial probit model. incorporate random effects, model gets prefix mixed. general model latent class mixed multinomial probit model, approximates mixing distribution mixiture normal distributions.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/articles/introduction_to_RprobitB_and_model_formulation.html","id":"outline-of-the-vignettes","dir":"Articles","previous_headings":"","what":"Outline of the vignettes","title":"Introduction to RprobitB and model formulation","text":"model defined? prepare simulate choice data? fit model?","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/articles/introduction_to_RprobitB_and_model_formulation.html","id":"the-model","dir":"Articles","previous_headings":"","what":"The model","title":"Introduction to RprobitB and model formulation","text":"Assume observe choices \\(N\\) decision makers decide \\(J\\) alternatives \\(T\\) choice occasions.2 Specific decision maker, alternative choice occasion, furthermore observe \\(P_f+P_r\\) choice attributes use explain choices. first \\(P_f\\) attributes connected fixed coefficients, \\(P_r\\) attributes random coefficients following joint distribution mixed across decision makers. Person \\(n\\)’s utility \\(\\tilde{U}_{ntj}\\) alternative \\(j\\) choice occasion \\(t\\) modeled \\[\\begin{equation} \\tilde{U}_{ntj} = \\tilde{W}_{ntj}'\\alpha + \\tilde{X}_{ntj}'\\beta_n + \\tilde{\\epsilon}_{ntj} \\end{equation}\\] \\(n=1,\\dots,N\\), \\(t=1,\\dots,T\\) \\(j=1,\\dots,J\\), \\(\\tilde{W}_{ntj}\\) vector \\(P_f\\) characteristics \\(j\\) faced \\(n\\) \\(t\\) corresponding fixed coefficient vector \\(\\alpha \\{\\mathbb R}^{P_f}\\), \\(\\tilde{X}_{ntj}\\) vector \\(P_r\\) characteristics \\(j\\) faced \\(n\\) \\(t\\) corresponding random, decision maker-specific coefficient vector \\(\\beta_n \\{\\mathbb R}^{P_r}\\), \\(\\beta_n\\) distributed according \\(P_r\\)-variate distribution \\(g_{P_r}\\), \\((\\tilde{\\epsilon}_{nt:}) = (\\tilde{\\epsilon}_{nt1},\\dots,\\tilde{\\epsilon}_{ntJ})' \\sim \\text{MVN}_{J} (0,\\tilde{\\Sigma})\\) models’ error term vector \\(n\\) \\(t\\), probit model assumed multivariate normally distributed zero mean covariance matrix \\(\\tilde{\\Sigma}\\).","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/articles/introduction_to_RprobitB_and_model_formulation.html","id":"normalization","dir":"Articles","previous_headings":"The model","what":"Normalization","title":"Introduction to RprobitB and model formulation","text":"well known, utility model needs normalized respect level scale order identified. Therefore, consider transformed model \\[\\begin{equation} U_{ntj} = W_{ntj}'\\alpha + X_{ntj}'\\beta_n + \\epsilon_{ntj}, \\end{equation}\\] \\(n=1,\\dots,N\\), \\(t=1,\\dots,T\\) \\(j=1,\\dots,J-1\\), (choosing \\(J\\) reference alternative) \\(U_{ntj}=\\tilde{U}_{ntj} - \\tilde{U}_{ntJ}\\), \\(W_{ntj}=\\tilde{W}_{ntj}-\\tilde{W}_{ntJ}\\), \\(X_{ntj}=\\tilde{X}_{ntj}-\\tilde{X}_{ntJ}\\) \\(\\epsilon_{ntj}=\\tilde{\\epsilon}_{ntj}-\\tilde{\\epsilon}_{ntJ}\\), \\((\\epsilon_{nt:}) = (\\epsilon_{nt1},...,\\epsilon_{nt(J-1)})' \\sim \\text{MVN}_{J-1} (0,\\Sigma)\\) \\(\\Sigma\\) denotes covariance matrix top-left element restricted one.3","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/articles/introduction_to_RprobitB_and_model_formulation.html","id":"linking-the-latent-utility-to-the-choices","dir":"Articles","previous_headings":"The model","what":"Linking the latent utility to the choices","title":"Introduction to RprobitB and model formulation","text":"Let \\(y_{nt}=j\\) denote event decision maker \\(n\\) chooses alternative \\(j\\) choice occasion \\(t\\). Assuming utility maximizing behavior decision makers, decisions linked utilities via \\[\\begin{equation} y_{nt} = \\sum_{j=1}^{J-1} j\\cdot 1 \\left (U_{ntj}=\\max_i U_{nti}>0 \\right) + J \\cdot 1\\left (U_{ntj}<0 ~\\text{}~j\\right),  \\end{equation}\\] \\(1()\\) equals \\(1\\) condition \\(\\) true \\(0\\) else.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/articles/introduction_to_RprobitB_and_model_formulation.html","id":"approximating-the-mixing-distribution","dir":"Articles","previous_headings":"The model","what":"Approximating the mixing distribution","title":"Introduction to RprobitB and model formulation","text":"approximate mixing distribution \\(g_{P_r}\\) random coefficients4 \\(\\beta=(\\beta_n)_{n}\\) mixture \\(P_r\\)-variate normal densities \\(\\phi_{P_r}\\) mean vectors \\(b=(b_c)_{c}\\) covariance matrices \\(\\Omega=(\\Omega_c)_{c}\\) using \\(C\\) components, .e. \\[\\begin{equation} \\beta_n\\mid b,\\Omega \\sim \\sum_{c=1}^{C} s_c \\phi_{P_r} (\\cdot \\mid b_c,\\Omega_c), \\end{equation}\\] \\((s_c)_{c}\\) weights satisfying \\(0 < s_c\\leq 1\\) \\(c=1,\\dots,C\\) \\(\\sum_c s_c=1\\).","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/articles/introduction_to_RprobitB_and_model_formulation.html","id":"interpreting-the-latent-classes","dir":"Articles","previous_headings":"The model","what":"Interpreting the latent classes","title":"Introduction to RprobitB and model formulation","text":"One interpretation latent class model obtained introducing variables \\(z=(z_n)_n\\) allocating decision maker \\(n\\) class \\(c\\) probability \\(s_c\\), .e. \\[\\begin{equation} \\text{Prob}(z_n=c)=s_c \\quad \\text{} \\quad \\beta_n \\mid z,b,\\Omega \\sim \\phi_{P_r}(\\cdot \\mid b_{z_n},\\Omega_{z_n}). \\end{equation}\\] call model latent class mixed multinomial probit model.5","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/articles/model_fitting.html","id":"prior-settings","dir":"Articles","previous_headings":"","what":"Prior settings","title":"Model fitting","text":"Bayesian analysis enables impose prior beliefs model parameters. possible either express strong prior knowledge using informative prior distributions express vague knowledge using diffuse prior distributions. RprobitB applies following conjugate priors: \\((s_1,\\dots,s_C)\\sim D_C(\\delta)\\), \\(D_C(\\delta)\\) denotes \\(C\\)-dimensional Dirichlet distribution concentration parameter vector \\(\\delta = (\\delta_1,\\dots,\\delta_C)\\), \\(\\alpha\\sim \\text{MVN}{P_f}(\\psi,\\Psi)\\), \\(b_c \\sim \\text{MVN}{P_r}(\\xi,\\Xi)\\), independent \\(c\\), \\(\\Omega_c \\sim W^{-1}_{P_r}(\\nu,\\Theta)\\), independent \\(c\\), \\(W^{-1}_{P_r}(\\nu,\\Theta)\\) denotes \\(P_r\\)-dimensional inverse Wishart distribution \\(\\nu\\) degrees freedom scale matrix \\(\\Theta\\), \\(\\Sigma \\sim W^{-1}_{J-1}(\\kappa,\\Lambda)\\). Per default, RprobitB applies diffuse prior approach, setting \\(\\delta_1=\\dots=\\delta_C=1\\); \\(\\psi\\) \\(\\xi\\) equal zero vector; \\(\\Psi\\) \\(\\Xi\\) equal identity matrix; \\(\\nu\\) \\(\\kappa\\) equal \\(P_r+2\\) \\(J+1\\), respectively (obtain proper priors); \\(\\Theta\\) \\(\\Lambda\\) equal identity matrix. Alternatively, parameters can chosen based estimation results similar choice settings, resulting informative priors.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/articles/model_fitting.html","id":"bayes-estimation-of-the-probit-model-via-gibbs-sampling","dir":"Articles","previous_headings":"","what":"Bayes estimation of the probit model via Gibbs sampling","title":"Model fitting","text":"Bayesian analysis (latent class) (mixed) (multinomial) probit model builds upon work (McCulloch Rossi 1994), (Nobile 1998), (Allenby Rossi 1998), (Imai Dyk 2005). key ingredient concept data augmentation, cf. (Albert Chib 1993), treats latent utilities parameters . Conditional latent utilities, multinomial probit model constitutes standard Bayesian linear regression set-, renders drawing posterior distribution feasible without need evaluate likelihood. Gibbs sampling joint posterior distribution latent class mixed multinomial probit model proceeds iteratively drawing updating model parameter conditional parameters. class weights drawn Dirichlet distribution \\[\\begin{equation} (s_1,\\dots,s_C)\\mid \\delta,z \\sim D_C(\\delta_1+m_1,\\dots,\\delta_C+m_C), \\end{equation}\\] \\(c=1,\\dots,C\\), \\(m_c=\\#\\{n:z_n=c\\}\\) denotes current absolute class size. Mind model invariant permutations class labels \\(1,\\dots,C\\). reason, accept update ordering \\(s_1<\\dots<s_C\\) holds, thereby ensuring unique labeling classes. Independently \\(n\\), update allocation variables \\((z_n)_n\\) conditional distribution \\[\\begin{equation} \\text{Prob}(z_n=c\\mid s,\\beta,b,\\Omega )=\\frac{s_c\\phi_{P_r}(\\beta_n\\mid b_c,\\Omega_c)}{\\sum_c s_c\\phi_{P_r}(\\beta_n\\mid b_c,\\Omega_c)}. \\end{equation}\\] class means \\((b_c)_c\\) updated independently \\(c\\) via \\[\\begin{equation} b_c\\mid \\Xi,\\Omega,\\xi,z,\\beta \\sim\\text{MVN}{P_r}\\left( \\mu_{b_c}, \\Sigma_{b_c}  \\right), \\end{equation}\\] \\(\\mu_{b_c}=(\\Xi^{-1}+m_c\\Omega_c^{-1})^{-1}(\\Xi^{-1}\\xi +m_c\\Omega_c^{-1}\\bar{b}_c)\\), \\(\\Sigma_{b_c}=(\\Xi^{-1}+m_c\\Omega_c^{-1})^{-1}\\), \\(\\bar{b}_c=m_c^{-1}\\sum_{n:z_n=c} \\beta_n\\). class covariance matrices \\((\\Omega_c)_c\\) updated independently \\(c\\) via \\[\\begin{equation} \\Omega_c \\mid \\nu,\\Theta,z,\\beta,b \\sim W^{-1}_{P_r}(\\mu_{\\Omega_c},\\Sigma_{\\Omega_c}), \\end{equation}\\] \\(\\mu_{\\Omega_c}=\\nu+m_c\\) \\(\\Sigma_{\\Omega_c}=\\Theta^{-1} + \\sum_{n:z_n=c} (\\beta_n-b_c)(\\beta_n-b_c)'\\). Independently \\(n\\) \\(t\\) conditionally components, utility vectors \\((U_{nt:})\\) follow \\(J-1\\)-dimensional truncated multivariate normal distribution, truncation points determined choices \\(y_{nt}\\). sample truncated multivariate normal distribution, apply sub-Gibbs sampler, following approach : \\[\\begin{equation} U_{ntj} \\mid U_{nt(-j)},y_{nt},\\Sigma,W,\\alpha,X,\\beta  \\sim \\mathcal{N}(\\mu_{U_{ntj}},\\Sigma_{U_{ntj}}) \\cdot \\begin{cases} 1(U_{ntj}>\\max(U_{nt(-j)},0) ) & \\text{}~ y_{nt}=j\\\\ 1(U_{ntj}<\\max(U_{nt(-j)},0) ) & \\text{}~ y_{nt}\\neq j \\end{cases}, \\end{equation}\\] \\(U_{nt(-j)}\\) denotes vector \\((U_{nt:})\\) without element \\(U_{ntj}\\), \\(\\mathcal{N}\\) denotes univariate normal distribution, \\(\\Sigma_{U_{ntj}} = 1/(\\Sigma^{-1})_{jj}\\) \\[\\begin{equation} \\mu_{U_{ntj}} = W_{ntj}'\\alpha + X_{ntj}'\\beta_n - \\Sigma_{U_{ntj}} (\\Sigma^{-1})_{j(-j)}   (U_{nt(-j)} - W_{nt(-j)}'\\alpha - X_{nt(-j)}' \\beta_n ), \\end{equation}\\] \\((\\Sigma^{-1})_{jj}\\) denotes \\((j,j)\\)th element \\(\\Sigma^{-1}\\), \\((\\Sigma^{-1})_{j(-j)}\\) \\(j\\)th row without \\(j\\)th entry, \\(W_{nt(-j)}\\) \\(X_{nt(-j)}\\) coefficient matrices \\(W_{nt}\\) \\(X_{nt}\\), respectively, without \\(j\\)th column. Updating fixed coefficient vector \\(\\alpha\\) achieved applying formula Bayesian linear regression regressors \\(W_{nt}\\) regressands \\((U_{nt:})-X_{nt}'\\beta_n\\), .e. \\[\\begin{equation} \\alpha \\mid \\Psi,\\psi,W,\\Sigma,U,X,\\beta \\sim \\text{MVN}{P_f}(\\mu_\\alpha,\\Sigma_\\alpha), \\end{equation}\\] \\(\\mu_\\alpha = \\Sigma_\\alpha (\\Psi^{-1}\\psi + \\sum_{n=1,t=1}^{N,T} W_{nt} \\Sigma^{-1} ((U_{nt:})-X_{nt}'\\beta_n) )\\) \\(\\Sigma_\\alpha = (\\Psi^{-1} + \\sum_{n=1,t=1}^{N,T} W_{nt}\\Sigma^{-1} W_{nt}^{'} )^{-1}\\). Analogously \\(\\alpha\\), random coefficients \\((\\beta_n)_n\\) updated independently via \\[\\begin{equation} \\beta_n \\mid \\Omega,b,X,\\Sigma,U,W,\\alpha \\sim \\text{MVN}{P_r}(\\mu_{\\beta_n},\\Sigma_{\\beta_n}), \\end{equation}\\] \\(\\mu_{\\beta_n} = \\Sigma_{\\beta_n} (\\Omega_{z_n}^{-1}b_{z_n} + \\sum_{t=1}^{T} X_{nt} \\Sigma^{-1} (U_{nt}-W_{nt}'\\alpha) )\\) \\(\\Sigma_{\\beta_n} = (\\Omega_{z_n}^{-1} + \\sum_{t=1}^{T} X_{nt}\\Sigma^{-1} X_{nt}^{'} )^{-1}\\) . error term covariance matrix \\(\\Sigma\\) updated means \\[\\begin{equation} \\Sigma \\mid \\kappa,\\Lambda,U,W,\\alpha,X,\\beta \\sim W^{-1}_{J-1}(\\kappa+NT,\\Lambda+S), \\\\ \\end{equation}\\] \\(S = \\sum_{n=1,t=1}^{N,T} \\varepsilon_{nt} \\varepsilon_{nt}'\\) \\(\\varepsilon_{nt} = (U_{nt:}) - W_{nt}'\\alpha - X_{nt}'\\beta_n\\).","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/articles/model_fitting.html","id":"parameter-normalization","dir":"Articles","previous_headings":"","what":"Parameter normalization","title":"Model fitting","text":"Samples obtained scheme described still lack identification (see introductory vignette). Therefore, subsequent sampling, normalizations \\(\\alpha^{()}/\\sqrt{(\\Sigma^{()})_{11}}\\), \\(b_c^{()}/\\sqrt{(\\Sigma^{()})_{11}}\\), \\(\\Omega_c^{()}/(\\Sigma^{()})_{11}\\), \\(c=1,\\dots,C\\) \\(\\Sigma^{()}/(\\Sigma^{()})_{11}\\) required \\(\\)th updates iterations \\(\\), cf. (Imai Dyk 2005), \\((\\Sigma^{()})_{11}\\) denotes top-left element \\(\\Sigma^{()}\\). draws \\(s\\) \\(z\\) need normalized. draws \\(U\\) \\(\\beta\\) normalized results interest analysis. Alternatively, samples can normalized variance \\(\\Sigma\\) element \\(\\alpha\\) equals fixed non-negative value. normalization fitted model can changed afterwards via model output mcmc() scale named list three elements, determining parameter normalization, described .","code":"model = transform(model = model, scale = scale)"},{"path":"https://loelschlaeger.github.io/RprobitB/articles/model_fitting.html","id":"burning-and-thinning","dir":"Articles","previous_headings":"","what":"Burning and thinning","title":"Model fitting","text":"theory behind Gibbs sampling constitutes sequence samples produced updating scheme can considered Markov chain stationary distribution equal desired joint posterior distribution. takes certain number iterations stationary distribution approximated reasonably well. Therefore, common practice discard first \\(B\\) \\(R\\) samples (-called burn-period). Furthermore, correlation nearby samples expected. order obtain independent samples, consider every \\(Q\\)th sample averaging values compute parameter statistics like expectation standard deviation. Adequate values \\(R\\), \\(B\\) \\(Q\\) depend complexity considered Bayesian framework. Per default, RprobitB sets R = 1e4, B = R/2 Q = 10. independence samples can verified computing serial correlation convergence Gibbs sampler can checked considering trace plots.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/articles/model_fitting.html","id":"updating-the-number-of-latent-classes","dir":"Articles","previous_headings":"","what":"Updating the number of latent classes","title":"Model fitting","text":"Updating number \\(C\\) latent classes done within Gibbs sampler executing following weight-based updating scheme within second half burn-period2: remove class \\(c\\), \\(s_c<\\varepsilon_{\\text{min}}\\), .e. class weight \\(s_c\\) drops threshold \\(\\varepsilon_{\\text{min}}\\). case indicates class \\(c\\) negligible impact mixing distribution. split class \\(c\\) two classes \\(c_1\\) \\(c_2\\), \\(s_c>\\varepsilon_\\text{max}\\). case indicates class \\(c\\) high influence mixing distribution whose approximation can potentially improved increasing resolution directions high variance. Therefore, class means \\(b_{c_1}\\) \\(b_{c_2}\\) new classes \\(c_1\\) \\(c_2\\) shifted opposite directions class mean \\(b_c\\) old class \\(c\\) direction highest variance. join two classes \\(c_1\\) \\(c_2\\) one class \\(c\\), \\(\\lVert b_{c_1} - b_{c_2} \\rVert<\\varepsilon_{\\text{distmin}}\\), .e. euclidean distance class means \\(b_{c_1}\\) \\(b_{c_2}\\) drops threshold \\(\\varepsilon_{\\text{distmin}}\\). case indicates location redundancy repealed. parameters \\(c\\) assigned adding values \\(s\\) \\(c_1\\) \\(c_2\\) averaging values \\(b\\) \\(\\Omega\\). rules contain choices values \\(\\varepsilon_{\\text{min}}\\), \\(\\varepsilon_{\\text{max}}\\) \\(\\varepsilon_{\\text{distmin}}\\). adequate value \\(\\varepsilon_{\\text{distmin}}\\) depends scale parameters. Per default, RprobitB sets epsmin = 0.01, epsmax = 0.99, distmin = 0.1.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/articles/model_fitting.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Model fitting","text":"","code":"### probit model p = simulate(form = choice ~ var | 0, N = 100, T = 10, J = 2) m1 = mcmc(data = p) ### multinomial probit model mnp = simulate(form = choice ~ var | 0, N = 100, T = 10, J = 3) m2 = mcmc(data = mnp) ### mixed multinomial probit model mmnp = simulate(form = choice ~ 0 | var, N = 100, T = 10, J = 3, re = \"var\") m3 = mcmc(data = mmnp) ### latent classes mixed multinomial probit model lcmmnp = simulate(form = choice ~ 0 | var, N = 100, T = 10, J = 3, re = \"var\",                   parm = list(\"C\" = 2)) m4 = mcmc(data = lcmmnp, latent_classes = list(\"C\" = 2)) ### update of latent classes m5 = mcmc(data = lcmmnp, latent_classes = list(\"update\" = TRUE))"},{"path":[]},{"path":"https://loelschlaeger.github.io/RprobitB/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lennart Oelschläger. Author, maintainer. Dietmar Bauer. Author. Sebastian Büscher. Contributor. Manuel Batram. Contributor.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"OelschlÃ¤ger L, Bauer D (2021). RprobitB: Bayes Estimation Latent Class Mixed Multinomial Probit Models. R package version 1.0.0.9000.","code":"@Manual{,   title = {RprobitB: Bayes Estimation of Latent Class Mixed Multinomial Probit Models},   author = {Lennart Oelschläger and Dietmar Bauer},   year = {2021},   note = {R package version 1.0.0.9000}, }"},{"path":"https://loelschlaeger.github.io/RprobitB/index.html","id":"rprobitb-","dir":"","previous_headings":"","what":"Fit mixed probit models to choice data","title":"Fit mixed probit models to choice data","text":"goal RprobitB fit mixed probit models choice data. package differs comparable packages two ways: Bayesian estimation focus taste heterogeneity.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fit mixed probit models to choice data","text":"can install released version RprobitB CRAN : development version GitHub :","code":"install.packages(\"RprobitB\") # install.packages(\"devtools\") devtools::install_github(\"loelschlaeger/RprobitB\")"},{"path":"https://loelschlaeger.github.io/RprobitB/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Fit mixed probit models to choice data","text":"package documented several vignettes:","code":"browseVignettes(\"RprobitB\")"},{"path":"https://loelschlaeger.github.io/RprobitB/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Fit mixed probit models to choice data","text":"basic example show fit mixed probit model make choice predictions: First, load package. , prepare choice data, example Train dataset mlogit package. , put 30 percent data aside later --sample prediction. Call mcmc function estimate model. summary method gives overview estimation. Let’s visualize estimated mixture distribution price coefficient.  predict function makes choice predictions compares prediction actual choices.","code":"library(RprobitB) #> Thanks for using RprobitB 1.0.0, happy choice modeling! #> See https://loelschlaeger.github.io/RprobitB for help. #> Type 'citation(\"RprobitB\")' for citing this R package. #>  #> Attache Paket: 'RprobitB' #> Die folgenden Objekte sind maskiert von 'package:stats': #>  #>     predict, simulate #> Das folgende Objekt ist maskiert 'package:base': #>  #>     transform data(\"Train\", package = \"mlogit\") data = prepare(form = choice ~ price | 0 | time + comfort + change,                choice_data = Train,                re = \"price\",                standardize = \"all\",                test_prop = 0.3) model = mcmc(data$train) #> Iteration Info                   ETA (min) #>         0 started Gibbs sampling           #>      1000                                2 #>      2000                                2 #>      3000                                2 #>      4000                                2 #>      5000                                1 #>      6000                                1 #>      7000                                1 #>      8000                                1 #>      9000                                1 #>     10000 done, total time: 2 min summary(model) #> Probit model 'choice ~ price | 0 | time + comfort + change'. #>  #> MCMC settings: #> - R: 10000  #> - B: 5000  #> - Q: 1  #>  #> Normalization: #> - Level: Utility differences with respect to alternative 2. #> - Scale: Coefficient of the 1. error term variance in Sigma fixed to 1. #>  #> Legend of alternatives: #>   name #> 1    A #> 2    B #>  #> Legend of linear coefficients: #>        name    re #> 1    time_A FALSE #> 2    time_B FALSE #> 3 comfort_A FALSE #> 4 comfort_B FALSE #> 5  change_A FALSE #> 6  change_B FALSE #> 7     price  TRUE #>  #> Latent classes: 1  #> - Update: FALSE  #>  #> Parameter statistics: #>           mean      sd      R^ #>  alpha #>                                #>      1   -0.84    0.08    1.00 #>      2   -0.87    0.08    1.00 #>      3   -0.52    0.05    1.00 #>      4   -0.50    0.05    1.00 #>      5   -0.27    0.04    1.01 #>      6   -0.23    0.05    1.00 #>  #>  s #>                                #>      1    1.00    0.00     NaN #>  #>  b #>                                #>    1.1   -2.24    0.26    1.00 #>  #>  Omega #>                                #>  1.1,1    3.21    0.87    1.00 #>  #>  Sigma #>                                #>    1,1    1.00    0.00    1.00 plot(model, type = \"mixture\") predict(model, data$test) #>     predicted #> true   A   B #>    A 306 128 #>    B 147 309"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/check_distr.html","id":null,"dir":"Reference","previous_headings":"","what":"Check distr. — check_distr","title":"Check distr. — check_distr","text":"function checks input distr.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/check_distr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check distr. — check_distr","text":"","code":"check_distr(distr)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/check_distr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check distr. — check_distr","text":"distr named list number generation functions covariates drawn. Covariates distribution specified drawn standard normal distribution. element distr must form \"cov\" = list(\"name\" = \"<name number generation function>\",...), cov name covariate ... required parameters number generation function. Possible number generation functions functions type r* base R (e.g. rnorm) required parameters (except n) must specified, function sample, required parameters (except size) must specified.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/check_distr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check distr. — check_distr","text":"checked input distr.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/check_form.html","id":null,"dir":"Reference","previous_headings":"","what":"Check form. — check_form","title":"Check form. — check_form","text":"function checks input form.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/check_form.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check form. — check_form","text":"","code":"check_form(form, re = NULL)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/check_form.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check form. — check_form","text":"form formula object used specify probit model. structure choice ~ | B | C, names alternative choice situation specific covariates generic coefficient, B names choice situation specific covariates alternative specific coefficients, C names alternative choice situation specific covariates alternative specific coefficients. Separate multiple covariates one type + sign. default, alternative specific constants (ASCs) added model (except last alternative). can removed adding +0 second spot. See vignette vignette(\"data_management\", package = \"RprobitB\") details. re character (vector) covariates form random effects. re = NULL (default), random effects. random effects alternative specific constants, include \"ASC\" re.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/check_form.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check form. — check_form","text":"choice: dependent variable form. re: input re, covariates part form removed. vars: list three character vectors covariate names three covariate types. ASC: boolean, determining whether model ASCs.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/check_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Check prior. — check_prior","title":"Check prior. — check_prior","text":"function checks input prior sets missing values default values.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/check_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check prior. — check_prior","text":"","code":"check_prior(prior, P_f, P_r, J)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/check_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check prior. — check_prior","text":"prior named list parameters prior distributions normalized parameters: eta: mean vector length P_f normal prior alpha. Psi: covariance matrix dimension P_f x P_f normal prior alpha. delta: concentration parameter length 1 Dirichlet prior s. xi: mean vector length P_r normal prior b_c. D: covariance matrix dimension P_r x P_r normal prior b_c. nu: degrees freedom (natural number greater P_r) Inverse Wishart prior Omega_c. Theta: scale matrix dimension P_r x P_r Inverse Wishart prior Omega_c. kappa: degrees freedom (natural number greater J-1) Inverse Wishart prior Sigma. E: scale matrix dimension J-1 x J-1 Inverse Wishart prior Sigma. P_f number covariates connected fixed coefficient (can 0). P_r number covariates connected random coefficient (can 0). J number (greater equal 2) choice alternatives.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/check_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check prior. — check_prior","text":"checked input prior","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/choice_probs.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute choice probabilities of an RprobitB_model. — choice_probs","title":"Compute choice probabilities of an RprobitB_model. — choice_probs","text":"function computes choice probabilities RprobitB_model.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/choice_probs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute choice probabilities of an RprobitB_model. — choice_probs","text":"","code":"choice_probs(x, data = NULL, at_true = FALSE)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/choice_probs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute choice probabilities of an RprobitB_model. — choice_probs","text":"x object class RprobitB_model. data Either NULL object class RprobitB_data. at_true TRUE, choice probabilities computed true parameters.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/choice_probs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute choice probabilities of an RprobitB_model. — choice_probs","text":"data frame, choice situations rows alternatives columns.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/classify.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify deciders. — classify","title":"Classify deciders. — classify","text":"function classifies deciders based estimated latent classes.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/classify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify deciders. — classify","text":"","code":"classify(x)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/classify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify deciders. — classify","text":"x object class RprobitB_model.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/classify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify deciders. — classify","text":"data frame deciders id latent class number.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare fitted models. — compare","title":"Compare fitted models. — compare","text":"function computes model comparison criteria.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare fitted models. — compare","text":"","code":"compare(...)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare fitted models. — compare","text":"... One objects class RprobitB_model.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/compare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare fitted models. — compare","text":"matrix model's number parameters, log-likelihood, AIC, BIC value.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/compute_choice_probabilities.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute probit choice probabilities for a single choice situation. — compute_choice_probabilities","title":"Compute probit choice probabilities for a single choice situation. — compute_choice_probabilities","text":"function computes probit choice probabilities single choice situation J alternatives.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/compute_choice_probabilities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute probit choice probabilities for a single choice situation. — compute_choice_probabilities","text":"","code":"compute_choice_probabilities(X, parameter)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/compute_choice_probabilities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute probit choice probabilities for a single choice situation. — compute_choice_probabilities","text":"X matrix covariates J rows P_f + P_r columns, first P_f columns connected fixed coefficients last P_r columns connected random coefficients. parameter object class RprobitB_parameter.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/compute_choice_probabilities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute probit choice probabilities for a single choice situation. — compute_choice_probabilities","text":"probability vector length J.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/compute_log_likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute log-likelihood of an RprobitB_model. — compute_log_likelihood","title":"Compute log-likelihood of an RprobitB_model. — compute_log_likelihood","text":"function computes log-likelihood RprobitB_model.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/compute_log_likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute log-likelihood of an RprobitB_model. — compute_log_likelihood","text":"","code":"compute_log_likelihood(x, at_true = FALSE)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/compute_log_likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute log-likelihood of an RprobitB_model. — compute_log_likelihood","text":"x object class RprobitB_model. at_true TRUE, choice probabilities computed true parameters.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/compute_log_likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute log-likelihood of an RprobitB_model. — compute_log_likelihood","text":"log-likelihood value.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/compute_point_estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute point estimates of an RprobitB_model. — compute_point_estimates","title":"Compute point estimates of an RprobitB_model. — compute_point_estimates","text":"function computes point estimates RprobitB_model. Per default, mean Gibbs samples used point estimate. However, statistic computes single numeric value vector Gibbs samples can specified FUN.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/compute_point_estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute point estimates of an RprobitB_model. — compute_point_estimates","text":"","code":"compute_point_estimates(x, FUN = mean)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/compute_point_estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute point estimates of an RprobitB_model. — compute_point_estimates","text":"x object class RprobitB_model. FUN function computes single numeric value vector numeric values.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/compute_point_estimates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute point estimates of an RprobitB_model. — compute_point_estimates","text":"object class RprobitB_parameter.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/compute_sufficient_statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute sufficient statistics. — compute_sufficient_statistics","title":"Compute sufficient statistics. — compute_sufficient_statistics","text":"function computes sufficient statistics data estimation.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/compute_sufficient_statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute sufficient statistics. — compute_sufficient_statistics","text":"","code":"compute_sufficient_statistics(data, normalization)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/compute_sufficient_statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute sufficient statistics. — compute_sufficient_statistics","text":"data object class RprobitB_data. normalization object class RprobitB_normalization.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/compute_sufficient_statistics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute sufficient statistics. — compute_sufficient_statistics","text":"list sufficient statistics.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/create_labels_alpha.html","id":null,"dir":"Reference","previous_headings":"","what":"Create labels for alpha. — create_labels_alpha","title":"Create labels for alpha. — create_labels_alpha","text":"function creates labels model parameter alpha.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/create_labels_alpha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create labels for alpha. — create_labels_alpha","text":"","code":"create_labels_alpha(P_f)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/create_labels_alpha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create labels for alpha. — create_labels_alpha","text":"P_f number covariates connected fixed coefficient (can 0).","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/create_labels_alpha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create labels for alpha. — create_labels_alpha","text":"vector labels model parameter alpha.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/create_labels_b.html","id":null,"dir":"Reference","previous_headings":"","what":"Create labels for b. — create_labels_b","title":"Create labels for b. — create_labels_b","text":"function creates labels model parameter b.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/create_labels_b.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create labels for b. — create_labels_b","text":"","code":"create_labels_b(P_r, C)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/create_labels_b.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create labels for b. — create_labels_b","text":"P_r number covariates connected random coefficient (can 0). C number latent classes.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/create_labels_b.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create labels for b. — create_labels_b","text":"vector labels model parameter b.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/create_labels_Omega.html","id":null,"dir":"Reference","previous_headings":"","what":"Create labels for Omega. — create_labels_Omega","title":"Create labels for Omega. — create_labels_Omega","text":"function creates labels model parameter Omega.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/create_labels_Omega.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create labels for Omega. — create_labels_Omega","text":"","code":"create_labels_Omega(P_r, C, cov_sym)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/create_labels_Omega.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create labels for Omega. — create_labels_Omega","text":"P_r number covariates connected random coefficient (can 0). C number latent classes. cov_sym TRUE considers symmetric covariance matrix elements.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/create_labels_Omega.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create labels for Omega. — create_labels_Omega","text":"vector labels model parameter Omega.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/create_labels_s.html","id":null,"dir":"Reference","previous_headings":"","what":"Create labels for s. — create_labels_s","title":"Create labels for s. — create_labels_s","text":"function creates labels model parameter s.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/create_labels_s.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create labels for s. — create_labels_s","text":"","code":"create_labels_s(P_r, C)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/create_labels_s.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create labels for s. — create_labels_s","text":"P_r number covariates connected random coefficient (can 0). C number latent classes.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/create_labels_s.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create labels for s. — create_labels_s","text":"vector labels model parameter s.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/create_labels_Sigma.html","id":null,"dir":"Reference","previous_headings":"","what":"Create labels for Sigma. — create_labels_Sigma","title":"Create labels for Sigma. — create_labels_Sigma","text":"function creates labels model parameter Sigma.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/create_labels_Sigma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create labels for Sigma. — create_labels_Sigma","text":"","code":"create_labels_Sigma(J, cov_sym)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/create_labels_Sigma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create labels for Sigma. — create_labels_Sigma","text":"J number (greater equal 2) choice alternatives. cov_sym TRUE considers symmetric covariance matrix elements.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/create_labels_Sigma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create labels for Sigma. — create_labels_Sigma","text":"vector labels model parameter Sigma.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/create_parameter_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Create parameters labels. — create_parameter_labels","title":"Create parameters labels. — create_parameter_labels","text":"function creates labels model parameters.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/create_parameter_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create parameters labels. — create_parameter_labels","text":"","code":"create_parameter_labels(   P_f,   P_r,   J,   C,   cov_sym,   keep_par = c(\"s\", \"alpha\", \"b\", \"Omega\", \"Sigma\"),   drop_par = NULL )"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/create_parameter_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create parameters labels. — create_parameter_labels","text":"P_f number covariates connected fixed coefficient (can 0). P_r number covariates connected random coefficient (can 0). J number (greater equal 2) choice alternatives. C number latent classes. cov_sym TRUE considers symmetric covariance matrix elements. keep_par vector parameter names kept. drop_par vector parameter names get dropped.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/create_parameter_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create parameters labels. — create_parameter_labels","text":"list labels model parameters.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/delta.html","id":null,"dir":"Reference","previous_headings":"","what":"Matrix difference operator. — delta","title":"Matrix difference operator. — delta","text":"function creates difference operator matrix delta subtracting matrix row matrix rows.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/delta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matrix difference operator. — delta","text":"","code":"delta(J, i)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/delta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matrix difference operator. — delta","text":"J number matrix rows. row number respect differences computed.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/delta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matrix difference operator. — delta","text":"matrix J-1 rows.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/delta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Matrix difference operator. — delta","text":"Given matrix x J rows, delta(,J) %*% x computes differences respect row .","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/delta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Matrix difference operator. — delta","text":"","code":"J <- 2 x <- matrix(1, nrow = J, ncol = 2) delta(J, 1) %*% x #>      [,1] [,2] #> [1,]    0    0"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/filter_gibbs_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Gibbs samples. — filter_gibbs_samples","title":"Filter Gibbs samples. — filter_gibbs_samples","text":"function filters Gibbs samples.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/filter_gibbs_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Gibbs samples. — filter_gibbs_samples","text":"","code":"filter_gibbs_samples(   x,   P_f,   P_r,   J,   C,   cov_sym,   keep_par = c(\"s\", \"alpha\", \"b\", \"Omega\", \"Sigma\"),   drop_par = NULL )"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/filter_gibbs_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Gibbs samples. — filter_gibbs_samples","text":"x object class RprobitB_gibbs_samples. P_f number covariates connected fixed coefficient (can 0). P_r number covariates connected random coefficient (can 0). J number (greater equal 2) choice alternatives. C number latent classes. cov_sym TRUE considers symmetric covariance matrix elements. keep_par vector parameter names kept. drop_par vector parameter names get dropped.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/filter_gibbs_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Gibbs samples. — filter_gibbs_samples","text":"object class RprobitB_gibbs_samples filtered labels create_parameter_labels(P_f, P_r, J, C, cov_sym, keep_par, drop_par).","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/gibbs_sampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Gibbs sampler. — gibbs_sampling","title":"Gibbs sampler. — gibbs_sampling","text":"function performs Gibbs sampling RprobitB package.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/gibbs_sampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gibbs sampler. — gibbs_sampling","text":"","code":"gibbs_sampling(   R,   B,   print_progress,   N,   J,   P_f,   P_r,   latent_classes,   sufficient_statistics,   prior,   init )"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/gibbs_sampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gibbs sampler. — gibbs_sampling","text":"R number iterations Gibbs sampler. B length burn-period, .e. non-negative number samples discarded. print_progress boolean, determining whether print Gibbs sampler progress estimated remaining computation time. N number (greater equal 1) decision makers. J number (greater equal 2) choice alternatives. P_f number covariates connected fixed coefficient (can 0). P_r number covariates connected random coefficient (can 0). latent_classes Either NULL list parameters specifying number latent classes: C: number (greater equal 1) latent classes, set 1 per default ignored P_r = 0. update = TRUE, C equals initial number classes. update: boolean, determining whether update C. Ignored P_r = 0. update = FALSE, following elements ignored. Cmax: maximum number latent classes. buffer: updating buffer (number iterations wait next update). epsmin: threshold weight removing latent classes (0 1). epsmax: threshold weight splitting latent classes (0 1). distmin: threshold difference means joining latent classes (non-negative). sufficient_statistics output compute_sufficient_statistics. prior named list parameters prior distributions normalized parameters: eta: mean vector length P_f normal prior alpha. Psi: covariance matrix dimension P_f x P_f normal prior alpha. delta: concentration parameter length 1 Dirichlet prior s. xi: mean vector length P_r normal prior b_c. D: covariance matrix dimension P_r x P_r normal prior b_c. nu: degrees freedom (natural number greater P_r) Inverse Wishart prior Omega_c. Theta: scale matrix dimension P_r x P_r Inverse Wishart prior Omega_c. kappa: degrees freedom (natural number greater J-1) Inverse Wishart prior Sigma. E: scale matrix dimension J-1 x J-1 Inverse Wishart prior Sigma. init output set_initial_gibbs_values.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/gibbs_sampling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gibbs sampler. — gibbs_sampling","text":"list Gibbs samples Sigma, alpha (P_f>0) s, b, Omega vector classifications (P_r>0).","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/is_covariance_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Check covariance matrix properties. — is_covariance_matrix","title":"Check covariance matrix properties. — is_covariance_matrix","text":"function checks input proper covariance matrix, .e. symmetric, numeric matrix non-negative eigenvalues.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/is_covariance_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check covariance matrix properties. — is_covariance_matrix","text":"","code":"is_covariance_matrix(x)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/is_covariance_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check covariance matrix properties. — is_covariance_matrix","text":"x matrix.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/is_covariance_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check covariance matrix properties. — is_covariance_matrix","text":"boolean, TRUE x proper covariance matrix.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/is_covariance_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check covariance matrix properties. — is_covariance_matrix","text":"","code":"x <- diag(2) is_covariance_matrix(x) #> [1] TRUE"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/mcmc.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Markov chain Monte Carlo simulation for fitting a (latent class)\r\n(mixed) (multinomial) probit model. — mcmc","title":"Perform Markov chain Monte Carlo simulation for fitting a (latent class)\r\n(mixed) (multinomial) probit model. — mcmc","text":"function performs Markov chain Monte Carlo simulation fitting (latent class) (mixed) (multinomial) probit model discrete choice data.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/mcmc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Markov chain Monte Carlo simulation for fitting a (latent class)\r\n(mixed) (multinomial) probit model. — mcmc","text":"","code":"mcmc(   data,   scale = list(parameter = \"s\", index = 1, value = 1),   R = 10000,   B = R/2,   Q = 1,   print_progress = TRUE,   prior = NULL,   latent_classes = NULL,   seed = NULL )"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/mcmc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Markov chain Monte Carlo simulation for fitting a (latent class)\r\n(mixed) (multinomial) probit model. — mcmc","text":"data object class RprobitB_data. scale named list three elements, determining parameter normalization respect utility scale: parameter: Either \"\" (linear coefficient \"alpha\") \"s\" (variance error-term covariance matrix \"Sigma\"). index: index parameter gets fixed. value: value fixed parameter. R number iterations Gibbs sampler. B length burn-period, .e. non-negative number samples discarded. Q thinning factor Gibbs samples, .e. every Qth sample kept. print_progress boolean, determining whether print Gibbs sampler progress estimated remaining computation time. prior named list parameters prior distributions normalized parameters: eta: mean vector length P_f normal prior alpha. Psi: covariance matrix dimension P_f x P_f normal prior alpha. delta: concentration parameter length 1 Dirichlet prior s. xi: mean vector length P_r normal prior b_c. D: covariance matrix dimension P_r x P_r normal prior b_c. nu: degrees freedom (natural number greater P_r) Inverse Wishart prior Omega_c. Theta: scale matrix dimension P_r x P_r Inverse Wishart prior Omega_c. kappa: degrees freedom (natural number greater J-1) Inverse Wishart prior Sigma. E: scale matrix dimension J-1 x J-1 Inverse Wishart prior Sigma. latent_classes Either NULL list parameters specifying number latent classes: C: number (greater equal 1) latent classes, set 1 per default ignored P_r = 0. update = TRUE, C equals initial number classes. update: boolean, determining whether update C. Ignored P_r = 0. update = FALSE, following elements ignored. Cmax: maximum number latent classes. buffer: updating buffer (number iterations wait next update). epsmin: threshold weight removing latent classes (0 1). epsmax: threshold weight splitting latent classes (0 1). distmin: threshold difference means joining latent classes (non-negative). seed Set seed Gibbs sampling.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/mcmc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Markov chain Monte Carlo simulation for fitting a (latent class)\r\n(mixed) (multinomial) probit model. — mcmc","text":"object class RprobitB_model.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/mcmc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform Markov chain Monte Carlo simulation for fitting a (latent class)\r\n(mixed) (multinomial) probit model. — mcmc","text":"See vignette \"Model fitting\" details: vignette(\"model_fitting\", package = \"RprobitB\").","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/mcmc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Markov chain Monte Carlo simulation for fitting a (latent class)\r\n(mixed) (multinomial) probit model. — mcmc","text":"","code":"if (FALSE) { ### probit model p <- simulate(form = choice ~ var | 0, N = 100, T = 10, J = 2, seed = 1) m1 <- mcmc(data = p, seed = 1)  ### multinomial probit model mnp <- simulate(form = choice ~ var | 0, N = 100, T = 10, J = 3, seed = 1) m2 <- mcmc(data = mnp, seed = 1)  ### mixed multinomial probit model mmnp <- simulate(   form = choice ~ 0 | var, N = 100, T = 10, J = 3, re = \"var\",   seed = 1 ) m3 <- mcmc(data = mmnp, seed = 1)  ### mixed multinomial probit model with 2 latent classes lcmmnp <- simulate(   form = choice ~ 0 | var, N = 100, T = 10, J = 3,   re = \"var\", seed = 1, C = 2 ) m4 <- mcmc(data = lcmmnp, latent_classes = list(\"C\" = 2), seed = 1)  ### update of latent classes m5 <- mcmc(data = lcmmnp, latent_classes = list(\"update\" = TRUE), seed = 1) }"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/overview_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Overview of effects. — overview_effects","title":"Overview of effects. — overview_effects","text":"function gives overview linear coefficients whether connected random effects.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/overview_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Overview of effects. — overview_effects","text":"","code":"overview_effects(form, re = NULL, alternatives)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/overview_effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Overview of effects. — overview_effects","text":"form formula object used specify probit model. structure choice ~ | B | C, names alternative choice situation specific covariates generic coefficient, B names choice situation specific covariates alternative specific coefficients, C names alternative choice situation specific covariates alternative specific coefficients. Separate multiple covariates one type + sign. default, alternative specific constants (ASCs) added model (except last alternative). can removed adding +0 second spot. See vignette vignette(\"data_management\", package = \"RprobitB\") details. re character (vector) covariates form random effects. re = NULL (default), random effects. random effects alternative specific constants, include \"ASC\" re. alternatives character vector names choice alternatives. specified, choice set defined observed choices.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/overview_effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Overview of effects. — overview_effects","text":"data frame coefficient names booleans indicating whether connected random effects.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/plot.RprobitB_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for RprobitB_model. — plot.RprobitB_model","title":"Plot method for RprobitB_model. — plot.RprobitB_model","text":"function plot method object class RprobitB_model.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/plot.RprobitB_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for RprobitB_model. — plot.RprobitB_model","text":"","code":"# S3 method for RprobitB_model plot(x, type = \"effects\", ignore = NULL, ...)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/plot.RprobitB_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for RprobitB_model. — plot.RprobitB_model","text":"x object class RprobitB_model. type type plot, can one : \"effects\" (default) visualizing linear effects, \"mixture\" visualizing mixture distribution, \"acf\" autocorrelation plots Gibbs samples, \"trace\" trace plots Gibbs samples. ignore character (vector) covariate parameter names get visualized. ... Ignored.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/plot.RprobitB_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for RprobitB_model. — plot.RprobitB_model","text":"return value. Draws plot current device.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/plot_acf.html","id":null,"dir":"Reference","previous_headings":"","what":"Autocorrelation plot of Gibbs samples. — plot_acf","title":"Autocorrelation plot of Gibbs samples. — plot_acf","text":"function plots autocorrelation Gibbs samples, including total sample size SS, effective sample size ESS factor SS/ESS.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/plot_acf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Autocorrelation plot of Gibbs samples. — plot_acf","text":"","code":"plot_acf(gibbs_samples, par_labels)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/plot_acf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Autocorrelation plot of Gibbs samples. — plot_acf","text":"gibbs_samples matrix Gibbs samples. par_labels character vector length equal number columns gibbs_samples, containing labels Gibbs samples.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/plot_acf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Autocorrelation plot of Gibbs samples. — plot_acf","text":"return value. Draws plot current device.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/plot_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualizing the linear effects. — plot_effects","title":"Visualizing the linear effects. — plot_effects","text":"function visualizes linear effects covariates choices together uncertainty interval plus / minus one standard deviation.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/plot_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualizing the linear effects. — plot_effects","text":"","code":"plot_effects(gibbs_samples, coeff_names)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/plot_effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualizing the linear effects. — plot_effects","text":"gibbs_samples object class RprobitB_gibbs_samples. coeff_names character vector coefficient names.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/plot_effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualizing the linear effects. — plot_effects","text":"return value. Draws plot current device.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/plot_mixture_contour.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting mixing distribution contours. — plot_mixture_contour","title":"Plotting mixing distribution contours. — plot_mixture_contour","text":"function plots contours estimated mixing distributions adds true beta values comparison available.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/plot_mixture_contour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting mixing distribution contours. — plot_mixture_contour","text":"","code":"plot_mixture_contour(   mean_est,   weight_est,   cov_est,   beta_true = NULL,   cov_names = NULL )"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/plot_mixture_contour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting mixing distribution contours. — plot_mixture_contour","text":"mean_est list length C, element vector two estimated class means. weight_est numeric vector length C estimated class weights. cov_est list length C, element estimated class covariance matrix. beta_true Either NULL matrix C rows true beta values. cov_names Either NULL vector two covariate names.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/plot_mixture_contour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting mixing distribution contours. — plot_mixture_contour","text":"return value. Draws plot current device.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/plot_mixture_marginal.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting marginal mixing distributions. — plot_mixture_marginal","title":"Plotting marginal mixing distributions. — plot_mixture_marginal","text":"function plots estimated mixing distributions respect one covariate adds true marginal mixing distribution comparison available.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/plot_mixture_marginal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting marginal mixing distributions. — plot_mixture_marginal","text":"","code":"plot_mixture_marginal(   mean_est,   mean_true = NULL,   weight_est,   weight_true = NULL,   sd_est,   sd_true = NULL,   cov_name = NULL )"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/plot_mixture_marginal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting marginal mixing distributions. — plot_mixture_marginal","text":"mean_est list length C, element estimated class mean. mean_true Either NULL list length C, element true class mean. weight_est numeric vector length C estimated class weights. weight_true Either NULL numeric vector length C true class weights. sd_est list length C, element estimated class standard deviation. sd_true Either NULL list length C, element true class standard deviation. cov_name Either NULL name corresponding covariate.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/plot_mixture_marginal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting marginal mixing distributions. — plot_mixture_marginal","text":"return value. Draws plot current device.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/plot_trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualizing the trace of Gibbs samples. — plot_trace","title":"Visualizing the trace of Gibbs samples. — plot_trace","text":"function plots traces Gibbs samples.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/plot_trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualizing the trace of Gibbs samples. — plot_trace","text":"","code":"plot_trace(gibbs_samples, par_labels)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/plot_trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualizing the trace of Gibbs samples. — plot_trace","text":"gibbs_samples matrix Gibbs samples. par_labels character vector length equal number columns gibbs_samples, containing labels Gibbs samples.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/plot_trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualizing the trace of Gibbs samples. — plot_trace","text":"return value. Draws plot current device.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict choices. — predict","title":"Predict choices. — predict","text":"function predicts choices decision makers.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict choices. — predict","text":"","code":"predict(x, data = NULL, overview = TRUE)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict choices. — predict","text":"x object class RprobitB_model. data Either NULL object class RprobitB_data. overview TRUE, aggregate prediction table.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict choices. — predict","text":"Either table overview = TRUE data frame otherwise.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/preference_flip.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for flip in preferences after change in model scale. — preference_flip","title":"Check for flip in preferences after change in model scale. — preference_flip","text":"function checks change model scale flipped preferences.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/preference_flip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for flip in preferences after change in model scale. — preference_flip","text":"","code":"preference_flip(model_old, model_new)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/preference_flip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for flip in preferences after change in model scale. — preference_flip","text":"model_old object class RprobitB_model, model scale change. model_new object class RprobitB_model, model scale change.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/preference_flip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for flip in preferences after change in model scale. — preference_flip","text":"return value, called side-effects.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/prepare.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare empirical choice data. — prepare","title":"Prepare empirical choice data. — prepare","text":"function prepares empirical choice data RprobitB package.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/prepare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare empirical choice data. — prepare","text":"","code":"prepare(   form,   choice_data,   alternatives = NULL,   re = NULL,   id = \"id\",   standardize = NULL,   test_prop = NULL )"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/prepare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare empirical choice data. — prepare","text":"form formula object used specify probit model. structure choice ~ | B | C, names alternative choice situation specific covariates generic coefficient, B names choice situation specific covariates alternative specific coefficients, C names alternative choice situation specific covariates alternative specific coefficients. Separate multiple covariates one type + sign. default, alternative specific constants (ASCs) added model (except last alternative). can removed adding +0 second spot. See vignette vignette(\"data_management\", package = \"RprobitB\") details. choice_data data frame choice data \"wide\" format (.e. row represents one choice occasion) following requirements: must contain column named id contains unique identifier decision maker. can contain column named choice observed choices, choice must match name dependent variable form. column required model fitting prediction. alternative specific covariate p form choice alternative j alternatives, choice_data must contain column named p_j. covariate q form constant across alternatives, choice_data must contain column named q. alternatives character vector names choice alternatives. specified, choice set defined observed choices. re character (vector) covariates form random effects. re = NULL (default), random effects. random effects alternative specific constants, include \"ASC\" re. id character, name column choice_data contains unique identifier decision maker. default \"id\". standardize character vector names covariates get standardized. Covariates type 1 3 addressed <covariate>_<alternative>. standardize = \"\", covariates get standardized. test_prop Either NULL numeric 0 1. latter case, data split training set (decider proportion 1-test_prop) testing set (decider proportion test_prop).","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/prepare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare empirical choice data. — prepare","text":"object class RprobitB_data. test_prop specified, list two RprobitB_data objects labelled \"train\" \"test\".","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/prepare.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare empirical choice data. — prepare","text":"See vignette \"Data management\" details: vignette(\"data_management\", package = \"RprobitB\").","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/prepare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare empirical choice data. — prepare","text":"","code":"data(\"Train\", package = \"mlogit\") data <- prepare(   form = choice ~ price | 0 | time + comfort + change,   choice_data = Train, re = c(\"price\", \"time\"),   standardize = \"all\" )"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/print.RprobitB_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for RprobitB_data. — print.RprobitB_data","title":"Print method for RprobitB_data. — print.RprobitB_data","text":"function print method object class RprobitB_data.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/print.RprobitB_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for RprobitB_data. — print.RprobitB_data","text":"","code":"# S3 method for RprobitB_data print(x, ...)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/print.RprobitB_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for RprobitB_data. — print.RprobitB_data","text":"x object class RprobitB_data. ... Ignored.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/print.RprobitB_gibbs_samples_statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for RprobitB_gibbs_samples_statistics. — print.RprobitB_gibbs_samples_statistics","title":"Print method for RprobitB_gibbs_samples_statistics. — print.RprobitB_gibbs_samples_statistics","text":"function print method object class RprobitB_gibbs_samples_statistics.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/print.RprobitB_gibbs_samples_statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for RprobitB_gibbs_samples_statistics. — print.RprobitB_gibbs_samples_statistics","text":"","code":"# S3 method for RprobitB_gibbs_samples_statistics print(x, true = NULL, digits = 2, ...)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/print.RprobitB_gibbs_samples_statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for RprobitB_gibbs_samples_statistics. — print.RprobitB_gibbs_samples_statistics","text":"x object class RprobitB_gibbs_samples_statistics. true Either NULL object class RprobitB_true_parameter. digits number printed decimal places. ... Ignored.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/print.RprobitB_latent_classes.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for RprobitB_latent_classes. — print.RprobitB_latent_classes","title":"Print method for RprobitB_latent_classes. — print.RprobitB_latent_classes","text":"function print method object class RprobitB_latent_classes.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/print.RprobitB_latent_classes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for RprobitB_latent_classes. — print.RprobitB_latent_classes","text":"","code":"# S3 method for RprobitB_latent_classes print(x, ...)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/print.RprobitB_latent_classes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for RprobitB_latent_classes. — print.RprobitB_latent_classes","text":"x object class RprobitB_latent_classes. ... Ignored.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/print.RprobitB_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for RprobitB_model. — print.RprobitB_model","title":"Print method for RprobitB_model. — print.RprobitB_model","text":"function print method object class RprobitB_model.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/print.RprobitB_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for RprobitB_model. — print.RprobitB_model","text":"","code":"# S3 method for RprobitB_model print(x, ...)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/print.RprobitB_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for RprobitB_model. — print.RprobitB_model","text":"x object class RprobitB_model. ... Ignored.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/print.RprobitB_normalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for RprobitB_normalization. — print.RprobitB_normalization","title":"Print method for RprobitB_normalization. — print.RprobitB_normalization","text":"function print method object class RprobitB_normalization.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/print.RprobitB_normalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for RprobitB_normalization. — print.RprobitB_normalization","text":"","code":"# S3 method for RprobitB_normalization print(x, ...)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/print.RprobitB_normalization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for RprobitB_normalization. — print.RprobitB_normalization","text":"x object class RprobitB_normalization. ... Ignored.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/print.summary.RprobitB_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for the summary of RprobitB_data. — print.summary.RprobitB_data","title":"Print method for the summary of RprobitB_data. — print.summary.RprobitB_data","text":"function print method object class summary.RprobitB_data.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/print.summary.RprobitB_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for the summary of RprobitB_data. — print.summary.RprobitB_data","text":"","code":"# S3 method for summary.RprobitB_data print(x, ...)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/print.summary.RprobitB_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for the summary of RprobitB_data. — print.summary.RprobitB_data","text":"x object class summary.RprobitB_data. ... Ignored.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/print.summary.RprobitB_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for the summary of RprobitB_model. — print.summary.RprobitB_model","title":"Print method for the summary of RprobitB_model. — print.summary.RprobitB_model","text":"function print method object class summary.RprobitB_model.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/print.summary.RprobitB_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for the summary of RprobitB_model. — print.summary.RprobitB_model","text":"","code":"# S3 method for summary.RprobitB_model print(x, digits = 2, ...)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/print.summary.RprobitB_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for the summary of RprobitB_model. — print.summary.RprobitB_model","text":"x object class summary.RprobitB_model. digits number printed decimal places. ... Ignored.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/rdirichlet.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw from Dirichlet — rdirichlet","title":"Draw from Dirichlet — rdirichlet","text":"Function draw Dirichlet distribution.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/rdirichlet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw from Dirichlet — rdirichlet","text":"","code":"rdirichlet(alpha)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/rdirichlet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw from Dirichlet — rdirichlet","text":"alpha vector, concentration parameter.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/rdirichlet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw from Dirichlet — rdirichlet","text":"vector, sample Dirichlet distribution.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/RprobitB_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create object of class RprobitB_data. — RprobitB_data","title":"Create object of class RprobitB_data. — RprobitB_data","text":"function creates object class RprobitB_data.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/RprobitB_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create object of class RprobitB_data. — RprobitB_data","text":"","code":"RprobitB_data(   data,   choice_data,   N,   T,   J,   P_f,   P_r,   alternatives,   form,   re,   ASC,   linear_coeffs,   standardize,   simulated,   choice_available,   true_parameter )"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/RprobitB_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create object of class RprobitB_data. — RprobitB_data","text":"data list choice data. list N elements. element list two elements, X y, covariates decisions decision maker. precisely, X list T elements, element matrix dimension Jx(P_f+P_r) contains characteristics one choice occasion. y vector length T contains labels chosen alternatives. choice_data data frame choice data \"wide\" format (.e. row represents one choice occasion) following requirements: must contain column named id contains unique identifier decision maker. can contain column named choice observed choices, choice must match name dependent variable form. column required model fitting prediction. alternative specific covariate p form choice alternative j alternatives, choice_data must contain column named p_j. covariate q form constant across alternatives, choice_data must contain column named q. N number (greater equal 1) decision makers. T number (greater equal 1) choice occasions vector choice occasions length N (.e. decision maker specific number). J number (greater equal 2) choice alternatives. P_f number covariates connected fixed coefficient (can 0). P_r number covariates connected random coefficient (can 0). alternatives character vector names choice alternatives. specified, choice set defined observed choices. form formula object used specify probit model. structure choice ~ | B | C, names alternative choice situation specific covariates generic coefficient, B names choice situation specific covariates alternative specific coefficients, C names alternative choice situation specific covariates alternative specific coefficients. Separate multiple covariates one type + sign. default, alternative specific constants (ASCs) added model (except last alternative). can removed adding +0 second spot. See vignette vignette(\"data_management\", package = \"RprobitB\") details. re character (vector) covariates form random effects. re = NULL (default), random effects. random effects alternative specific constants, include \"ASC\" re. ASC boolean, determining whether model ASCs. linear_coeffs data frame coefficient names booleans indicating whether connected random effects. standardize character vector names covariates get standardized. Covariates type 1 3 addressed <covariate>_<alternative>. standardize = \"\", covariates get standardized. simulated boolean, TRUE data simulated, otherwise data empirical. choice_available boolean, TRUE data contains observed choices. true_parameter object class RprobitB_parameters.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/RprobitB_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create object of class RprobitB_data. — RprobitB_data","text":"object class RprobitB_data arguments function elements.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/RprobitB_gibbs_samples_statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Create object of class RprobitB_gibbs_samples_statistics. — RprobitB_gibbs_samples_statistics","title":"Create object of class RprobitB_gibbs_samples_statistics. — RprobitB_gibbs_samples_statistics","text":"function creates object class RprobitB_gibbs_samples_statistics.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/RprobitB_gibbs_samples_statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create object of class RprobitB_gibbs_samples_statistics. — RprobitB_gibbs_samples_statistics","text":"","code":"RprobitB_gibbs_samples_statistics(gibbs_samples, FUN)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/RprobitB_gibbs_samples_statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create object of class RprobitB_gibbs_samples_statistics. — RprobitB_gibbs_samples_statistics","text":"gibbs_samples object class RprobitB_gibbs_samples. FUN (preferably named) list functions compute parameter statistics Gibbs samples, .e. mean mean, sd standard deviation, min minimum, max maximum, median median, function(x) quantile(x, p) pth quantile, R_hat Gelman-Rubin statistic.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/RprobitB_gibbs_samples_statistics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create object of class RprobitB_gibbs_samples_statistics. — RprobitB_gibbs_samples_statistics","text":"object class RprobitB_gibbs_samples_statistics, list statistics gibbs_samples obtained applying elements FUN.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/RprobitB_latent_classes.html","id":null,"dir":"Reference","previous_headings":"","what":"Create object of class RprobitB_latent_classes. — RprobitB_latent_classes","title":"Create object of class RprobitB_latent_classes. — RprobitB_latent_classes","text":"function creates object class RprobitB_latent_classes.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/RprobitB_latent_classes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create object of class RprobitB_latent_classes. — RprobitB_latent_classes","text":"","code":"RprobitB_latent_classes(latent_classes = NULL)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/RprobitB_latent_classes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create object of class RprobitB_latent_classes. — RprobitB_latent_classes","text":"latent_classes Either NULL list parameters specifying number latent classes: C: number (greater equal 1) latent classes, set 1 per default ignored P_r = 0. update = TRUE, C equals initial number classes. update: boolean, determining whether update C. Ignored P_r = 0. update = FALSE, following elements ignored. Cmax: maximum number latent classes. buffer: updating buffer (number iterations wait next update). epsmin: threshold weight removing latent classes (0 1). epsmax: threshold weight splitting latent classes (0 1). distmin: threshold difference means joining latent classes (non-negative).","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/RprobitB_latent_classes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create object of class RprobitB_latent_classes. — RprobitB_latent_classes","text":"object class RprobitB_latent_classes.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/RprobitB_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Create object of class RprobitB_model. — RprobitB_model","title":"Create object of class RprobitB_model. — RprobitB_model","text":"function creates object class RprobitB_model.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/RprobitB_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create object of class RprobitB_model. — RprobitB_model","text":"","code":"RprobitB_model(   data,   normalization,   R,   B,   Q,   latent_classes,   prior,   gibbs_samples,   classification )"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/RprobitB_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create object of class RprobitB_model. — RprobitB_model","text":"data object class RprobitB_data. normalization object class RprobitB_normalization. R number iterations Gibbs sampler. B length burn-period, .e. non-negative number samples discarded. Q thinning factor Gibbs samples, .e. every Qth sample kept. latent_classes Either NULL list parameters specifying number latent classes: C: number (greater equal 1) latent classes, set 1 per default ignored P_r = 0. update = TRUE, C equals initial number classes. update: boolean, determining whether update C. Ignored P_r = 0. update = FALSE, following elements ignored. Cmax: maximum number latent classes. buffer: updating buffer (number iterations wait next update). epsmin: threshold weight removing latent classes (0 1). epsmax: threshold weight splitting latent classes (0 1). distmin: threshold difference means joining latent classes (non-negative). prior named list parameters prior distributions normalized parameters: eta: mean vector length P_f normal prior alpha. Psi: covariance matrix dimension P_f x P_f normal prior alpha. delta: concentration parameter length 1 Dirichlet prior s. xi: mean vector length P_r normal prior b_c. D: covariance matrix dimension P_r x P_r normal prior b_c. nu: degrees freedom (natural number greater P_r) Inverse Wishart prior Omega_c. Theta: scale matrix dimension P_r x P_r Inverse Wishart prior Omega_c. kappa: degrees freedom (natural number greater J-1) Inverse Wishart prior Sigma. E: scale matrix dimension J-1 x J-1 Inverse Wishart prior Sigma. gibbs_samples object class RprobitB_gibbs_samples. classification allocation variable estimated latent classes.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/RprobitB_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create object of class RprobitB_model. — RprobitB_model","text":"object class RprobitB_model, .e. list arguments function elements.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/RprobitB_normalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Create object of class RprobitB_normalization. — RprobitB_normalization","title":"Create object of class RprobitB_normalization. — RprobitB_normalization","text":"function creates object class RprobitB_normalization.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/RprobitB_normalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create object of class RprobitB_normalization. — RprobitB_normalization","text":"","code":"RprobitB_normalization(   J,   P_f,   level = J,   scale = list(parameter = \"s\", index = 1, value = 1) )"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/RprobitB_normalization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create object of class RprobitB_normalization. — RprobitB_normalization","text":"J number (greater equal 2) choice alternatives. P_f number covariates connected fixed coefficient (can 0). level number alternative respect utility differences computed. Currently, level = J (.e. utility differences respect last alternative) implemented. scale named list three elements, determining parameter normalization respect utility scale: parameter: Either \"\" (linear coefficient \"alpha\") \"s\" (variance error-term covariance matrix \"Sigma\"). index: index parameter gets fixed. value: value fixed parameter.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/RprobitB_normalization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create object of class RprobitB_normalization. — RprobitB_normalization","text":"object class RprobitB_normalization, list elements level scale.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/RprobitB_normalization.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create object of class RprobitB_normalization. — RprobitB_normalization","text":"choice model normalized respect level scale. level normalization, takes utility differences respect one alternative. scale normalization, fix model parameter. Per default, first error-term variance fixed 1, .e. scale = list(\"parameter\" = \"s\", \"index\" = 1, \"value\" = 1). Alternatively, error-term variance linear coefficient can fixed.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/RprobitB_parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Create object of class RprobitB_parameter. — RprobitB_parameter","title":"Create object of class RprobitB_parameter. — RprobitB_parameter","text":"function creates object class RprobitB_parameter. sample = TRUE, missing parameters sampled. parameters checked values P_f, P_r, J, N.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/RprobitB_parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create object of class RprobitB_parameter. — RprobitB_parameter","text":"","code":"RprobitB_parameter(   P_f,   P_r,   J,   N,   alpha = NULL,   C = NULL,   s = NULL,   b = NULL,   Omega = NULL,   Sigma = NULL,   Sigma_full = NULL,   beta = NULL,   z = NULL,   seed = NULL,   sample = TRUE )"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/RprobitB_parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create object of class RprobitB_parameter. — RprobitB_parameter","text":"P_f number covariates connected fixed coefficient (can 0). P_r number covariates connected random coefficient (can 0). J number (greater equal 2) choice alternatives. N number (greater equal 1) decision makers. alpha fixed coefficient vector length P_f. Set NA P_f = 0. C number (greater equal 1) latent classes decision makers. Set NA P_r = 0. Otherwise, C = 1 per default. s vector class weights length C. Set NA P_r = 0. identifiability, vector must non-ascending. b matrix class means columns dimension P_r x C. Set NA P_r = 0. Omega matrix class covariance matrices columns dimension P_r*P_r x C. Set NA P_r = 0. Sigma differenced error term covariance matrix dimension J-1 x J-1 respect alternative J. Sigma_full error term covariance matrix dimension J x J. Internally, Sigma_full gets differenced respect alternative J, becomes identified covariance matrix dimension J-1 x J-1. Sigma specified, Sigma_full ignored. beta matrix decision-maker specific coefficient vectors dimension P_r x N. Set NA P_r = 0. z vector allocation variables length N. Set NA P_r = 0. seed Set seed sampling missing parameters. sample boolean, TRUE missing parameters get sampled.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/RprobitB_parameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create object of class RprobitB_parameter. — RprobitB_parameter","text":"object class RprobitB_parameter, .e. named list model parameters alpha, C, s, b, Omega, Sigma, Sigma_full, beta, z.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/rwishart.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw from a Wishart — rwishart","title":"Draw from a Wishart — rwishart","text":"Function draw Wishart inverted Wishart distribution.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/rwishart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw from a Wishart — rwishart","text":"","code":"rwishart(nu, V)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/rwishart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw from a Wishart — rwishart","text":"nu double, degrees freedom. V matrix, scale matrix.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/rwishart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw from a Wishart — rwishart","text":"list, draw Wishart (W), inverted Wishart (IW), corresponding Cholesky decomposition (C CI)","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/R_hat.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Gelman-Rubin statistic. — R_hat","title":"Compute Gelman-Rubin statistic. — R_hat","text":"function computes Gelman-Rubin statistic R_hat.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/R_hat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Gelman-Rubin statistic. — R_hat","text":"","code":"R_hat(samples, parts = 2)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/R_hat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Gelman-Rubin statistic. — R_hat","text":"samples vector matrix samples Markov chain, e.g. Gibbs samples. samples matrix, column gives samples separate run. parts number parts divide chain sub-chains.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/R_hat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Gelman-Rubin statistic. — R_hat","text":"Gelman-Rubin statistic.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/R_hat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute Gelman-Rubin statistic. — R_hat","text":"https://bookdown.org/rdpeng/advstatcomp/monitoring-convergence.html","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/R_hat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Gelman-Rubin statistic. — R_hat","text":"","code":"no_chains <- 2 length_chains <- 1e3 samples <- matrix(NA, length_chains, no_chains) samples[1, ] <- 1 Gamma <- matrix(c(0.8, 0.1, 0.2, 0.9), 2, 2) for (c in 1:no_chains) {   for (t in 2:length_chains) {     samples[t, c] <- sample(1:2, 1, prob = Gamma[samples[t - 1, c], ])   } } R_hat(samples) #> [1] 1.058019"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/set_initial_gibbs_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Set initial values for the Gibbs sampler. — set_initial_gibbs_values","title":"Set initial values for the Gibbs sampler. — set_initial_gibbs_values","text":"function sets initial values Gibbs sampler.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/set_initial_gibbs_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set initial values for the Gibbs sampler. — set_initial_gibbs_values","text":"","code":"set_initial_gibbs_values(N, T, J, P_f, P_r, C)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/set_initial_gibbs_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set initial values for the Gibbs sampler. — set_initial_gibbs_values","text":"N number (greater equal 1) decision makers. T number (greater equal 1) choice occasions vector choice occasions length N (.e. decision maker specific number). J number (greater equal 2) choice alternatives. P_f number covariates connected fixed coefficient (can 0). P_r number covariates connected random coefficient (can 0). C number (greater equal 1) latent classes.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/set_initial_gibbs_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set initial values for the Gibbs sampler. — set_initial_gibbs_values","text":"list initial values Gibbs sampler.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/set_mfrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Balancing visualization of multiple figures. — set_mfrow","title":"Balancing visualization of multiple figures. — set_mfrow","text":"function finds balanced setting par(mfrow).","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/set_mfrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Balancing visualization of multiple figures. — set_mfrow","text":"","code":"set_mfrow(n)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/set_mfrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Balancing visualization of multiple figures. — set_mfrow","text":"n total number figures.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/set_mfrow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Balancing visualization of multiple figures. — set_mfrow","text":"vector form c(nr,nc). par(mfrow = c(nr,nc)), subsequent figures drawn nr x nc array current device rows.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/set_mfrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Balancing visualization of multiple figures. — set_mfrow","text":"","code":"set_mfrow(3) #> [1] 2 2"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/simulate.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate choice data. — simulate","title":"Simulate choice data. — simulate","text":"function simulates choice data RprobitB package.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/simulate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate choice data. — simulate","text":"","code":"simulate(   form,   N,   T,   J,   re = NULL,   alternatives = NULL,   distr = NULL,   standardize = NULL,   seed = NULL,   test_prop = NULL,   ... )"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/simulate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate choice data. — simulate","text":"form formula object used specify probit model. structure choice ~ | B | C, names alternative choice situation specific covariates generic coefficient, B names choice situation specific covariates alternative specific coefficients, C names alternative choice situation specific covariates alternative specific coefficients. Separate multiple covariates one type + sign. default, alternative specific constants (ASCs) added model (except last alternative). can removed adding +0 second spot. See vignette vignette(\"data_management\", package = \"RprobitB\") details. N number (greater equal 1) decision makers. T number (greater equal 1) choice occasions vector choice occasions length N (.e. decision maker specific number). J number (greater equal 2) choice alternatives. re character (vector) covariates form random effects. re = NULL (default), random effects. random effects alternative specific constants, include \"ASC\" re. alternatives character vector names choice alternatives. specified, choice set defined observed choices. distr named list number generation functions covariates drawn. Covariates distribution specified drawn standard normal distribution. element distr must form \"cov\" = list(\"name\" = \"<name number generation function>\",...), cov name covariate ... required parameters number generation function. Possible number generation functions functions type r* base R (e.g. rnorm) required parameters (except n) must specified, function sample, required parameters (except size) must specified. standardize character vector names covariates get standardized. Covariates type 1 3 addressed <covariate>_<alternative>. standardize = \"\", covariates get standardized. seed Set seed simulation. test_prop Either NULL numeric 0 1. latter case, data split training set (decider proportion 1-test_prop) testing set (decider proportion test_prop). ... Optionally specify alpha, C, s, b, Omega, Sigma, Sigma_full, beta, z simulation.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/simulate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate choice data. — simulate","text":"object class RprobitB_data. test_prop specified, list two RprobitB_data objects labelled \"train\" \"test\".","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/simulate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate choice data. — simulate","text":"See vignette \"Data management\" details: vignette(\"data_management\", package = \"RprobitB\").","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/simulate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate choice data. — simulate","text":"","code":"data <- simulate(   form = choice ~ cost | income + 0 | time,   N = 100, T = 10, J = 3, re = \"cost\",   alternatives = c(\"car\", \"bus\", \"scooter\") )"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/summary.RprobitB_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for RprobitB_data. — summary.RprobitB_data","title":"Summary method for RprobitB_data. — summary.RprobitB_data","text":"function summary method object class RprobitB_data.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/summary.RprobitB_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for RprobitB_data. — summary.RprobitB_data","text":"","code":"# S3 method for RprobitB_data summary(object, ...)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/summary.RprobitB_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for RprobitB_data. — summary.RprobitB_data","text":"object object class RprobitB_data. ... Ignored.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/summary.RprobitB_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for RprobitB_model. — summary.RprobitB_model","title":"Summary method for RprobitB_model. — summary.RprobitB_model","text":"function summary method object class RprobitB_model.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/summary.RprobitB_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for RprobitB_model. — summary.RprobitB_model","text":"","code":"# S3 method for RprobitB_model summary(object, FUN = c(mean = mean, sd = sd, `R^` = R_hat), ...)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/summary.RprobitB_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for RprobitB_model. — summary.RprobitB_model","text":"object object class RprobitB_model. FUN (preferably named) list functions compute parameter statistics Gibbs samples, .e. mean mean, sd standard deviation, min minimum, max maximum, median median, function(x) quantile(x, p) pth quantile, R_hat Gelman-Rubin statistic. ... Ignorded.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform","title":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform","text":"Given object class RprobitB_model, function can: change length B burn-period, change thinning factor Q Gibbs samples, change model scale.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform","text":"","code":"transform(x, B = NULL, Q = NULL, scale = NULL, check_preference_flip = TRUE)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform","text":"x object class RprobitB_model. B length burn-period, .e. non-negative number samples discarded. Q thinning factor Gibbs samples, .e. every Qth sample kept. scale named list three elements, determining parameter normalization respect utility scale: parameter: Either \"\" (linear coefficient \"alpha\") \"s\" (variance error-term covariance matrix \"Sigma\"). index: index parameter gets fixed. value: value fixed parameter. check_preference_flip TRUE check flip preferences new scale.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform","text":"object class RprobitB_model.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/transform.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform","text":"See vignette \"Model fitting\" details: vignette(\"model_fitting\", package = \"RprobitB\").","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/transform_gibbs_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Transformation of Gibbs samples. — transform_gibbs_samples","title":"Transformation of Gibbs samples. — transform_gibbs_samples","text":"function normalizes, burns thins Gibbs samples.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/transform_gibbs_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transformation of Gibbs samples. — transform_gibbs_samples","text":"","code":"transform_gibbs_samples(gibbs_samples, R, B, Q, normalization)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/transform_gibbs_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transformation of Gibbs samples. — transform_gibbs_samples","text":"gibbs_samples output gibbs_sampling. R number iterations Gibbs sampler. B length burn-period, .e. non-negative number samples discarded. Q thinning factor Gibbs samples, .e. every Qth sample kept. normalization object class RprobitB_normalization.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/transform_gibbs_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transformation of Gibbs samples. — transform_gibbs_samples","text":"object class RprobitB_gibbs_samples, .e. list transformed Gibbs samples. element list, containing (available) Gibbs samples s, alpha, b, Omega, Sigma: gibbs_samples: function input gibbs_samples. gibbs_samples_n: list normalized samples based normalization. gibbs_samples_nb: list normalized burned samples based normalization B. gibbs_samples_nt: list normalized thinned samples based normalization Q gibbs_samples_nbt: list normalized, burned thinned samples based normalization, B Q","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/transform_parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Transformation of parameter values. — transform_parameter","title":"Transformation of parameter values. — transform_parameter","text":"function transforms parameter values based normalization.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/transform_parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transformation of parameter values. — transform_parameter","text":"","code":"transform_parameter(parameter, normalization)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/transform_parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transformation of parameter values. — transform_parameter","text":"parameter object class RprobitB_parameter. normalization object class RprobitB_normalization.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/transform_parameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transformation of parameter values. — transform_parameter","text":"object class RprobitB_parameter.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/undiff_Sigma.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform differenced to non-differenced error term covariance matrix. — undiff_Sigma","title":"Transform differenced to non-differenced error term covariance matrix. — undiff_Sigma","text":"function transforms differenced error term covariance matrix Sigma back non-differenced error term covariance matrix.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/undiff_Sigma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform differenced to non-differenced error term covariance matrix. — undiff_Sigma","text":"","code":"undiff_Sigma(Sigma, i)"},{"path":"https://loelschlaeger.github.io/RprobitB/reference/undiff_Sigma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform differenced to non-differenced error term covariance matrix. — undiff_Sigma","text":"Sigma error term covariance matrix dimension J-1 x J-1 differenced respect alternative . integer, alternative number respect Sigma differenced.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/reference/undiff_Sigma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform differenced to non-differenced error term covariance matrix. — undiff_Sigma","text":"covariance matrix dimension J x J. covariance matrix gets differenced respect alternative , results Sigma.","code":""},{"path":"https://loelschlaeger.github.io/RprobitB/news/index.html","id":"rprobitb-1009000","dir":"Changelog","previous_headings":"","what":"RprobitB 1.0.0.9000","title":"RprobitB 1.0.0.9000","text":"now README file R Markdown.","code":""}]
