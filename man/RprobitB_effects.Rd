% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RprobitB_effects.R
\name{RprobitB_effects}
\alias{RprobitB_effects}
\title{Overview of model effects}
\usage{
RprobitB_effects(
  formula,
  re = NULL,
  alternatives,
  base = tail(alternatives, 1),
  ordered = FALSE
)
}
\arguments{
\item{formula}{An object of class \code{\link[stats]{formula}}:
a symbolic description of the model to be fitted.
The details of model specification are given under \sQuote{Details}.}

\item{re}{A character (vector): the names of covariates in \code{formula} that should
have a random effect.
Set \code{re = NULL} (default) for no random effects.
The details of random effects are given under \sQuote{Details}.}

\item{alternatives}{A character vector: the names of the choice alternatives. Must be at least of
length two.}

\item{base}{A character: the name of the base alternative for covariates that are not
alternative specific.
Ignored if the model has no alternative specific covariates (e.g., in the
ordered probit case).
Per default, \code{base} is the last element of \code{alternatives}.
The details of the base alternative are given under \sQuote{Details}.}

\item{ordered}{A boolean: \code{TRUE} for if the alternatives are ordered and \code{FALSE}
(default) else.}
}
\value{
A \code{data frame}, each row is an effect, columns are
\itemize{
\item the effect names \code{"name"},
\item booleans whether the covariate is alternative-specific \code{"as_cov"},
\item booleans whether the coefficient is alternative-specific \code{"as_coef"},
\item booleans whether the effect is a random effect \code{"random"},
\item and booleans whether the random effect is log-normal \code{"ln"}.
}
}
\description{
This function provides an overview of the model effects.
}
\section{Details of model specification}{
The structure of \code{formula} should be
\code{choice ~ A | B | C}, where
\itemize{
\item \code{choice} is the name of the dependent variable (the choices),
\item \code{A} are names of \strong{alternative specific covariates} with
\strong{a coefficient that is constant across alternatives},
\item \code{B} are names of \strong{covariates that are constant across
alternatives},
\item and \code{C} are names of \strong{alternative specific covariates}
with \strong{alternative specific coefficients}.
}

Multiple covariates of one type are separated by a \code{+} sign, i.e.,
\code{choice ~ A1 + A2}.

By default, alternative specific constants (ASCs) are added to the model.
They can be removed by adding \code{+ 0} in the second spot, i.e.,
\code{choice ~ A | B + 0 | C}. To not include any covariates of
the second category but to estimate ASCs, add \code{1} in the second
spot, e.g., \code{choice ~ A | 1 | C}. The expression
\code{choice ~ A | 0 | C} is interpreted as no covariates of the second
category and no ASCs.

In the ordered probit model (\code{ordered = TRUE}), covariates are not
alternative specific, i.e., there exists only one type of covariate.
Therefore, the \code{formula} object does not need any
separation via \code{|}, and hence has the simple structure
\code{choice ~ A + B + C}.
ASCs cannot be estimated in the ordered case.
}

\section{Details of random effects}{
Covariates can have random effects, i.e., their coefficients can follow a
random distribution. Per default, the distribution is normal. The log-normal
distribution (for sign-restriction) can be specified via appending a \code{+}
to the corresponding name in \code{re}.
To have random effects for the ASCs, add \code{ASC} (or \code{ASC+}) to
\code{re}.
}

\section{Details of the base alternative}{
The full collection of coefficients for covariates that are constant across
alternatives (including ASCs) is not identified, one coefficient is a linear
coefficient of the others, respectively. To achieve identifiability, the
coefficient of one alternative \code{base} is fixed to zero. The other
coefficients then have to be interpreted with respect to \code{base}.
}

\examples{
RprobitB_effects(
  formula = choice ~ price | income | comfort,
  re = c("price+", "income"),
  alternatives = c("A", "B"),
  base = "A"
)

}
