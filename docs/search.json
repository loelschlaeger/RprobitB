[{"path":"https://loelschlaeger.de/RprobitB/articles/choice_data.html","id":"characteristics-of-choice-data","dir":"Articles","previous_headings":"","what":"Characteristics of choice data","title":"Choice data","text":"Choice data basically consists identifier decider optionally choice situation, choices, alternative decider specific covariates. Consequently, RprobitB requests following requirements provided choice data: must class data.frame. must “wide” format, .e. row represents one choice occasion. must contain column unique identifier decision maker. can contain column identifier choice situation decider. information missing, identifier generated automatically appearance choices data set. can contain column observed choices. column required model fitting prediction. must contain columns values alternative specific covariate alternative decider specific covariate.","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/choice_data.html","id":"example","dir":"Articles","previous_headings":"Characteristics of choice data","what":"Example","title":"Choice data","text":"can check Train data set1 fulfills requirements: data frame, row represents one choice occasion, columns id choiceid identify deciders choice occasions, respectively. column choice gives observed choices. see four alternative-specific covariates, namely price, time, change comfort. values given alternative.","code":"data(\"Train\", package = \"mlogit\") str(Train) #> 'data.frame':    2929 obs. of  11 variables: #>  $ id       : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ choiceid : int  1 2 3 4 5 6 7 8 9 10 ... #>  $ choice   : Factor w/ 2 levels \"A\",\"B\": 1 1 1 2 2 2 2 2 1 1 ... #>  $ price_A  : num  2400 2400 2400 4000 2400 4000 2400 2400 4000 2400 ... #>  $ time_A   : num  150 150 115 130 150 115 150 115 115 150 ... #>  $ change_A : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ comfort_A: num  1 1 1 1 1 0 1 1 0 1 ... #>  $ price_B  : num  4000 3200 4000 3200 3200 2400 3200 3200 3200 4000 ... #>  $ time_B   : num  150 130 115 150 150 130 115 150 130 115 ... #>  $ change_B : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ comfort_B: num  1 1 0 0 0 0 1 0 1 0 ..."},{"path":"https://loelschlaeger.de/RprobitB/articles/choice_data.html","id":"the-model-formula","dir":"Articles","previous_headings":"","what":"The model formula","title":"Choice data","text":"tell RprobitB covariates want include model via specifying formula object. structure formula object choice ~ | B | C, choice dependent variable (discrete choice aim explain), alternative choice situation specific covariates generic coefficient (call covariates type 1), B choice situation specific covariates alternative specific coefficients (call covariates type 2), C alternative choice situation specific covariates alternative specific coefficients (call covariates type 3). Specifying formula object RprobitB must consistent following rules: default, alternative specific constants (ASCs) added model2. can removed adding + 0 second spot, e.g. choice ~ | B + 0. exclude covariates backmost categories, use either 0, e.g. choice ~ | B | 0 just leave part write choice ~ | B. However, exclude covariates front categories, use 0, e.g. choice ~ 0 | B. include one covariate category, use +, e.g. choice ~ A1 + A2 | B. don’t want include covariates second category want estimate alternative specific constants, add 1 second spot, e.g. choice ~ | 1. expression choice ~ | 0 interpreted covariates second category alternative specific constants. impose random effects specific variables, need define character vector re corresponding variable names. random effects alternative specific constants, include \"ASC\" re.","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/choice_data.html","id":"example-1","dir":"Articles","previous_headings":"The model formula","what":"Example","title":"Choice data","text":"specify model formula Train data set. Say want include covariates price, time, comfort change, alternative specific, either type 1 type 3. difference type 1 type 3 former case estimate generic coefficient (.e. coefficient constant across alternatives), whereas latter case estimate alternative specific coefficients. Deciding type 1 type 3 covariates belongs topic model selection, provide separate vignette. now, go type 1 covariates add ASCs: Additionally, specify random effects price time (typically expect heterogeneity ): RprobitB provides function check_form() can used check form re correctly interpreted:","code":"form <- choice ~ price + time + comfort + change | 1 re <- c(\"price\",\"time\") check_form(form = form, re = re) #> choice ~ price + time + comfort + change | 1 #> - dependent variable: choice  #> - type 1 covariate(s): price, time, comfort, change  #> - type 2 covariate(s):   #> - type 3 covariate(s):   #> - random effects: price, time  #> - ASC: TRUE"},{"path":"https://loelschlaeger.de/RprobitB/articles/choice_data.html","id":"the-prepare_data-function-in-rprobitb","dir":"Articles","previous_headings":"","what":"The prepare_data() function in RprobitB","title":"Choice data","text":"model estimation RprobitB, empirical choice data set choice_data must pass prepare_data() function: function performs compatibility checks data transformations returns object class RprobitB_data can fed estimation routine. following arguments optional: re: character vector variable names form random effects. alternatives: may want consider alternatives choice_data. case, can specify character vector alternatives selected names alternatives. specified, choice set defined observed choices. id: character, name column choice_data contains unique identifier decision maker. default \"id\". idc: character, name column choice_data contains unique identifier choice situation given decision maker. Per default, identifier generated appearance choices data set. standardize: character vector variable names form get standardized. Covariates type 1 3 addressed <covariate>_<alternative>. standardize = \"\", covariates get standardized.","code":"data <- prepare_data(form = form, choice_data = choice_data)"},{"path":"https://loelschlaeger.de/RprobitB/articles/choice_data.html","id":"example-2","dir":"Articles","previous_headings":"The prepare_data() function in RprobitB","what":"Example","title":"Choice data","text":"Let’s prepare Train data set estimation previous specification form re: summary plot methods give quick data overview:","code":"data <- prepare_data(form = form, choice_data = Train, re = re, id = \"id\", idc = \"choiceid\") summary(data) #> Summary of empirical choice data #>  #> 235 decision makers  #> 5 to 19 choice occasions each  #> 2929 choices in total #>  #> Alternatives #>   frequency #> A      1474 #> B      1455 #>  #> Linear coefficients #>      name    re #> 1 comfort FALSE #> 2  change FALSE #> 3   ASC_A FALSE #> 4   price  TRUE #> 5    time  TRUE plot(data)"},{"path":"https://loelschlaeger.de/RprobitB/articles/choice_data.html","id":"simulate-choice-data-in-rprobitb-using-the-simulate_choices-function","dir":"Articles","previous_headings":"","what":"Simulate choice data in RprobitB using the simulate_choices() function","title":"Choice data","text":"RprobitB provides function simulate_choices simulates discrete choice data prespecified probit model. Say want simulate choices N deciders T choice occasions3 among J alternatives model formulation form, call function simulate() following optional arguments: re: character vector variable names form random effects. alternatives: character vector length J names choice alternatives. specified, alternatives labeled first J upper-case letters Roman alphabet. covariates: named list covariate values. element must vector length equal number choice occasions named according covariate. Covariates values specified drawn standard normal distribution. standardize: character vector variable names form get standardized, see . seed: Set seed simulation. can specify true parameter values4 adding values alpha, fixed coefficient vector, C, number (greater equal 1) latent classes decision makers, s, vector class weights, b, matrix class means columns, Omega, matrix class covariance matrices columns, Sigma, differenced error term covariance matrix, Sigma_full, full error term covariance matrix.","code":"data <- simulate(form = form, N = N, T = T, J = J)"},{"path":"https://loelschlaeger.de/RprobitB/articles/choice_data.html","id":"example-3","dir":"Articles","previous_headings":"Simulate choice data in RprobitB using the simulate_choices() function","what":"Example","title":"Choice data","text":"illustration, simulate data set N = 100 deciders choosing T = 10 choice occasions among J = 2 alternatives bus car: specify form re follows: Finally, may want specify true parameter values. Parameter values specified get randomly drawn. RprobitB provides function overview_effects() can used get overview effects parameters can specified. , column re contains booleans indicate whether effect connected random effect. Hence, coefficient vector alpha must length 2, first coefficient income_bus second ASC_bus. matrix b must dimension C x 3, default C = 1 row 1 3 correspond cost, time_bus, time_car, respectively. exemplary call simulate_choices() looks like follows, summary() method can used get overview data:","code":"N <- 100 T <- 10 J <- 2 alternatives <- c(\"car\", \"bus\") form <- choice ~ cost | income | time re <- c(\"cost\", \"time\") overview_effects(form = form, re = re, alternatives = alternatives) #>         name    re #> 1 income_bus FALSE #> 2    ASC_bus FALSE #> 3       cost  TRUE #> 4   time_bus  TRUE #> 5   time_car  TRUE data <- simulate_choices(   form = choice ~ cost | income | time,   N = 100,   T = 10,   J = 2,   re = c(\"cost\", \"time\"),   alternatives = c(\"car\", \"bus\"),   seed = 1,   alpha = c(-1,1),   b = matrix(c(-1,-1,-0.5,-1.5,0,-1), ncol = 2),   C = 2 ) summary(data) #> Summary of simulated choice data #>  #> 100 decision makers  #> 10 choice occasions each  #> 1000 choices in total #>  #> Alternatives #>     frequency #> bus       561 #> car       439 #>  #> Linear coefficients #>         name    re #> 1 income_bus FALSE #> 2    ASC_bus FALSE #> 3       cost  TRUE #> 4   time_bus  TRUE #> 5   time_car  TRUE"},{"path":"https://loelschlaeger.de/RprobitB/articles/choice_data.html","id":"train-and-test-data-set","dir":"Articles","previous_headings":"","what":"Train and test data set","title":"Choice data","text":"RprobitB provides function train_test() can used split output prepare_data() simulate_choices() train test subset. useful evaluating prediction performance fitted model. example, following code puts 70% deciders data train subsample 30% deciders test subsample: Alternatively, following code puts 2 randomly chosen choice occasions per decider data test subsample, rest goes train subsample:","code":"train_test(data, test_proportion = 0.3, by = \"N\") #> $train #> Simulated data of 700 choices. #>  #> $test #> Simulated data of 300 choices. train_test(data, test_number = 2, by = \"T\", random = TRUE, seed = 1) #> $train #> Simulated data of 800 choices. #>  #> $test #> Simulated data of 200 choices."},{"path":[]},{"path":"https://loelschlaeger.de/RprobitB/articles/data_management.html","id":"specify-the-model-formula","dir":"Articles","previous_headings":"","what":"Specify the model formula","title":"Data management","text":"model formula specified using formula object, let’s call form. structure form choice ~ | B | C, choice discrete choice aim explain, alternative choice situation specific covariates generic coefficient (call covariates type 1), B choice situation specific covariates alternative specific coefficients (call covariates type 2), C alternative choice situation specific covariates alternative specific coefficients (call covariates type 3). Keep following rules mind: default, alternative specific constants added model1. can removed adding +0 second spot, e.g. choice ~ | B + 0. exclude covariates backmost categories, use either 0, e.g. choice ~ | B | 0 just leave part write choice ~ | B. However, exclude covariates front categories, use 0, e.g. choice ~ | 0 | C. include one covariate category, use +, e.g. choice ~ A1 + A2 | B. don’t want include covariates second category want estimate alternative specific constants, add 1 second spot, e.g. choice ~ | 1. expression choice ~ | 0 interpreted covariates second category alternative specific constants. random effects specific variables, need define character vector re corresponding variable names. random effects alternative specific constants, include \"ASC\" re.","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/data_management.html","id":"example-simulated-choice-of-transportation-means","dir":"Articles","previous_headings":"Specify the model formula","what":"Example: Simulated choice of transportation means","title":"Data management","text":"Say want explain choice transportation means variables cost, income, travel_time. furthermore want add alternative specific constants. cost alternative obviously alternative specific. However, can argue matter alternative spend money. Therefore, want estimate generic coefficient cost. income decision maker constant across alternatives, can different influence alternatives. therefore covariate type 2. travel_time covariate type 3: alternative specific contrast cost, can imagine spending time public transportation means different spending time ones car. Therefore, specify: typically expect heterogeneity preferences regarding spending money transportation means, therefore impose random effect cost:","code":"form = choice ~ cost | income | travel_time re = \"cost\""},{"path":"https://loelschlaeger.de/RprobitB/articles/data_management.html","id":"empirical-data","dir":"Articles","previous_headings":"","what":"Empirical data","title":"Data management","text":"section explains prepare empirical data estimation using function prepare(). Say data set empirical choice data, let’s call choice_data. must meet following requirements: must data frame. must wide format, means row represents one choice occasion. must contain column named id, contains unique identifier decision maker. must contain column named choice, choice must match name dependent variable form. alternative specific covariate p form choice alternative j, choice_data must contain column named p_j. covariate q constant across covariates (covariate type 2), choice_data must contain column named q. prepare choice_data estimation, must call function prepare() following optional arguments: alternatives: may want consider alternatives choice_data. case, can specify character vector alternatives selected names alternatives. re: character vector variable names form random effects. id: character, name column choice_data contains unique identifier decision maker. default \"id\". standardize: character vector variable names form get standardized, see .","code":"data = prepare(form = form, choice_data = choice_data)"},{"path":"https://loelschlaeger.de/RprobitB/articles/data_management.html","id":"example-train-data-set-of-the-mlogit-package","dir":"Articles","previous_headings":"Empirical data","what":"Example: “Train” data set of the mlogit package","title":"Data management","text":"Let’s prepare Train data set mlogit package estimation. consider covariates price (type 1), time, comfort change (type 3), link price time random effects2.","code":"data(\"Train\", package = \"mlogit\") data = prepare(form = choice ~ price | 0 | time + comfort + change,                 choice_data = Train,                re = c(\"price\",\"time\"))"},{"path":"https://loelschlaeger.de/RprobitB/articles/data_management.html","id":"simulated-data","dir":"Articles","previous_headings":"","what":"Simulated data","title":"Data management","text":"section explains simulate choice data using function simulate(). want simulate choices N deciders T choice occasions3 among J alternatives model formulation form, call function simulate() following optional arguments: re: character vector variable names form random effects. alternatives: character vector names choice alternatives length J. distr: named list number generation functions covariates drawn. element distr must form \"cov\" = list(\"name\" = \"<name number generation function>\", ...), cov name covariate4 ... required parameters number generation function. Covariates distribution specified drawn standard normal distribution. Possible number generation functions functions type r* base R (e.g. rnorm) required parameters (except n) must specified, function sample, required parameters except size) must specified. standardize: character vector variable names form get standardized, see . can specify true parameter values adding values alpha, fixed coefficient vector, C, number (greater equal 1) latent classes decision, makers s, vector class weights, b, matrix class means columns, Omega, matrix class covariance matrices columns, Sigma, differenced error term covariance matrix, Sigma_full, full error term covariance matrix.","code":"data = simulate(form = form, N = N, T = T, J = J)"},{"path":"https://loelschlaeger.de/RprobitB/articles/data_management.html","id":"example-simulated-choice-of-transportation-means-1","dir":"Articles","previous_headings":"Simulated data","what":"Example: Simulated choice of transportation means","title":"Data management","text":"revisit example simulated choice transportation means, already specified: Let us now simulate choices N = 100 decision makers T = 10 choice occasions J = 3 alternatives “car”, “bus” “train”. want C = 2 true latent classes specific distributions5 covariates:","code":"form = choice ~ cost | income | travel_time re = \"cost\" N = 100 T = 10 J = 3 alternatives = c(\"car\", \"bus\", \"train\") distr = list(\"cost\" = list(\"name\" = \"rnorm\", sd = 3),              \"income\" = list(\"name\" =  \"sample\", x = (1:10)*1e3, replace = TRUE),              \"travel_time_car\" = list(\"name\" = \"rlnorm\", meanlog = 1),              \"travel_time_bus\" = list(\"name\" = \"rlnorm\", meanlog = 2)) data = simulate(form = form, N = N, T = T, J = J, re = re,                 alternatives = alternatives, distr = distr, C = 2)"},{"path":"https://loelschlaeger.de/RprobitB/articles/data_management.html","id":"standardize-covariates","dir":"Articles","previous_headings":"","what":"Standardize covariates","title":"Data management","text":"simulate() prepare() optional input standardize, character vector names covariates get standardized, .e. normalize mean 0 standard deviation 1. standardize = \"\", covariates get standardized. Covariates type 1 3 addressed covariate_alternative. standardize = \"\", covariates get standardized.","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/data_management.html","id":"example-simulated-choice-of-transportation-means-2","dir":"Articles","previous_headings":"Standardize covariates","what":"Example: Simulated choice of transportation means","title":"Data management","text":"example simulated choice transportation means, scaling income reasonable can improve model fitting. demonstration purpose, also standardize travel_time alternative:","code":"standardize = c(\"income\", \"travel_time_car\", \"travel_time_bus\",                 \"travel_time_train\") data = simulate(form = form, N = N, T = T, J = J, re = re,                 alternatives = alternatives, parm = parm, distr = distr,                 standardize = standardize)"},{"path":"https://loelschlaeger.de/RprobitB/articles/data_management.html","id":"data-summary","dir":"Articles","previous_headings":"","what":"Data summary","title":"Data management","text":"can check data preparation simulation worked expected using summary() function. columns z re indicate standardized random effect covariates, respectively. rest output self-explanatory.","code":"summary(data)"},{"path":"https://loelschlaeger.de/RprobitB/articles/introduction.html","id":"for-what-tasks-is-this-package-designed","dir":"Articles","previous_headings":"","what":"For what tasks is this package designed?","title":"Introduction","text":"RprobitB1 can analyze choices made deciders among discrete set alternatives, estimate (latent class) (mixed) (multinomial) probit models Bayesian framework, model heterogeneity approximating underlying mixing distributions mixture normal distributions, identify latent classes decision makers. Run install.packages(\"RprobitB\") R console install latest version RprobitB. notation (latent class) (mixed) (multinomial) probit model? RprobitB can fit probit models increasing complexity: basic, modelling choice two alternatives (probit model). Considering two alternatives leads multinomial probit model. incorporate random effects, model gets prefix mixed. general model latent class mixed multinomial probit model, approximates mixing distribution mixiture normal distributions.","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/introduction.html","id":"a-package-overview","dir":"Articles","previous_headings":"","what":"A package overview","title":"Introduction","text":"model defined? prepare simulate choice data? fit model?","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/introduction_to_RprobitB_and_model_formulation.html","id":"introdution","dir":"Articles","previous_headings":"","what":"Introdution","title":"Introduction to RprobitB and model formulation","text":"RprobitB1 can analyze choices made deciders among discrete set alternatives, estimate (latent class) (mixed) (multinomial) probit models Bayesian framework, model heterogeneity approximating underlying mixing distributions mixture normal distributions, identify latent classes decision makers. Run install.packages(\"RprobitB\") R console install latest version RprobitB.","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/introduction_to_RprobitB_and_model_formulation.html","id":"levels-of-model-complexity","dir":"Articles","previous_headings":"","what":"Levels of model complexity","title":"Introduction to RprobitB and model formulation","text":"notation (latent class) (mixed) (multinomial) probit model? RprobitB can fit probit models increasing complexity: basic, modelling choice two alternatives (probit model). Considering two alternatives leads multinomial probit model. incorporate random effects, model gets prefix mixed. general model latent class mixed multinomial probit model, approximates mixing distribution mixiture normal distributions.","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/introduction_to_RprobitB_and_model_formulation.html","id":"outline-of-the-vignettes","dir":"Articles","previous_headings":"","what":"Outline of the vignettes","title":"Introduction to RprobitB and model formulation","text":"model defined? prepare simulate choice data? fit model?","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/introduction_to_RprobitB_and_model_formulation.html","id":"the-model","dir":"Articles","previous_headings":"","what":"The model","title":"Introduction to RprobitB and model formulation","text":"Assume observe choices \\(N\\) decision makers decide \\(J\\) alternatives \\(T\\) choice occasions.2 Specific decision maker, alternative choice occasion, furthermore observe \\(P_f+P_r\\) choice attributes use explain choices. first \\(P_f\\) attributes connected fixed coefficients, \\(P_r\\) attributes random coefficients following joint distribution mixed across decision makers. Person \\(n\\)’s utility \\(\\tilde{U}_{ntj}\\) alternative \\(j\\) choice occasion \\(t\\) modeled \\[\\begin{equation} \\tilde{U}_{ntj} = \\tilde{W}_{ntj}'\\alpha + \\tilde{X}_{ntj}'\\beta_n + \\tilde{\\epsilon}_{ntj} \\end{equation}\\] \\(n=1,\\dots,N\\), \\(t=1,\\dots,T\\) \\(j=1,\\dots,J\\), \\(\\tilde{W}_{ntj}\\) vector \\(P_f\\) characteristics \\(j\\) faced \\(n\\) \\(t\\) corresponding fixed coefficient vector \\(\\alpha \\{\\mathbb R}^{P_f}\\), \\(\\tilde{X}_{ntj}\\) vector \\(P_r\\) characteristics \\(j\\) faced \\(n\\) \\(t\\) corresponding random, decision maker-specific coefficient vector \\(\\beta_n \\{\\mathbb R}^{P_r}\\), \\(\\beta_n\\) distributed according \\(P_r\\)-variate distribution \\(g_{P_r}\\), \\((\\tilde{\\epsilon}_{nt:}) = (\\tilde{\\epsilon}_{nt1},\\dots,\\tilde{\\epsilon}_{ntJ})' \\sim \\text{MVN}_{J} (0,\\tilde{\\Sigma})\\) models’ error term vector \\(n\\) \\(t\\), probit model assumed multivariate normally distributed zero mean covariance matrix \\(\\tilde{\\Sigma}\\).","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/introduction_to_RprobitB_and_model_formulation.html","id":"normalization","dir":"Articles","previous_headings":"The model","what":"Normalization","title":"Introduction to RprobitB and model formulation","text":"well known, utility model needs normalized respect level scale order identified. Therefore, consider transformed model \\[\\begin{equation} U_{ntj} = W_{ntj}'\\alpha + X_{ntj}'\\beta_n + \\epsilon_{ntj}, \\end{equation}\\] \\(n=1,\\dots,N\\), \\(t=1,\\dots,T\\) \\(j=1,\\dots,J-1\\), (choosing \\(J\\) reference alternative) \\(U_{ntj}=\\tilde{U}_{ntj} - \\tilde{U}_{ntJ}\\), \\(W_{ntj}=\\tilde{W}_{ntj}-\\tilde{W}_{ntJ}\\), \\(X_{ntj}=\\tilde{X}_{ntj}-\\tilde{X}_{ntJ}\\) \\(\\epsilon_{ntj}=\\tilde{\\epsilon}_{ntj}-\\tilde{\\epsilon}_{ntJ}\\), \\((\\epsilon_{nt:}) = (\\epsilon_{nt1},...,\\epsilon_{nt(J-1)})' \\sim \\text{MVN}_{J-1} (0,\\Sigma)\\) \\(\\Sigma\\) denotes covariance matrix top-left element restricted one.3","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/introduction_to_RprobitB_and_model_formulation.html","id":"linking-the-latent-utility-to-the-choices","dir":"Articles","previous_headings":"The model","what":"Linking the latent utility to the choices","title":"Introduction to RprobitB and model formulation","text":"Let \\(y_{nt}=j\\) denote event decision maker \\(n\\) chooses alternative \\(j\\) choice occasion \\(t\\). Assuming utility maximizing behavior decision makers, decisions linked utilities via \\[\\begin{equation} y_{nt} = \\sum_{j=1}^{J-1} j\\cdot 1 \\left (U_{ntj}=\\max_i U_{nti}>0 \\right) + J \\cdot 1\\left (U_{ntj}<0 ~\\text{}~j\\right),  \\end{equation}\\] \\(1()\\) equals \\(1\\) condition \\(\\) true \\(0\\) else.","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/introduction_to_RprobitB_and_model_formulation.html","id":"approximating-the-mixing-distribution","dir":"Articles","previous_headings":"The model","what":"Approximating the mixing distribution","title":"Introduction to RprobitB and model formulation","text":"approximate mixing distribution \\(g_{P_r}\\) random coefficients4 \\(\\beta=(\\beta_n)_{n}\\) mixture \\(P_r\\)-variate normal densities \\(\\phi_{P_r}\\) mean vectors \\(b=(b_c)_{c}\\) covariance matrices \\(\\Omega=(\\Omega_c)_{c}\\) using \\(C\\) components, .e. \\[\\begin{equation} \\beta_n\\mid b,\\Omega \\sim \\sum_{c=1}^{C} s_c \\phi_{P_r} (\\cdot \\mid b_c,\\Omega_c), \\end{equation}\\] \\((s_c)_{c}\\) weights satisfying \\(0 < s_c\\leq 1\\) \\(c=1,\\dots,C\\) \\(\\sum_c s_c=1\\).","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/introduction_to_RprobitB_and_model_formulation.html","id":"interpreting-the-latent-classes","dir":"Articles","previous_headings":"The model","what":"Interpreting the latent classes","title":"Introduction to RprobitB and model formulation","text":"One interpretation latent class model obtained introducing variables \\(z=(z_n)_n\\) allocating decision maker \\(n\\) class \\(c\\) probability \\(s_c\\), .e. \\[\\begin{equation} \\text{Prob}(z_n=c)=s_c \\quad \\text{} \\quad \\beta_n \\mid z,b,\\Omega \\sim \\phi_{P_r}(\\cdot \\mid b_{z_n},\\Omega_{z_n}). \\end{equation}\\] call model latent class mixed multinomial probit model.5","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/model_definition.html","id":"the-probit-model-assumptions","dir":"Articles","previous_headings":"","what":"The probit model assumptions","title":"Model definition","text":"Assume observe choices \\(N\\) decision makers decide \\(J\\) alternatives \\(T\\) choice occasions.1 Specific decision maker, alternative choice occasion, furthermore observe \\(P_f + P_r\\) choice attributes use explain choices. first \\(P_f\\) attributes connected fixed coefficients, \\(P_r\\) attributes random coefficients following joint distribution mixed across decision makers. Person \\(n\\)’s utility \\(\\tilde{U}_{ntj}\\) alternative \\(j\\) choice occasion \\(t\\) modeled \\[\\begin{equation} \\tilde{U}_{ntj} = \\tilde{W}_{ntj}'\\alpha + \\tilde{X}_{ntj}'\\beta_n + \\tilde{\\epsilon}_{ntj} \\end{equation}\\] \\(n=1,\\dots,N\\), \\(t=1,\\dots,T\\) \\(j=1,\\dots,J\\), \\(\\tilde{W}_{ntj}\\) vector \\(P_f\\) characteristics \\(j\\) faced \\(n\\) \\(t\\) corresponding fixed coefficient vector \\(\\alpha \\{\\mathbb R}^{P_f}\\), \\(\\tilde{X}_{ntj}\\) vector \\(P_r\\) characteristics \\(j\\) faced \\(n\\) \\(t\\) corresponding random, decision maker-specific coefficient vector \\(\\beta_n \\{\\mathbb R}^{P_r}\\), \\(\\beta_n\\) distributed according \\(P_r\\)-variate distribution \\(g_{P_r}\\), \\((\\tilde{\\epsilon}_{nt:}) = (\\tilde{\\epsilon}_{nt1},\\dots,\\tilde{\\epsilon}_{ntJ})' \\sim \\text{MVN}_{J} (0,\\tilde{\\Sigma})\\) models’ error term vector \\(n\\) \\(t\\), probit model assumed multivariate normally distributed zero mean covariance matrix \\(\\tilde{\\Sigma}\\).","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/model_definition.html","id":"normalization","dir":"Articles","previous_headings":"","what":"Normalization","title":"Model definition","text":"well known, utility model needs normalized respect level scale order identified (Train 2009). Therefore, consider transformed model \\[\\begin{equation} U_{ntj} = W_{ntj}'\\alpha + X_{ntj}'\\beta_n + \\epsilon_{ntj}, \\end{equation}\\] \\(n=1,\\dots,N\\), \\(t=1,\\dots,T\\) \\(j=1,\\dots,J-1\\), (choosing \\(J\\) reference alternative) \\(U_{ntj}=\\tilde{U}_{ntj} - \\tilde{U}_{ntJ}\\), \\(W_{ntj}=\\tilde{W}_{ntj}-\\tilde{W}_{ntJ}\\), \\(X_{ntj}=\\tilde{X}_{ntj}-\\tilde{X}_{ntJ}\\) \\(\\epsilon_{ntj}=\\tilde{\\epsilon}_{ntj}-\\tilde{\\epsilon}_{ntJ}\\), \\((\\epsilon_{nt:}) = (\\epsilon_{nt1},...,\\epsilon_{nt(J-1)})' \\sim \\text{MVN}_{J-1} (0,\\Sigma)\\) \\(\\Sigma\\) denotes covariance matrix top-left element restricted one.2","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/model_definition.html","id":"linking-the-latent-utilities-to-the-choices","dir":"Articles","previous_headings":"","what":"Linking the latent utilities to the choices","title":"Model definition","text":"Let \\(y_{nt}=j\\) denote event decision maker \\(n\\) chooses alternative \\(j\\) choice occasion \\(t\\). Assuming utility maximizing behavior decision makers, decisions linked utilities via \\[\\begin{equation} y_{nt} = \\sum_{j=1}^{J-1} j\\cdot 1 \\left (U_{ntj}=\\max_i U_{nti}>0 \\right) + J \\cdot 1\\left (U_{ntj}<0 ~\\text{}~j\\right), \\end{equation}\\] \\(1()\\) equals \\(1\\) condition \\(\\) true \\(0\\) else.","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/model_definition.html","id":"approximating-the-mixing-distribution","dir":"Articles","previous_headings":"","what":"Approximating the mixing distribution","title":"Model definition","text":"RprobitB implemented approach (Oelschläger Bauer 2020) approximate underlying mixing distribution mixture (multivariate) Gaussian densities. precisely, underlying mixing distribution \\(g_{P_r}\\) random coefficients3 \\(\\beta=(\\beta_n)_{n}\\) approximated mixture \\(P_r\\)-variate normal densities \\(\\phi_{P_r}\\) mean vectors \\(b=(b_c)_{c}\\) covariance matrices \\(\\Omega=(\\Omega_c)_{c}\\) using \\(C\\) components, .e. \\[\\begin{equation} \\beta_n\\mid b,\\Omega \\sim \\sum_{c=1}^{C} s_c \\phi_{P_r} (\\cdot \\mid b_c,\\Omega_c), \\end{equation}\\] \\((s_c)_{c}\\) weights satisfying \\(0 < s_c\\leq 1\\) \\(c=1,\\dots,C\\) \\(\\sum_c s_c=1\\).","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/model_definition.html","id":"interpreting-the-latent-classes","dir":"Articles","previous_headings":"","what":"Interpreting the latent classes","title":"Model definition","text":"One interpretation latent class model obtained introducing variables \\(z=(z_n)_n\\) allocating decision maker \\(n\\) class \\(c\\) probability \\(s_c\\), .e. \\[\\begin{equation} \\text{Prob}(z_n=c)=s_c \\quad \\text{} \\quad \\beta_n \\mid z,b,\\Omega \\sim \\phi_{P_r}(\\cdot \\mid b_{z_n},\\Omega_{z_n}). \\end{equation}\\] interpretation leads classification deciders based heterogeneous choice behavior.","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/model_definition.html","id":"model-complexities","dir":"Articles","previous_headings":"","what":"Model complexities","title":"Model definition","text":"call defined model latent class mixed multinomial probit model. Note model collapses (normally) mixed multinomial probit model \\(P_r>0\\) \\(C=1\\), multinomial probit model \\(P_r=0\\) binary probit model additionally \\(J=2\\).","code":""},{"path":[]},{"path":"https://loelschlaeger.de/RprobitB/articles/model_fitting.html","id":"prior-settings","dir":"Articles","previous_headings":"","what":"Prior settings","title":"Model fitting","text":"Bayesian analysis enables impose prior beliefs model parameters. possible either express strong prior knowledge using informative prior distributions express vague knowledge using diffuse prior distributions. RprobitB applies following conjugate priors: \\((s_1,\\dots,s_C)\\sim D_C(\\delta)\\), \\(D_C(\\delta)\\) denotes \\(C\\)-dimensional Dirichlet distribution concentration parameter vector \\(\\delta = (\\delta_1,\\dots,\\delta_C)\\), \\(\\alpha\\sim \\text{MVN}{P_f}(\\psi,\\Psi)\\), \\(b_c \\sim \\text{MVN}{P_r}(\\xi,\\Xi)\\), independent \\(c\\), \\(\\Omega_c \\sim W^{-1}_{P_r}(\\nu,\\Theta)\\), independent \\(c\\), \\(W^{-1}_{P_r}(\\nu,\\Theta)\\) denotes \\(P_r\\)-dimensional inverse Wishart distribution \\(\\nu\\) degrees freedom scale matrix \\(\\Theta\\), \\(\\Sigma \\sim W^{-1}_{J-1}(\\kappa,\\Lambda)\\). Per default, RprobitB applies diffuse prior approach, setting \\(\\delta_1=\\dots=\\delta_C=1\\); \\(\\psi\\) \\(\\xi\\) equal zero vector; \\(\\Psi\\) \\(\\Xi\\) equal identity matrix; \\(\\nu\\) \\(\\kappa\\) equal \\(P_r+2\\) \\(J+1\\), respectively (obtain proper priors); \\(\\Theta\\) \\(\\Lambda\\) equal identity matrix. Alternatively, parameters can chosen based estimation results similar choice settings, resulting informative priors.","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/model_fitting.html","id":"bayes-estimation-of-the-probit-model-via-gibbs-sampling","dir":"Articles","previous_headings":"","what":"Bayes estimation of the probit model via Gibbs sampling","title":"Model fitting","text":"Bayesian analysis (latent class) (mixed) (multinomial) probit model builds upon work (McCulloch Rossi 1994), (Nobile 1998), (Allenby Rossi 1998), (Imai Dyk 2005). key ingredient concept data augmentation, cf. (Albert Chib 1993), treats latent utilities parameters . Conditional latent utilities, multinomial probit model constitutes standard Bayesian linear regression set-, renders drawing posterior distribution feasible without need evaluate likelihood. Gibbs sampling joint posterior distribution latent class mixed multinomial probit model proceeds iteratively drawing updating model parameter conditional parameters. class weights drawn Dirichlet distribution \\[\\begin{equation} (s_1,\\dots,s_C)\\mid \\delta,z \\sim D_C(\\delta_1+m_1,\\dots,\\delta_C+m_C), \\end{equation}\\] \\(c=1,\\dots,C\\), \\(m_c=\\#\\{n:z_n=c\\}\\) denotes current absolute class size. Mind model invariant permutations class labels \\(1,\\dots,C\\). reason, accept update ordering \\(s_1<\\dots<s_C\\) holds, thereby ensuring unique labeling classes. Independently \\(n\\), update allocation variables \\((z_n)_n\\) conditional distribution \\[\\begin{equation} \\text{Prob}(z_n=c\\mid s,\\beta,b,\\Omega )=\\frac{s_c\\phi_{P_r}(\\beta_n\\mid b_c,\\Omega_c)}{\\sum_c s_c\\phi_{P_r}(\\beta_n\\mid b_c,\\Omega_c)}. \\end{equation}\\] class means \\((b_c)_c\\) updated independently \\(c\\) via \\[\\begin{equation} b_c\\mid \\Xi,\\Omega,\\xi,z,\\beta \\sim\\text{MVN}{P_r}\\left( \\mu_{b_c}, \\Sigma_{b_c}  \\right), \\end{equation}\\] \\(\\mu_{b_c}=(\\Xi^{-1}+m_c\\Omega_c^{-1})^{-1}(\\Xi^{-1}\\xi +m_c\\Omega_c^{-1}\\bar{b}_c)\\), \\(\\Sigma_{b_c}=(\\Xi^{-1}+m_c\\Omega_c^{-1})^{-1}\\), \\(\\bar{b}_c=m_c^{-1}\\sum_{n:z_n=c} \\beta_n\\). class covariance matrices \\((\\Omega_c)_c\\) updated independently \\(c\\) via \\[\\begin{equation} \\Omega_c \\mid \\nu,\\Theta,z,\\beta,b \\sim W^{-1}_{P_r}(\\mu_{\\Omega_c},\\Sigma_{\\Omega_c}), \\end{equation}\\] \\(\\mu_{\\Omega_c}=\\nu+m_c\\) \\(\\Sigma_{\\Omega_c}=\\Theta^{-1} + \\sum_{n:z_n=c} (\\beta_n-b_c)(\\beta_n-b_c)'\\). Independently \\(n\\) \\(t\\) conditionally components, utility vectors \\((U_{nt:})\\) follow \\(J-1\\)-dimensional truncated multivariate normal distribution, truncation points determined choices \\(y_{nt}\\). sample truncated multivariate normal distribution, apply sub-Gibbs sampler, following approach : \\[\\begin{equation} U_{ntj} \\mid U_{nt(-j)},y_{nt},\\Sigma,W,\\alpha,X,\\beta  \\sim \\mathcal{N}(\\mu_{U_{ntj}},\\Sigma_{U_{ntj}}) \\cdot \\begin{cases} 1(U_{ntj}>\\max(U_{nt(-j)},0) ) & \\text{}~ y_{nt}=j\\\\ 1(U_{ntj}<\\max(U_{nt(-j)},0) ) & \\text{}~ y_{nt}\\neq j \\end{cases}, \\end{equation}\\] \\(U_{nt(-j)}\\) denotes vector \\((U_{nt:})\\) without element \\(U_{ntj}\\), \\(\\mathcal{N}\\) denotes univariate normal distribution, \\(\\Sigma_{U_{ntj}} = 1/(\\Sigma^{-1})_{jj}\\) \\[\\begin{equation} \\mu_{U_{ntj}} = W_{ntj}'\\alpha + X_{ntj}'\\beta_n - \\Sigma_{U_{ntj}} (\\Sigma^{-1})_{j(-j)}   (U_{nt(-j)} - W_{nt(-j)}'\\alpha - X_{nt(-j)}' \\beta_n ), \\end{equation}\\] \\((\\Sigma^{-1})_{jj}\\) denotes \\((j,j)\\)th element \\(\\Sigma^{-1}\\), \\((\\Sigma^{-1})_{j(-j)}\\) \\(j\\)th row without \\(j\\)th entry, \\(W_{nt(-j)}\\) \\(X_{nt(-j)}\\) coefficient matrices \\(W_{nt}\\) \\(X_{nt}\\), respectively, without \\(j\\)th column. Updating fixed coefficient vector \\(\\alpha\\) achieved applying formula Bayesian linear regression regressors \\(W_{nt}\\) regressands \\((U_{nt:})-X_{nt}'\\beta_n\\), .e. \\[\\begin{equation} \\alpha \\mid \\Psi,\\psi,W,\\Sigma,U,X,\\beta \\sim \\text{MVN}{P_f}(\\mu_\\alpha,\\Sigma_\\alpha), \\end{equation}\\] \\(\\mu_\\alpha = \\Sigma_\\alpha (\\Psi^{-1}\\psi + \\sum_{n=1,t=1}^{N,T} W_{nt} \\Sigma^{-1} ((U_{nt:})-X_{nt}'\\beta_n) )\\) \\(\\Sigma_\\alpha = (\\Psi^{-1} + \\sum_{n=1,t=1}^{N,T} W_{nt}\\Sigma^{-1} W_{nt}^{'} )^{-1}\\). Analogously \\(\\alpha\\), random coefficients \\((\\beta_n)_n\\) updated independently via \\[\\begin{equation} \\beta_n \\mid \\Omega,b,X,\\Sigma,U,W,\\alpha \\sim \\text{MVN}{P_r}(\\mu_{\\beta_n},\\Sigma_{\\beta_n}), \\end{equation}\\] \\(\\mu_{\\beta_n} = \\Sigma_{\\beta_n} (\\Omega_{z_n}^{-1}b_{z_n} + \\sum_{t=1}^{T} X_{nt} \\Sigma^{-1} (U_{nt}-W_{nt}'\\alpha) )\\) \\(\\Sigma_{\\beta_n} = (\\Omega_{z_n}^{-1} + \\sum_{t=1}^{T} X_{nt}\\Sigma^{-1} X_{nt}^{'} )^{-1}\\) . error term covariance matrix \\(\\Sigma\\) updated means \\[\\begin{equation} \\Sigma \\mid \\kappa,\\Lambda,U,W,\\alpha,X,\\beta \\sim W^{-1}_{J-1}(\\kappa+NT,\\Lambda+S), \\\\ \\end{equation}\\] \\(S = \\sum_{n=1,t=1}^{N,T} \\varepsilon_{nt} \\varepsilon_{nt}'\\) \\(\\varepsilon_{nt} = (U_{nt:}) - W_{nt}'\\alpha - X_{nt}'\\beta_n\\).","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/model_fitting.html","id":"parameter-normalization","dir":"Articles","previous_headings":"","what":"Parameter normalization","title":"Model fitting","text":"Samples obtained scheme described still lack identification (see introductory vignette). Therefore, subsequent sampling, normalizations \\(\\alpha^{()}/\\sqrt{(\\Sigma^{()})_{11}}\\), \\(b_c^{()}/\\sqrt{(\\Sigma^{()})_{11}}\\), \\(\\Omega_c^{()}/(\\Sigma^{()})_{11}\\), \\(c=1,\\dots,C\\) \\(\\Sigma^{()}/(\\Sigma^{()})_{11}\\) required \\(\\)th updates iterations \\(\\), cf. (Imai Dyk 2005), \\((\\Sigma^{()})_{11}\\) denotes top-left element \\(\\Sigma^{()}\\). draws \\(s\\) \\(z\\) need normalized. draws \\(U\\) \\(\\beta\\) normalized results interest analysis. Alternatively, samples can normalized variance \\(\\Sigma\\) element \\(\\alpha\\) equals fixed non-negative value. normalization fitted model can changed afterwards via model output mcmc() scale named list three elements, determining parameter normalization, described .","code":"model <- transform(model, scale = scale)"},{"path":"https://loelschlaeger.de/RprobitB/articles/model_fitting.html","id":"burning-and-thinning","dir":"Articles","previous_headings":"","what":"Burning and thinning","title":"Model fitting","text":"theory behind Gibbs sampling constitutes sequence samples produced updating scheme can considered Markov chain stationary distribution equal desired joint posterior distribution. takes certain number iterations stationary distribution approximated reasonably well. Therefore, common practice discard first \\(B\\) \\(R\\) samples (-called burn-period). Furthermore, correlation nearby samples expected. order obtain independent samples, consider every \\(Q\\)th sample averaging values compute parameter statistics like expectation standard deviation. Adequate values \\(R\\), \\(B\\) \\(Q\\) depend complexity considered Bayesian framework. Per default, RprobitB sets R = 1e4, B = R/2 Q = 10. independence samples can verified computing serial correlation convergence Gibbs sampler can checked considering trace plots.","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/model_fitting.html","id":"updating-the-number-of-latent-classes","dir":"Articles","previous_headings":"","what":"Updating the number of latent classes","title":"Model fitting","text":"Updating number \\(C\\) latent classes done within Gibbs sampler executing following weight-based updating scheme within second half burn-period2: remove class \\(c\\), \\(s_c<\\varepsilon_{\\text{min}}\\), .e. class weight \\(s_c\\) drops threshold \\(\\varepsilon_{\\text{min}}\\). case indicates class \\(c\\) negligible impact mixing distribution. split class \\(c\\) two classes \\(c_1\\) \\(c_2\\), \\(s_c>\\varepsilon_\\text{max}\\). case indicates class \\(c\\) high influence mixing distribution whose approximation can potentially improved increasing resolution directions high variance. Therefore, class means \\(b_{c_1}\\) \\(b_{c_2}\\) new classes \\(c_1\\) \\(c_2\\) shifted opposite directions class mean \\(b_c\\) old class \\(c\\) direction highest variance. join two classes \\(c_1\\) \\(c_2\\) one class \\(c\\), \\(\\lVert b_{c_1} - b_{c_2} \\rVert<\\varepsilon_{\\text{distmin}}\\), .e. euclidean distance class means \\(b_{c_1}\\) \\(b_{c_2}\\) drops threshold \\(\\varepsilon_{\\text{distmin}}\\). case indicates location redundancy repealed. parameters \\(c\\) assigned adding values \\(s\\) \\(c_1\\) \\(c_2\\) averaging values \\(b\\) \\(\\Omega\\). rules contain choices values \\(\\varepsilon_{\\text{min}}\\), \\(\\varepsilon_{\\text{max}}\\) \\(\\varepsilon_{\\text{distmin}}\\). adequate value \\(\\varepsilon_{\\text{distmin}}\\) depends scale parameters. Per default, RprobitB sets epsmin = 0.01, epsmax = 0.99, distmin = 0.1.","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/model_fitting.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Model fitting","text":"","code":"### probit model p = simulate(form = choice ~ var | 0, N = 100, T = 10, J = 2) m1 = mcmc(data = p) ### multinomial probit model mnp = simulate(form = choice ~ var | 0, N = 100, T = 10, J = 3) m2 = mcmc(data = mnp) ### mixed multinomial probit model mmnp = simulate(form = choice ~ 0 | var, N = 100, T = 10, J = 3, re = \"var\") m3 = mcmc(data = mmnp) ### latent classes mixed multinomial probit model lcmmnp = simulate(form = choice ~ 0 | var, N = 100, T = 10, J = 3, re = \"var\",                   parm = list(\"C\" = 2)) m4 = mcmc(data = lcmmnp, latent_classes = list(\"C\" = 2)) ### update of latent classes m5 = mcmc(data = lcmmnp, latent_classes = list(\"update\" = TRUE))"},{"path":[]},{"path":"https://loelschlaeger.de/RprobitB/articles/model_selection.html","id":"model-selection-with-the-model_selection-function","dir":"Articles","previous_headings":"","what":"Model selection with the model_selection() function","title":"Model selection","text":"RprobitB provides function called model_selection() guides process model selection. input function takes arbitrary number RprobitB_model objects. illustration, fit three different models increasing complexity Train dataset mlogit package. model_selection() function returns following information: output explained detail .","code":"data(\"Train\", package = \"mlogit\")  ### Using only the alternative's price as covariate d1 <- prepare_data(   form = choice ~ price,   choice_data = Train ) m1 <- mcmc(d1, print_progress = FALSE)  ### Using all available covariates d2 <- prepare_data(   form = choice ~ price | 0 | time + comfort + change,   choice_data = Train ) m2 <- mcmc(d2, print_progress = FALSE)  ### We additionally impose a mixing distribution on the price coefficient d3 <- prepare_data(   form = choice ~ price | 0 | time + comfort + change,   choice_data = Train,    re = \"price\" ) m3 <- mcmc(d3, print_progress = FALSE) model_selection(m1, m2, m3)"},{"path":[]},{"path":"https://loelschlaeger.de/RprobitB/articles/model_selection.html","id":"npar","dir":"Articles","previous_headings":"Information criteria","what":"npar","title":"Model selection","text":"Simply number estimated model parameters.","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/model_selection.html","id":"ll","dir":"Articles","previous_headings":"Information criteria","what":"LL","title":"Model selection","text":"model’s log-likelihood value estimated parameters.","code":""},{"path":[]},{"path":[]},{"path":"https://loelschlaeger.de/RprobitB/articles/model_selection.html","id":"waic","dir":"Articles","previous_headings":"Information criteria","what":"WAIC","title":"Model selection","text":"WAIC short Widely Applicable Information Criterion. smaller value better model. definition \\[\\text{WAIC} = -2 ( \\text{lppd} - p_\\text{WAIC} ),\\] \\(\\text{lppd}\\) log-pointwise-predictive-density \\(p_\\text{WAIC}\\) penalty term sometimes called effective number parameters. \\(\\text{lppd}\\) computed follows. Let \\(p_{} = \\Pr(y_i\\mid \\theta_s)\\) probability observation \\(y_i\\) given \\(s\\)-th set sampled parameter values posterior distribution \\(\\theta_s\\). \\[\\text{lppd} = \\sum_i \\log S^{-1} \\sum_s p_{si}.\\] penalty term computed sum variances log-probability observation: \\[p_\\text{WAIC} = \\sum_i \\text{var}_{\\theta} \\log p_{si}. \\] Note individual observation penalty term \\(p_\\text{WAIC}\\), provides interesting opportunity study different observations contribute overfitting.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://loelschlaeger.de/RprobitB/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lennart Oelschläger. Author, maintainer. Dietmar Bauer. Author. Sebastian Büscher. Contributor. Manuel Batram. Contributor.","code":""},{"path":"https://loelschlaeger.de/RprobitB/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"OelschlÃ¤ger L, Bauer D (2022). RprobitB: Bayes Estimation Mixed Multinomial Probit Models. R package version 1.0.0.9000, https://loelschlaeger.de/RprobitB/.","code":"@Manual{,   title = {RprobitB: Bayes Estimation of Mixed Multinomial Probit Models},   author = {Lennart Oelschläger and Dietmar Bauer},   year = {2022},   note = {R package version 1.0.0.9000},   url = {https://loelschlaeger.de/RprobitB/}, }"},{"path":"https://loelschlaeger.de/RprobitB/index.html","id":"rprobitb-","dir":"","previous_headings":"","what":"Probit models for choice data","title":"Probit models for choice data","text":"goal RprobitB fit mixed probit models choice data. package differs comparable packages two ways: Bayesian estimation focus taste heterogeneity.","code":""},{"path":"https://loelschlaeger.de/RprobitB/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Probit models for choice data","text":"can install released version RprobitB CRAN : development version GitHub :","code":"install.packages(\"RprobitB\") # install.packages(\"devtools\") devtools::install_github(\"loelschlaeger/RprobitB\")"},{"path":"https://loelschlaeger.de/RprobitB/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Probit models for choice data","text":"package documented several vignettes:","code":"browseVignettes(\"RprobitB\")"},{"path":"https://loelschlaeger.de/RprobitB/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Probit models for choice data","text":"basic example show fit mixed probit model make choice predictions: First, load package. , prepare choice data, example Train dataset mlogit package. split dataset train (70%) test subset (30%). Call mcmc function estimate model. summary method gives overview estimates. Let’s visualize estimated mixture distribution price coefficient.  predict function makes choice predictions compares prediction actual choices.","code":"library(RprobitB) #> Thanks for using RprobitB 1.0.0.9000, happy choice modeling! #> See https://loelschlaeger.de/RprobitB for help. #> Type 'citation(\"RprobitB\")' for citing this R package. data(\"Train\", package = \"mlogit\") data <- prepare_data(   form = choice ~ price | 0 | time + comfort + change,   choice_data = Train,   re = \"price\",   standardize = \"all\") data <- train_test(data, test_proportion = 0.3) model <- mcmc(data$train) #> Iteration Info                   ETA (min) #>         0 started Gibbs sampling           #>      1000                                2 #>      2000                                2 #>      3000                                2 #>      4000                                2 #>      5000                                1 #>      6000                                1 #>      7000                                1 #>      8000                                1 #>      9000                                1 #>     10000 done, total time: 2 min summary(model) #> Probit model 'choice ~ price | 0 | time + comfort + change'. #>  #> MCMC settings: #> - R: 10000  #> - B: 5000  #> - Q: 1  #>  #> Normalization: #> - Level: Utility differences with respect to alternative 2. #> - Scale: Coefficient of the 1. error term variance in Sigma fixed to 1. #>  #> Legend of alternatives: #>   name #> 1    A #> 2    B #>  #> Legend of linear coefficients: #>        name    re #> 1    time_A FALSE #> 2    time_B FALSE #> 3 comfort_A FALSE #> 4 comfort_B FALSE #> 5  change_A FALSE #> 6  change_B FALSE #> 7     price  TRUE #>  #> Latent classes: 1  #> - Update: FALSE  #>  #> Parameter statistics: #>           mean      sd      R^ #>  alpha #>                                #>      1   -0.82    0.08    1.02 #>      2   -0.85    0.08    1.01 #>      3   -0.52    0.05    1.01 #>      4   -0.50    0.05    1.00 #>      5   -0.26    0.05    1.01 #>      6   -0.21    0.05    1.00 #>  #>  s #>                                #>      1    1.00    0.00     NaN #>  #>  b #>                                #>    1.1   -2.19    0.26    1.02 #>  #>  Omega #>                                #>  1.1,1    3.10    0.87    1.01 #>  #>  Sigma #>                                #>    1,1    1.00    0.00    1.00 plot(model, type = \"mixture\") predict(model, data$test) #>     predicted #> true   A   B #>    A 299 127 #>    B 144 304"},{"path":"https://loelschlaeger.de/RprobitB/reference/berserk_choice.html","id":null,"dir":"Reference","previous_headings":"","what":"Choice of berserking — berserk_choice","title":"Choice of berserking — berserk_choice","text":"dataset includes binary berserking choice participants yearly bullet arena online chess platform https://lichess.org. tournament startet 2022-01-10 17:00:25 lasted 240 minutes.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/berserk_choice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Choice of berserking — berserk_choice","text":"","code":"data(berserk_choice)"},{"path":"https://loelschlaeger.de/RprobitB/reference/berserk_choice.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Choice of berserking — berserk_choice","text":"data frame containing berserking choices White Black player 65811 bullet (1+0) games. consists following columns: id_white id_black, unique lichess usernames White Black players game, rating_white rating_black, player's lichess bullet rating start game, berserk_white berserk_black, boolean whether players berserked, winner, winner game, either 'white', 'black' 'draw', minutes_remaining, number minutes left tournament, game_id, game's id lichess (game can accessed via https://lichess.org/<game_id>).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/berserk_choice.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Choice of berserking — berserk_choice","text":"data obtained via lichess API https://lichess.org/api tournament id 'RibHfoX6' 2022-01-25.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/berserk_choice.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Choice of berserking — berserk_choice","text":"'berserk' feature online chess platform https://lichess.org. game starts, player can click 'berserk' button, lose half clock time, win worth one extra tournament point. See https://lichess.org/tournament/help?system=arena information.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/check_distr.html","id":null,"dir":"Reference","previous_headings":"","what":"Check distr. — check_distr","title":"Check distr. — check_distr","text":"function checks input distr.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/check_distr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check distr. — check_distr","text":"","code":"check_distr(distr)"},{"path":"https://loelschlaeger.de/RprobitB/reference/check_distr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check distr. — check_distr","text":"distr named list number generation functions covariates drawn. Covariates distribution specified drawn standard normal distribution. element distr must form \"cov\" = list(\"name\" = \"<name number generation function>\",...), cov name covariate ... required parameters number generation function. Possible number generation functions functions type r* base R (e.g. rnorm) required parameters (except n) must specified, function sample, required parameters (except size) must specified.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/check_distr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check distr. — check_distr","text":"checked input distr.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/check_form.html","id":null,"dir":"Reference","previous_headings":"","what":"Check form. — check_form","title":"Check form. — check_form","text":"function checks input form.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/check_form.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check form. — check_form","text":"","code":"check_form(form, re = NULL)"},{"path":"https://loelschlaeger.de/RprobitB/reference/check_form.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check form. — check_form","text":"form formula object used specify probit model. structure choice ~ | B | C, names alternative choice situation specific covariates generic coefficient, B names choice situation specific covariates alternative specific coefficients, C names alternative choice situation specific covariates alternative specific coefficients. Separate multiple covariates one type + sign. default, alternative specific constants (ASCs) added model (except last alternative). can removed adding +0 second spot. See vignette vignette(\"data_management\", package = \"RprobitB\") details. re character (vector) covariates form random effects. re = NULL (default), random effects. random effects alternative specific constants, include \"ASC\" re.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/check_form.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check form. — check_form","text":"object class RprobitB_formula, list contains following elements: form: input form. choice: dependent variable form. re: input re, covariates part form removed. vars: list three character vectors covariate names three covariate types. ASC: boolean, determining whether model ASCs.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/check_form.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check form. — check_form","text":"","code":"form <- choice ~ price + time + comfort + change | 1 re <- re <- c(\"price\", \"time\") check_form(form = form, re = re) #> choice ~ price + time + comfort + change | 1 #> <environment: 0x00000000292385d0> #> - dependent variable: choice  #> - type 1 covariate(s): price, time, comfort, change  #> - type 2 covariate(s):   #> - type 3 covariate(s):   #> - random effects: price, time  #> - ASC: TRUE"},{"path":"https://loelschlaeger.de/RprobitB/reference/check_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Check prior parameters — check_prior","title":"Check prior parameters — check_prior","text":"function checks compatibility submitted parameters prior distributions sets missing values default values.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/check_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check prior parameters — check_prior","text":"","code":"check_prior(   P_f,   P_r,   J,   eta = numeric(P_f),   Psi = diag(P_f),   delta = 1,   xi = numeric(P_r),   D = diag(P_r),   nu = P_r + 2,   Theta = diag(P_r),   kappa = J + 1,   E = diag(J - 1) )"},{"path":"https://loelschlaeger.de/RprobitB/reference/check_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check prior parameters — check_prior","text":"P_f number covariates connected fixed coefficient (can 0). P_r number covariates connected random coefficient (can 0). J number (greater equal 2) choice alternatives. eta mean vector length P_f normal prior alpha. Psi covariance matrix dimension P_f x P_f normal prior alpha. delta numeric concentration parameter vector rep(delta,C) Dirichlet prior s. xi mean vector length P_r normal prior b_c. D covariance matrix dimension P_r x P_r normal prior b_c. nu degrees freedom (natural number greater P_r) Inverse Wishart prior Omega_c. Theta scale matrix dimension P_r x P_r Inverse Wishart prior Omega_c. kappa degrees freedom (natural number greater J-1) Inverse Wishart prior Sigma. E scale matrix dimension J-1 x J-1 Inverse Wishart prior Sigma.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/check_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check prior parameters — check_prior","text":"list containing prior parameters. Parameters relevant model configuration set NA.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/check_prior.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check prior parameters — check_prior","text":"priori, assume model parameters follow distributions: \\(\\alpha \\sim N(\\eta, \\Psi)\\) \\(s \\sim Dir(\\delta)\\) \\(b_c \\sim N(\\xi, D)\\) classes \\(c\\) \\(\\Omega_c \\sim IW(\\nu,\\Theta)\\) classes \\(c\\) \\(\\Sigma \\sim IW(\\kappa,E)\\) \\(N\\) denotes normal, \\(Dir\\) Dirichlet, \\(IW\\) Inverted Wishart distribution.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/check_prior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check prior parameters — check_prior","text":"","code":"check_prior(P_f = 1, P_r = 2, J = 3) #> $eta #> [1] 0 #>  #> $Psi #>      [,1] #> [1,]    1 #>  #> $delta #> [1] 1 #>  #> $xi #> [1] 0 0 #>  #> $D #>      [,1] [,2] #> [1,]    1    0 #> [2,]    0    1 #>  #> $nu #> [1] 4 #>  #> $Theta #>      [,1] [,2] #> [1,]    1    0 #> [2,]    0    1 #>  #> $kappa #> [1] 4 #>  #> $E #>      [,1] [,2] #> [1,]    1    0 #> [2,]    0    1 #>"},{"path":"https://loelschlaeger.de/RprobitB/reference/choice_probabilities.html","id":null,"dir":"Reference","previous_headings":"","what":"Return choice probabilities of an RprobitB_fit. — choice_probabilities","title":"Return choice probabilities of an RprobitB_fit. — choice_probabilities","text":"function returns choice probabilities RprobitB_fit.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/choice_probabilities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return choice probabilities of an RprobitB_fit. — choice_probabilities","text":"","code":"choice_probabilities(x, data = NULL, par_set = mean)"},{"path":"https://loelschlaeger.de/RprobitB/reference/choice_probabilities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return choice probabilities of an RprobitB_fit. — choice_probabilities","text":"x object class RprobitB_fit. data Either NULL object class RprobitB_data. former case, choice probabilities computed data used model fitting. Alternatively, new data set can provided. par_set Specifying parameter set calculation either function computes posterior point estimate (default mean()), \"true\" select true parameter set, object class RprobitB_parameter.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/choice_probabilities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return choice probabilities of an RprobitB_fit. — choice_probabilities","text":"data frame choice probabilities choice situations rows alternatives columns. first two columns decider identifier \"id\" choice situation identifier \"idc\".","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/choice_probabilities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return choice probabilities of an RprobitB_fit. — choice_probabilities","text":"","code":"data <- simulate_choices(form = choice ~ covariate, N = 10, T = 10, J = 2) x <- mcmc(data) #> Iteration Info                   ETA (min) #>         0 started Gibbs sampling           #>      1000                                0 #>      2000                                0 #>      3000                                1 #>      4000                                1 #>      5000                                1 #>      6000                                1 #>      7000                                1 #>      8000                                1 #>      9000                                1 #>     10000 done, total time: 1 min choice_probabilities(x) #>     id idc            A            B #> 1    1   1 1.749489e-06 9.999983e-01 #> 2    1   2 1.404091e-06 9.999986e-01 #> 3    1   3 8.839585e-23 1.000000e+00 #> 4    1   4 1.000000e+00 6.203216e-14 #> 5    1   5 4.406475e-01 5.593525e-01 #> 6    1   6 1.193720e-03 9.988063e-01 #> 7    1   7 9.970109e-01 2.989060e-03 #> 8    1   8 4.571172e-01 5.428828e-01 #> 9    1   9 2.876657e-02 9.712334e-01 #> 10   1  10 2.474792e-02 9.752521e-01 #> 11   2   1 3.190045e-01 6.809955e-01 #> 12   2   2 1.152917e-02 9.884708e-01 #> 13   2   3 5.620975e-04 9.994379e-01 #> 14   2   4 3.473666e-11 1.000000e+00 #> 15   2   5 5.121654e-20 1.000000e+00 #> 16   2   6 4.558190e-12 1.000000e+00 #> 17   2   7 1.000000e+00 8.327260e-10 #> 18   2   8 5.189839e-20 1.000000e+00 #> 19   2   9 1.722451e-20 1.000000e+00 #> 20   2  10 4.329373e-21 1.000000e+00 #> 21   3   1 6.854083e-33 1.000000e+00 #> 22   3   2 1.033317e-01 8.966683e-01 #> 23   3   3 1.807953e-02 9.819205e-01 #> 24   3   4 1.787580e-18 1.000000e+00 #> 25   3   5 7.362588e-05 9.999264e-01 #> 26   3   6 1.195220e-05 9.999880e-01 #> 27   3   7 1.849223e-06 9.999982e-01 #> 28   3   8 6.479627e-01 3.520373e-01 #> 29   3   9 9.222814e-01 7.771857e-02 #> 30   3  10 7.128937e-20 1.000000e+00 #> 31   4   1 9.779991e-01 2.200086e-02 #> 32   4   2 3.627990e-07 9.999996e-01 #> 33   4   3 6.211018e-02 9.378898e-01 #> 34   4   4 2.646280e-09 1.000000e+00 #> 35   4   5 1.707248e-05 9.999829e-01 #> 36   4   6 1.394385e-01 8.605615e-01 #> 37   4   7 1.773270e-01 8.226730e-01 #> 38   4   8 2.699510e-02 9.730049e-01 #> 39   4   9 7.555348e-07 9.999992e-01 #> 40   4  10 7.694159e-11 1.000000e+00 #> 41   5   1 8.881161e-01 1.118839e-01 #> 42   5   2 2.073810e-06 9.999979e-01 #> 43   5   3 3.847165e-07 9.999996e-01 #> 44   5   4 2.498493e-01 7.501507e-01 #> 45   5   5 6.118240e-01 3.881760e-01 #> 46   5   6 1.448987e-02 9.855101e-01 #> 47   5   7 3.753673e-12 1.000000e+00 #> 48   5   8 3.252360e-11 1.000000e+00 #> 49   5   9 4.101101e-13 1.000000e+00 #> 50   5  10 2.827116e-04 9.997173e-01 #> 51   6   1 4.988307e-05 9.999501e-01 #> 52   6   2 9.885372e-01 1.146285e-02 #> 53   6   3 2.840010e-02 9.715999e-01 #> 54   6   4 3.322409e-01 6.677591e-01 #> 55   6   5 2.052127e-08 1.000000e+00 #> 56   6   6 1.133389e-09 1.000000e+00 #> 57   6   7 9.148056e-04 9.990852e-01 #> 58   6   8 5.557709e-05 9.999444e-01 #> 59   6   9 2.031855e-05 9.999797e-01 #> 60   6  10 9.999993e-01 7.188010e-07 #> 61   7   1 2.409896e-07 9.999998e-01 #> 62   7   2 6.843070e-01 3.156930e-01 #> 63   7   3 1.034358e-06 9.999990e-01 #> 64   7   4 3.873772e-25 1.000000e+00 #> 65   7   5 3.453864e-02 9.654614e-01 #> 66   7   6 1.000000e+00 8.472509e-09 #> 67   7   7 6.636896e-04 9.993363e-01 #> 68   7   8 1.521587e-03 9.984784e-01 #> 69   7   9 8.102655e-18 1.000000e+00 #> 70   7  10 9.893525e-05 9.999011e-01 #> 71   8   1 3.252891e-01 6.747109e-01 #> 72   8   2 3.024368e-12 1.000000e+00 #> 73   8   3 1.828769e-13 1.000000e+00 #> 74   8   4 3.698545e-01 6.301455e-01 #> 75   8   5 2.277838e-02 9.772216e-01 #> 76   8   6 6.350768e-02 9.364923e-01 #> 77   8   7 2.218474e-05 9.999778e-01 #> 78   8   8 7.885375e-01 2.114625e-01 #> 79   8   9 1.981577e-02 9.801842e-01 #> 80   8  10 4.558796e-06 9.999954e-01 #> 81   9   1 2.400956e-15 1.000000e+00 #> 82   9   2 5.175533e-11 1.000000e+00 #> 83   9   3 9.999966e-01 3.362032e-06 #> 84   9   4 5.697498e-01 4.302502e-01 #> 85   9   5 2.618069e-02 9.738193e-01 #> 86   9   6 1.000000e+00 7.734345e-14 #> 87   9   7 2.035711e-30 1.000000e+00 #> 88   9   8 7.954132e-09 1.000000e+00 #> 89   9   9 1.000000e+00 1.528644e-09 #> 90   9  10 2.805249e-02 9.719475e-01 #> 91  10   1 8.548963e-10 1.000000e+00 #> 92  10   2 9.575492e-01 4.245081e-02 #> 93  10   3 1.000000e+00 6.485777e-09 #> 94  10   4 7.049267e-10 1.000000e+00 #> 95  10   5 9.986472e-23 1.000000e+00 #> 96  10   6 7.942101e-02 9.205790e-01 #> 97  10   7 1.695593e-15 1.000000e+00 #> 98  10   8 5.110412e-01 4.889588e-01 #> 99  10   9 2.524822e-07 9.999997e-01 #> 100 10  10 8.029741e-02 9.197026e-01"},{"path":"https://loelschlaeger.de/RprobitB/reference/choice_probs.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute choice probabilities of an RprobitB_model. — choice_probs","title":"Compute choice probabilities of an RprobitB_model. — choice_probs","text":"function computes choice probabilities RprobitB_model.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/choice_probs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute choice probabilities of an RprobitB_model. — choice_probs","text":"","code":"choice_probs(x, data = NULL, at_true = FALSE)"},{"path":"https://loelschlaeger.de/RprobitB/reference/choice_probs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute choice probabilities of an RprobitB_model. — choice_probs","text":"x object class RprobitB_model. data Either NULL object class RprobitB_data. at_true TRUE, choice probabilities computed true parameters.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/choice_probs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute choice probabilities of an RprobitB_model. — choice_probs","text":"data frame, choice situations rows alternatives columns.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/classify.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify deciders. — classify","title":"Classify deciders. — classify","text":"function classifies deciders based estimated latent classes.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/classify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify deciders. — classify","text":"","code":"classify(x)"},{"path":"https://loelschlaeger.de/RprobitB/reference/classify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify deciders. — classify","text":"x object class RprobitB_model.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/classify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify deciders. — classify","text":"data frame deciders id latent class number.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare fitted models. — compare","title":"Compare fitted models. — compare","text":"function computes model comparison criteria.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare fitted models. — compare","text":"","code":"compare(...)"},{"path":"https://loelschlaeger.de/RprobitB/reference/compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare fitted models. — compare","text":"... One objects class RprobitB_model.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/compare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare fitted models. — compare","text":"matrix model's number parameters, log-likelihood, AIC, BIC value.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/compute_choice_probabilities.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute probit choice probabilities for a single choice situation. — compute_choice_probabilities","title":"Compute probit choice probabilities for a single choice situation. — compute_choice_probabilities","text":"function computes probit choice probabilities single choice situation J alternatives.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/compute_choice_probabilities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute probit choice probabilities for a single choice situation. — compute_choice_probabilities","text":"","code":"compute_choice_probabilities(X, alternatives, parameter)"},{"path":"https://loelschlaeger.de/RprobitB/reference/compute_choice_probabilities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute probit choice probabilities for a single choice situation. — compute_choice_probabilities","text":"X matrix covariates J rows P_f + P_r columns, first P_f columns connected fixed coefficients last P_r columns connected random coefficients. alternatives vector unique integers 1 J, indicating alternatives choice probabilities computed. parameter object class RprobitB_parameter.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/compute_choice_probabilities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute probit choice probabilities for a single choice situation. — compute_choice_probabilities","text":"probability vector length length(alternatives).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/compute_log_likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute log-likelihood of an RprobitB_model. — compute_log_likelihood","title":"Compute log-likelihood of an RprobitB_model. — compute_log_likelihood","text":"function computes log-likelihood RprobitB_model.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/compute_log_likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute log-likelihood of an RprobitB_model. — compute_log_likelihood","text":"","code":"compute_log_likelihood(x, at_true = FALSE)"},{"path":"https://loelschlaeger.de/RprobitB/reference/compute_log_likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute log-likelihood of an RprobitB_model. — compute_log_likelihood","text":"x object class RprobitB_model. at_true TRUE, choice probabilities computed true parameters.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/compute_log_likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute log-likelihood of an RprobitB_model. — compute_log_likelihood","text":"log-likelihood value.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/compute_point_estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute point estimates of an RprobitB_model. — compute_point_estimates","title":"Compute point estimates of an RprobitB_model. — compute_point_estimates","text":"function computes point estimates RprobitB_model. Per default, mean Gibbs samples used point estimate. However, statistic computes single numeric value vector Gibbs samples can specified FUN.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/compute_point_estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute point estimates of an RprobitB_model. — compute_point_estimates","text":"","code":"compute_point_estimates(x, FUN = mean)"},{"path":"https://loelschlaeger.de/RprobitB/reference/compute_point_estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute point estimates of an RprobitB_model. — compute_point_estimates","text":"x object class RprobitB_model. FUN function computes single numeric value vector numeric values.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/compute_point_estimates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute point estimates of an RprobitB_model. — compute_point_estimates","text":"object class RprobitB_parameter.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/compute_sufficient_statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute sufficient statistics. — compute_sufficient_statistics","title":"Compute sufficient statistics. — compute_sufficient_statistics","text":"function computes sufficient statistics data estimation.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/compute_sufficient_statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute sufficient statistics. — compute_sufficient_statistics","text":"","code":"compute_sufficient_statistics(data, normalization)"},{"path":"https://loelschlaeger.de/RprobitB/reference/compute_sufficient_statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute sufficient statistics. — compute_sufficient_statistics","text":"data object class RprobitB_data. normalization object class RprobitB_normalization.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/compute_sufficient_statistics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute sufficient statistics. — compute_sufficient_statistics","text":"list sufficient statistics.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_alpha.html","id":null,"dir":"Reference","previous_headings":"","what":"Create labels for alpha. — create_labels_alpha","title":"Create labels for alpha. — create_labels_alpha","text":"function creates labels model parameter alpha.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_alpha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create labels for alpha. — create_labels_alpha","text":"","code":"create_labels_alpha(P_f)"},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_alpha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create labels for alpha. — create_labels_alpha","text":"P_f number covariates connected fixed coefficient (can 0).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_alpha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create labels for alpha. — create_labels_alpha","text":"vector labels model parameter alpha.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_b.html","id":null,"dir":"Reference","previous_headings":"","what":"Create labels for b. — create_labels_b","title":"Create labels for b. — create_labels_b","text":"function creates labels model parameter b.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_b.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create labels for b. — create_labels_b","text":"","code":"create_labels_b(P_r, C)"},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_b.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create labels for b. — create_labels_b","text":"P_r number covariates connected random coefficient (can 0). C number latent classes.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_b.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create labels for b. — create_labels_b","text":"vector labels model parameter b.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_Omega.html","id":null,"dir":"Reference","previous_headings":"","what":"Create labels for Omega. — create_labels_Omega","title":"Create labels for Omega. — create_labels_Omega","text":"function creates labels model parameter Omega.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_Omega.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create labels for Omega. — create_labels_Omega","text":"","code":"create_labels_Omega(P_r, C, cov_sym)"},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_Omega.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create labels for Omega. — create_labels_Omega","text":"P_r number covariates connected random coefficient (can 0). C number latent classes. cov_sym TRUE considers symmetric covariance matrix elements.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_Omega.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create labels for Omega. — create_labels_Omega","text":"vector labels model parameter Omega.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_s.html","id":null,"dir":"Reference","previous_headings":"","what":"Create labels for s. — create_labels_s","title":"Create labels for s. — create_labels_s","text":"function creates labels model parameter s.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_s.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create labels for s. — create_labels_s","text":"","code":"create_labels_s(P_r, C)"},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_s.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create labels for s. — create_labels_s","text":"P_r number covariates connected random coefficient (can 0). C number latent classes.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_s.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create labels for s. — create_labels_s","text":"vector labels model parameter s.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_Sigma.html","id":null,"dir":"Reference","previous_headings":"","what":"Create labels for Sigma. — create_labels_Sigma","title":"Create labels for Sigma. — create_labels_Sigma","text":"function creates labels model parameter Sigma.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_Sigma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create labels for Sigma. — create_labels_Sigma","text":"","code":"create_labels_Sigma(J, cov_sym)"},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_Sigma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create labels for Sigma. — create_labels_Sigma","text":"J number (greater equal 2) choice alternatives. cov_sym TRUE considers symmetric covariance matrix elements.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_Sigma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create labels for Sigma. — create_labels_Sigma","text":"vector labels model parameter Sigma.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_parameter_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Create parameters labels. — create_parameter_labels","title":"Create parameters labels. — create_parameter_labels","text":"function creates labels model parameters.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_parameter_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create parameters labels. — create_parameter_labels","text":"","code":"create_parameter_labels(   P_f,   P_r,   J,   C,   cov_sym,   keep_par = c(\"s\", \"alpha\", \"b\", \"Omega\", \"Sigma\"),   drop_par = NULL )"},{"path":"https://loelschlaeger.de/RprobitB/reference/create_parameter_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create parameters labels. — create_parameter_labels","text":"P_f number covariates connected fixed coefficient (can 0). P_r number covariates connected random coefficient (can 0). J number (greater equal 2) choice alternatives. C number latent classes. cov_sym TRUE considers symmetric covariance matrix elements. keep_par vector parameter names kept. drop_par vector parameter names get dropped.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_parameter_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create parameters labels. — create_parameter_labels","text":"list labels model parameters.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/delta.html","id":null,"dir":"Reference","previous_headings":"","what":"Matrix difference operator — delta","title":"Matrix difference operator — delta","text":"function creates difference operator matrix delta subtracting matrix row matrix rows.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/delta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matrix difference operator — delta","text":"","code":"delta(J, i)"},{"path":"https://loelschlaeger.de/RprobitB/reference/delta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matrix difference operator — delta","text":"J number matrix rows. row number respect differences computed.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/delta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matrix difference operator — delta","text":"matrix J-1 rows.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/delta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Matrix difference operator — delta","text":"Given matrix x J rows, delta(,J) %*% x computes differences respect row .","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/delta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Matrix difference operator — delta","text":"","code":"J <- 2 x <- matrix(1, nrow = J, ncol = 2) RprobitB:::delta(J, 1) %*% x #>      [,1] [,2] #> [1,]    0    0"},{"path":"https://loelschlaeger.de/RprobitB/reference/dmvnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Density of multivariate normal distribution — dmvnorm","title":"Density of multivariate normal distribution — dmvnorm","text":"function computes density multivariate normal distribution.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/dmvnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density of multivariate normal distribution — dmvnorm","text":"","code":"dmvnorm(x, mean, Sigma, log = FALSE)"},{"path":"https://loelschlaeger.de/RprobitB/reference/dmvnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density of multivariate normal distribution — dmvnorm","text":"x quantile vector length n. mean mean vector length n. Sigma covariance matrix dimension n x n. log boolean, TRUE logarithm density value returned.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/dmvnorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density of multivariate normal distribution — dmvnorm","text":"density value.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/dmvnorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density of multivariate normal distribution — dmvnorm","text":"","code":"x = c(0,0) mean = c(0,0) Sigma = diag(2) dmvnorm(x = x, mean = mean, Sigma = Sigma) #> [1] 0.1591549 dmvnorm(x = x, mean = mean, Sigma = Sigma, log = TRUE) #> [1] -1.837877"},{"path":"https://loelschlaeger.de/RprobitB/reference/euc_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Euclidean distance — euc_dist","title":"Euclidean distance — euc_dist","text":"function computes euclidean distance two vectors.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/euc_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Euclidean distance — euc_dist","text":"","code":"euc_dist(a, b)"},{"path":"https://loelschlaeger.de/RprobitB/reference/euc_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Euclidean distance — euc_dist","text":"numeric vector. b Another numeric vector length .","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/euc_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Euclidean distance — euc_dist","text":"euclidean distance.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/filter_gibbs_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Gibbs samples. — filter_gibbs_samples","title":"Filter Gibbs samples. — filter_gibbs_samples","text":"helper function filters Gibbs samples.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/filter_gibbs_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Gibbs samples. — filter_gibbs_samples","text":"","code":"filter_gibbs_samples(   x,   P_f,   P_r,   J,   C,   cov_sym,   keep_par = c(\"s\", \"alpha\", \"b\", \"Omega\", \"Sigma\"),   drop_par = NULL )"},{"path":"https://loelschlaeger.de/RprobitB/reference/filter_gibbs_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Gibbs samples. — filter_gibbs_samples","text":"x object class RprobitB_gibbs_samples. P_f number covariates connected fixed coefficient (can 0). P_r number covariates connected random coefficient (can 0). J number (greater equal 2) choice alternatives. C number latent classes. cov_sym TRUE considers symmetric covariance matrix elements. keep_par vector parameter names kept. drop_par vector parameter names get dropped.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/filter_gibbs_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Gibbs samples. — filter_gibbs_samples","text":"object class RprobitB_gibbs_samples filtered labels parameter_labels(P_f, P_r, J, C, cov_sym, keep_par, drop_par).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/gibbs_sampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Gibbs sampler — gibbs_sampling","title":"Gibbs sampler — gibbs_sampling","text":"function draws Gibbs samples posterior distribution multinomial probit model parameters.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/gibbs_sampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gibbs sampler — gibbs_sampling","text":"","code":"gibbs_sampling(   sufficient_statistics,   prior,   latent_classes,   init,   R,   B,   print_progress )"},{"path":"https://loelschlaeger.de/RprobitB/reference/gibbs_sampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gibbs sampler — gibbs_sampling","text":"sufficient_statistics output sufficient_statistics. prior named list parameters prior distributions. See documentation check_prior details parameters can specified. latent_classes Either NULL list parameters specifying number latent classes: C: number (greater equal 1) latent classes, set 1 per default ignored P_r = 0. update = TRUE, C equals initial number classes. update: boolean, determining whether update C. Ignored P_r = 0. update = FALSE, following elements ignored. Cmax: maximum number latent classes. buffer: updating buffer (number iterations wait next update). epsmin: threshold weight removing latent classes (0 1). epsmax: threshold weight splitting latent classes (0 1). distmin: threshold difference means joining latent classes (non-negative). init output set_initial_gibbs_values. R number iterations Gibbs sampler. B length burn-period, .e. non-negative number samples discarded. print_progress boolean, determining whether print Gibbs sampler progress estimated remaining computation time.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/gibbs_sampling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gibbs sampler — gibbs_sampling","text":"list Gibbs samples Sigma, alpha (P_f>0) s, b, Omega vector classifications (P_r>0).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/is_covariance_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Check covariance matrix properties — is_covariance_matrix","title":"Check covariance matrix properties — is_covariance_matrix","text":"function checks input proper covariance matrix, .e. symmetric, numeric matrix non-negative eigenvalues.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/is_covariance_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check covariance matrix properties — is_covariance_matrix","text":"","code":"is_covariance_matrix(x)"},{"path":"https://loelschlaeger.de/RprobitB/reference/is_covariance_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check covariance matrix properties — is_covariance_matrix","text":"x matrix.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/is_covariance_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check covariance matrix properties — is_covariance_matrix","text":"boolean, TRUE x proper covariance matrix.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/is_covariance_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check covariance matrix properties — is_covariance_matrix","text":"","code":"x <- diag(2) RprobitB:::is_covariance_matrix(x) #> [1] TRUE"},{"path":"https://loelschlaeger.de/RprobitB/reference/log_likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute log-likelihood of an RprobitB_fit. — log_likelihood","title":"Compute log-likelihood of an RprobitB_fit. — log_likelihood","text":"function computes log-likelihood RprobitB_fit.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/log_likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute log-likelihood of an RprobitB_fit. — log_likelihood","text":"","code":"log_likelihood(x, par_set = mean)"},{"path":"https://loelschlaeger.de/RprobitB/reference/log_likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute log-likelihood of an RprobitB_fit. — log_likelihood","text":"x object class RprobitB_fit. par_set Specifying parameter set calculation either function computes posterior point estimate (default mean()), \"true\" select true parameter set, object class RprobitB_parameter.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/log_likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute log-likelihood of an RprobitB_fit. — log_likelihood","text":"log-likelihood value.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/log_likelihood.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute log-likelihood of an RprobitB_fit. — log_likelihood","text":"","code":"data <- simulate_choices(form = choice ~ covariate, N = 10, T = 10, J = 2) x <- mcmc(data) #> Iteration Info                   ETA (min) #>         0 started Gibbs sampling           #>      1000                                0 #>      2000                                0 #>      3000                                0 #>      4000                                0 #>      5000                                1 #>      6000                                1 #>      7000                                1 #>      8000                                1 #>      9000                                1 #>     10000 done, total time: 1 min log_likelihood(x) #> [1] -0.01320891"},{"path":"https://loelschlaeger.de/RprobitB/reference/mcmc.html","id":null,"dir":"Reference","previous_headings":"","what":"Markov chain Monte Carlo simulation for probit model fitting. — mcmc","title":"Markov chain Monte Carlo simulation for probit model fitting. — mcmc","text":"function performs Markov chain Monte Carlo simulation fitting (latent class) (mixed) (multinomial) probit model discrete choice data.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/mcmc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Markov chain Monte Carlo simulation for probit model fitting. — mcmc","text":"","code":"mcmc(   data,   scale = list(parameter = \"s\", index = 1, value = 1),   R = 10000,   B = R/2,   Q = 1,   print_progress = TRUE,   prior = NULL,   latent_classes = NULL,   seed = NULL )"},{"path":"https://loelschlaeger.de/RprobitB/reference/mcmc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Markov chain Monte Carlo simulation for probit model fitting. — mcmc","text":"data object class RprobitB_data. scale named list three elements, determining parameter normalization respect utility scale: parameter: Either \"\" (linear coefficient \"alpha\") \"s\" (variance error-term covariance matrix \"Sigma\"). index: index parameter gets fixed. value: value fixed parameter. R number iterations Gibbs sampler. B length burn-period, .e. non-negative number samples discarded. Q thinning factor Gibbs samples, .e. every Qth sample kept. print_progress boolean, determining whether print Gibbs sampler progress estimated remaining computation time. prior named list parameters prior distributions. See documentation check_prior details parameters can specified. latent_classes Either NULL list parameters specifying number latent classes: C: number (greater equal 1) latent classes, set 1 per default ignored P_r = 0. update = TRUE, C equals initial number classes. update: boolean, determining whether update C. Ignored P_r = 0. update = FALSE, following elements ignored. Cmax: maximum number latent classes. buffer: updating buffer (number iterations wait next update). epsmin: threshold weight removing latent classes (0 1). epsmax: threshold weight splitting latent classes (0 1). distmin: threshold difference means joining latent classes (non-negative). seed Set seed Gibbs sampling.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/mcmc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Markov chain Monte Carlo simulation for probit model fitting. — mcmc","text":"object class RprobitB_fit.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/mcmc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Markov chain Monte Carlo simulation for probit model fitting. — mcmc","text":"See vignette \"Model fitting\" details: vignette(\"model_fitting\", package = \"RprobitB\").","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/mcmc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Markov chain Monte Carlo simulation for probit model fitting. — mcmc","text":"","code":"if (FALSE) { ### probit model p <- simulate_choices(form = choice ~ var | 0, N = 100, T = 10, J = 2, seed = 1) m1 <- mcmc(data = p, seed = 1)  ### multinomial probit model mnp <- simulate_choices(form = choice ~ var | 0, N = 100, T = 10, J = 3, seed = 1) m2 <- mcmc(data = mnp, seed = 1)  ### mixed multinomial probit model mmnp <- simulate_choices(   form = choice ~ 0 | var, N = 100, T = 10, J = 3, re = \"var\",   seed = 1 ) m3 <- mcmc(data = mmnp, seed = 1)  ### mixed multinomial probit model with 2 latent classes lcmmnp <- simulate_choices(   form = choice ~ 0 | var, N = 100, T = 10, J = 3,   re = \"var\", seed = 1, C = 2 ) m4 <- mcmc(data = lcmmnp, latent_classes = list(\"C\" = 2), seed = 1)  ### update of latent classes m5 <- simulate_choices(data = lcmmnp, latent_classes = list(\"update\" = TRUE), seed = 1) }"},{"path":"https://loelschlaeger.de/RprobitB/reference/model_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare fitted models. — model_selection","title":"Compare fitted models. — model_selection","text":"function guides process model selection providing criteria model comparison.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/model_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare fitted models. — model_selection","text":"","code":"model_selection(...)"},{"path":"https://loelschlaeger.de/RprobitB/reference/model_selection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare fitted models. — model_selection","text":"... One objects class RprobitB_fit.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/model_selection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare fitted models. — model_selection","text":"matrix model's number parameters, log-likelihood, AIC, BIC value.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/opening_choice.html","id":null,"dir":"Reference","previous_headings":"","what":"Choice of a chess opening — opening_choice","title":"Choice of a chess opening — opening_choice","text":"dataset includes first move choices White player chess games.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/opening_choice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Choice of a chess opening — opening_choice","text":"","code":"data(opening_choice)"},{"path":"https://loelschlaeger.de/RprobitB/reference/opening_choice.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Choice of a chess opening — opening_choice","text":"data frame containing first move choices White player 549 chess games. consists following columns: fideid, unique identifier player provided FIDE, move, chosen first move, country, player's federation, sex, player's gender, age, player's age, rating, player's rating, opponent_country, opponent's federation, opponent_sex, opponent's gender, opponent_country, opponent's federation, age_difference, player's age minus opponent's age, info, short description pairing.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/opening_choice.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Choice of a chess opening — opening_choice","text":"opening moves scraped Week Chess Archive https://theweekinchess.com/twic issues 1416, 1417, 1418, 1419, 1420. player's metadata (country, sex, age, rating) added matching pairings names official FIDE rating list http://ratings.fide.com 2022-01-25. Ambiguous matches dropped.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/overview_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Overview of effects. — overview_effects","title":"Overview of effects. — overview_effects","text":"function gives overview linear coefficients whether connected random effects.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/overview_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Overview of effects. — overview_effects","text":"","code":"overview_effects(form, re = NULL, alternatives)"},{"path":"https://loelschlaeger.de/RprobitB/reference/overview_effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Overview of effects. — overview_effects","text":"form formula object used specify probit model. structure choice ~ | B | C, names alternative choice situation specific covariates generic coefficient, B names choice situation specific covariates alternative specific coefficients, C names alternative choice situation specific covariates alternative specific coefficients. Separate multiple covariates one type + sign. default, alternative specific constants (ASCs) added model (except last alternative). can removed adding +0 second spot. See vignette vignette(\"data_management\", package = \"RprobitB\") details. re character (vector) covariates form random effects. re = NULL (default), random effects. random effects alternative specific constants, include \"ASC\" re. alternatives character vector names choice alternatives. specified, choice set defined observed choices.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/overview_effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Overview of effects. — overview_effects","text":"data frame coefficient names booleans indicating whether connected random effects.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/overview_effects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Overview of effects. — overview_effects","text":"","code":"form <- choice ~ price + time + comfort + change | 1 re <- c(\"price\", \"time\") alternatives <- c(\"A\", \"B\") overview_effects(form = form, re = re, alternatives = alternatives) #>      name    re #> 1 comfort FALSE #> 2  change FALSE #> 3   ASC_A FALSE #> 4   price  TRUE #> 5    time  TRUE"},{"path":"https://loelschlaeger.de/RprobitB/reference/parameter_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Create parameters labels. — parameter_labels","title":"Create parameters labels. — parameter_labels","text":"function creates labels model parameters.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/parameter_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create parameters labels. — parameter_labels","text":"","code":"parameter_labels(   P_f,   P_r,   J,   C,   cov_sym,   keep_par = c(\"s\", \"alpha\", \"b\", \"Omega\", \"Sigma\"),   drop_par = NULL )"},{"path":"https://loelschlaeger.de/RprobitB/reference/parameter_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create parameters labels. — parameter_labels","text":"P_f number covariates connected fixed coefficient (can 0). P_r number covariates connected random coefficient (can 0). J number (greater equal 2) choice alternatives. C number latent classes. cov_sym TRUE considers symmetric covariance matrix elements. keep_par vector parameter names kept. drop_par vector parameter names get dropped.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/parameter_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create parameters labels. — parameter_labels","text":"list labels model parameters.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot.RprobitB_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for RprobitB_data. — plot.RprobitB_data","title":"Plot method for RprobitB_data. — plot.RprobitB_data","text":"function plot method object class RprobitB_data.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot.RprobitB_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for RprobitB_data. — plot.RprobitB_data","text":"","code":"# S3 method for RprobitB_data plot(x, alpha = 0.8, bins = 30, position = \"dodge\", ...)"},{"path":"https://loelschlaeger.de/RprobitB/reference/plot.RprobitB_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for RprobitB_data. — plot.RprobitB_data","text":"x object class RprobitB_data. alpha Passed geom_histogram. bins Passed geom_histogram. position Passed geom_histogram. ... Ignored.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot.RprobitB_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for RprobitB_data. — plot.RprobitB_data","text":"return value. Draws plot current device.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot.RprobitB_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for RprobitB_fit. — plot.RprobitB_fit","title":"Plot method for RprobitB_fit. — plot.RprobitB_fit","text":"function plot method object class RprobitB_fit.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot.RprobitB_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for RprobitB_fit. — plot.RprobitB_fit","text":"","code":"# S3 method for RprobitB_fit plot(x, type = \"effects\", ignore = NULL, ...)"},{"path":"https://loelschlaeger.de/RprobitB/reference/plot.RprobitB_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for RprobitB_fit. — plot.RprobitB_fit","text":"x object class RprobitB_fit. type type plot, can one : \"effects\" (default) visualizing linear effects, \"mixture\" visualizing mixture distribution, \"acf\" autocorrelation plots Gibbs samples, \"trace\" trace plots Gibbs samples. ignore character (vector) covariate parameter names get visualized. ... Ignored.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot.RprobitB_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for RprobitB_fit. — plot.RprobitB_fit","text":"return value. Draws plot current device.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot.RprobitB_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for RprobitB_model. — plot.RprobitB_model","title":"Plot method for RprobitB_model. — plot.RprobitB_model","text":"function plot method object class RprobitB_model.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot.RprobitB_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for RprobitB_model. — plot.RprobitB_model","text":"","code":"# S3 method for RprobitB_model plot(x, type = \"effects\", ignore = NULL, ...)"},{"path":"https://loelschlaeger.de/RprobitB/reference/plot.RprobitB_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for RprobitB_model. — plot.RprobitB_model","text":"x object class RprobitB_model. type type plot, can one : \"effects\" (default) visualizing linear effects, \"mixture\" visualizing mixture distribution, \"acf\" autocorrelation plots Gibbs samples, \"trace\" trace plots Gibbs samples. ignore character (vector) covariate parameter names get visualized. ... Ignored.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot.RprobitB_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for RprobitB_model. — plot.RprobitB_model","text":"return value. Draws plot current device.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot_acf.html","id":null,"dir":"Reference","previous_headings":"","what":"Autocorrelation plot of Gibbs samples. — plot_acf","title":"Autocorrelation plot of Gibbs samples. — plot_acf","text":"function plots autocorrelation Gibbs samples, including total sample size SS, effective sample size ESS factor SS/ESS.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot_acf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Autocorrelation plot of Gibbs samples. — plot_acf","text":"","code":"plot_acf(gibbs_samples, par_labels)"},{"path":"https://loelschlaeger.de/RprobitB/reference/plot_acf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Autocorrelation plot of Gibbs samples. — plot_acf","text":"gibbs_samples matrix Gibbs samples. par_labels character vector length equal number columns gibbs_samples, containing labels Gibbs samples.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot_acf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Autocorrelation plot of Gibbs samples. — plot_acf","text":"return value. Draws plot current device.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualizing the linear effects. — plot_effects","title":"Visualizing the linear effects. — plot_effects","text":"function visualizes linear effects covariates choices together uncertainty interval plus / minus one standard deviation.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualizing the linear effects. — plot_effects","text":"","code":"plot_effects(gibbs_samples, coeff_names)"},{"path":"https://loelschlaeger.de/RprobitB/reference/plot_effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualizing the linear effects. — plot_effects","text":"gibbs_samples object class RprobitB_gibbs_samples. coeff_names character vector coefficient names.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot_effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualizing the linear effects. — plot_effects","text":"return value. Draws plot current device.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot_mixture_contour.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting mixing distribution contours. — plot_mixture_contour","title":"Plotting mixing distribution contours. — plot_mixture_contour","text":"function plots contours estimated mixing distributions adds true beta values comparison available.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot_mixture_contour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting mixing distribution contours. — plot_mixture_contour","text":"","code":"plot_mixture_contour(   mean_est,   weight_est,   cov_est,   beta_true = NULL,   cov_names = NULL )"},{"path":"https://loelschlaeger.de/RprobitB/reference/plot_mixture_contour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting mixing distribution contours. — plot_mixture_contour","text":"mean_est list length C, element vector two estimated class means. weight_est numeric vector length C estimated class weights. cov_est list length C, element estimated class covariance matrix. beta_true Either NULL matrix C rows true beta values. cov_names Either NULL vector two covariate names.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot_mixture_contour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting mixing distribution contours. — plot_mixture_contour","text":"return value. Draws plot current device.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot_mixture_marginal.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting marginal mixing distributions. — plot_mixture_marginal","title":"Plotting marginal mixing distributions. — plot_mixture_marginal","text":"function plots estimated mixing distributions respect one covariate adds true marginal mixing distribution comparison available.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot_mixture_marginal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting marginal mixing distributions. — plot_mixture_marginal","text":"","code":"plot_mixture_marginal(   mean_est,   mean_true = NULL,   weight_est,   weight_true = NULL,   sd_est,   sd_true = NULL,   cov_name = NULL )"},{"path":"https://loelschlaeger.de/RprobitB/reference/plot_mixture_marginal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting marginal mixing distributions. — plot_mixture_marginal","text":"mean_est list length C, element estimated class mean. mean_true Either NULL list length C, element true class mean. weight_est numeric vector length C estimated class weights. weight_true Either NULL numeric vector length C true class weights. sd_est list length C, element estimated class standard deviation. sd_true Either NULL list length C, element true class standard deviation. cov_name Either NULL name corresponding covariate.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot_mixture_marginal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting marginal mixing distributions. — plot_mixture_marginal","text":"return value. Draws plot current device.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot_trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualizing the trace of Gibbs samples. — plot_trace","title":"Visualizing the trace of Gibbs samples. — plot_trace","text":"function plots traces Gibbs samples.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot_trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualizing the trace of Gibbs samples. — plot_trace","text":"","code":"plot_trace(gibbs_samples, par_labels)"},{"path":"https://loelschlaeger.de/RprobitB/reference/plot_trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualizing the trace of Gibbs samples. — plot_trace","text":"gibbs_samples matrix Gibbs samples. par_labels character vector length equal number columns gibbs_samples, containing labels Gibbs samples.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot_trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualizing the trace of Gibbs samples. — plot_trace","text":"return value. Draws plot current device.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/point_estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute point estimates of an RprobitB_fit. — point_estimates","title":"Compute point estimates of an RprobitB_fit. — point_estimates","text":"function computes point estimates RprobitB_fit. Per default, mean Gibbs samples used point estimate. However, statistic computes single numeric value vector Gibbs samples can specified FUN.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/point_estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute point estimates of an RprobitB_fit. — point_estimates","text":"","code":"point_estimates(x, FUN = mean)"},{"path":"https://loelschlaeger.de/RprobitB/reference/point_estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute point estimates of an RprobitB_fit. — point_estimates","text":"x object class RprobitB_fit. FUN function computes single numeric value vector numeric values.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/point_estimates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute point estimates of an RprobitB_fit. — point_estimates","text":"object class RprobitB_parameter.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/point_estimates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute point estimates of an RprobitB_fit. — point_estimates","text":"","code":"data <- simulate_choices(form = choice ~ covariate, N = 10, T = 10, J = 2) model <- mcmc(data) #> Iteration Info                   ETA (min) #>         0 started Gibbs sampling           #>      1000                                0 #>      2000                                0 #>      3000                                0 #>      4000                                0 #>      5000                                0 #>      6000                                0 #>      7000                                0 #>      8000                                1 #>      9000                                1 #>     10000 done, total time: 1 min point_estimates(model) #> RprobitB model parameter: #>  #> alpha: 1.135814 -0.4423129  #>  #> Sigma: 1 x 1 matrix of doubles:  #>  #>      [,1] #> [1,]    1 #>  #> Sigma_full: 2 x 2 matrix of doubles:  #>  #>      [,1] [,2] #> [1,]    2    1 #> [2,]    1    1 #>  point_estimates(model, FUN = median) #> RprobitB model parameter: #>  #> alpha: 1.127374 -0.4412585  #>  #> Sigma: 1 x 1 matrix of doubles:  #>  #>      [,1] #> [1,]    1 #>  #> Sigma_full: 2 x 2 matrix of doubles:  #>  #>      [,1] [,2] #> [1,]    2    1 #> [2,]    1    1 #>"},{"path":"https://loelschlaeger.de/RprobitB/reference/predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict choices. — predict","title":"Predict choices. — predict","text":"function predicts choices decision makers.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict choices. — predict","text":"","code":"predict(x, data = NULL, overview = TRUE)"},{"path":"https://loelschlaeger.de/RprobitB/reference/predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict choices. — predict","text":"x object class RprobitB_model. data Either NULL object class RprobitB_data. overview TRUE, aggregate prediction table.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict choices. — predict","text":"Either table overview = TRUE data frame otherwise.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/predict.RprobitB_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict choices — predict.RprobitB_fit","title":"Predict choices — predict.RprobitB_fit","text":"function predicts choices decision makers.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/predict.RprobitB_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict choices — predict.RprobitB_fit","text":"","code":"# S3 method for RprobitB_fit predict(object, data = NULL, overview = TRUE, ...)"},{"path":"https://loelschlaeger.de/RprobitB/reference/predict.RprobitB_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict choices — predict.RprobitB_fit","text":"object object class RprobitB_fit. data Either NULL object class RprobitB_data. overview TRUE, aggregate prediction table. ... Ignored.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/predict.RprobitB_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict choices — predict.RprobitB_fit","text":"Either table overview = TRUE data frame otherwise.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/predict.RprobitB_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict choices — predict.RprobitB_fit","text":"","code":"data <- simulate_choices(form = choice ~ covariate, N = 10, T = 10, J = 2) object <- mcmc(data) #> Iteration Info                   ETA (min) #>         0 started Gibbs sampling           #>      1000                                0 #>      2000                                0 #>      3000                                0 #>      4000                                0 #>      5000                                0 #>      6000                                0 #>      7000                                1 #>      8000                                1 #>      9000                                1 #>     10000 done, total time: 1 min predict(object, overview = TRUE) #>     predicted #> true  A  B #>    A 63  4 #>    B  7 26 predict(object, overview = FALSE) #>     id idc            A            B true predicted correct #> 1    1   1 0.0585317871 9.414682e-01    B         B    TRUE #> 2    1   2 0.0033067733 9.966932e-01    B         B    TRUE #> 3    1   3 0.9778331799 2.216682e-02    A         A    TRUE #> 4    1   4 0.8665994569 1.334005e-01    A         A    TRUE #> 5    1   5 0.7259445366 2.740555e-01    A         A    TRUE #> 6    1   6 0.9825518156 1.744818e-02    A         A    TRUE #> 7    1   7 0.4559187513 5.440812e-01    A         B   FALSE #> 8    1   8 0.9242486672 7.575133e-02    A         A    TRUE #> 9    1   9 0.9476812576 5.231874e-02    A         A    TRUE #> 10   1  10 0.9998973822 1.026178e-04    A         A    TRUE #> 11   2   1 0.9267648672 7.323513e-02    A         A    TRUE #> 12   2   2 0.9810983051 1.890169e-02    A         A    TRUE #> 13   2   3 0.0037597669 9.962402e-01    B         B    TRUE #> 14   2   4 0.1120182458 8.879818e-01    A         B   FALSE #> 15   2   5 0.0732713331 9.267287e-01    B         B    TRUE #> 16   2   6 0.1471611065 8.528389e-01    B         B    TRUE #> 17   2   7 0.0062410203 9.937590e-01    B         B    TRUE #> 18   2   8 0.8895802612 1.104197e-01    A         A    TRUE #> 19   2   9 0.9996775707 3.224293e-04    A         A    TRUE #> 20   2  10 0.9966615374 3.338463e-03    A         A    TRUE #> 21   3   1 0.5140769649 4.859230e-01    B         A   FALSE #> 22   3   2 0.8164201072 1.835799e-01    B         A   FALSE #> 23   3   3 0.8473491623 1.526508e-01    A         A    TRUE #> 24   3   4 0.7406849638 2.593150e-01    A         A    TRUE #> 25   3   5 0.7425352093 2.574648e-01    B         A   FALSE #> 26   3   6 0.9992968954 7.031046e-04    A         A    TRUE #> 27   3   7 0.9562207835 4.377922e-02    A         A    TRUE #> 28   3   8 0.9854325992 1.456740e-02    A         A    TRUE #> 29   3   9 0.9999986288 1.371199e-06    A         A    TRUE #> 30   3  10 0.8712094554 1.287905e-01    A         A    TRUE #> 31   4   1 0.9999999991 8.581032e-10    A         A    TRUE #> 32   4   2 0.9998695902 1.304098e-04    A         A    TRUE #> 33   4   3 0.0615982863 9.384017e-01    B         B    TRUE #> 34   4   4 0.0013056332 9.986944e-01    B         B    TRUE #> 35   4   5 0.6606835989 3.393164e-01    B         A   FALSE #> 36   4   6 0.9999985773 1.422663e-06    A         A    TRUE #> 37   4   7 0.3208835992 6.791164e-01    B         B    TRUE #> 38   4   8 0.9871572888 1.284271e-02    A         A    TRUE #> 39   4   9 0.0523358447 9.476642e-01    B         B    TRUE #> 40   4  10 0.5637461279 4.362539e-01    B         A   FALSE #> 41   5   1 0.3064221823 6.935778e-01    B         B    TRUE #> 42   5   2 0.9986684209 1.331579e-03    A         A    TRUE #> 43   5   3 0.7135696940 2.864303e-01    A         A    TRUE #> 44   5   4 0.9681167827 3.188322e-02    B         A   FALSE #> 45   5   5 0.9999668154 3.318463e-05    A         A    TRUE #> 46   5   6 0.9455211676 5.447883e-02    A         A    TRUE #> 47   5   7 0.3671218739 6.328781e-01    B         B    TRUE #> 48   5   8 0.2136083699 7.863916e-01    B         B    TRUE #> 49   5   9 0.3763050138 6.236950e-01    A         B   FALSE #> 50   5  10 0.9702454603 2.975454e-02    A         A    TRUE #> 51   6   1 0.8382671865 1.617328e-01    A         A    TRUE #> 52   6   2 0.9265922436 7.340776e-02    A         A    TRUE #> 53   6   3 0.0019701798 9.980298e-01    B         B    TRUE #> 54   6   4 0.9983203938 1.679606e-03    A         A    TRUE #> 55   6   5 0.9967395287 3.260471e-03    A         A    TRUE #> 56   6   6 0.9837028368 1.629716e-02    A         A    TRUE #> 57   6   7 0.9999999977 2.274904e-09    A         A    TRUE #> 58   6   8 0.9999879427 1.205726e-05    A         A    TRUE #> 59   6   9 0.9944363543 5.563646e-03    A         A    TRUE #> 60   6  10 0.9878971969 1.210280e-02    A         A    TRUE #> 61   7   1 0.8542138519 1.457861e-01    A         A    TRUE #> 62   7   2 0.0922786643 9.077213e-01    B         B    TRUE #> 63   7   3 0.7300165586 2.699834e-01    A         A    TRUE #> 64   7   4 0.7467749366 2.532251e-01    A         A    TRUE #> 65   7   5 0.0799027055 9.200973e-01    B         B    TRUE #> 66   7   6 0.0093160301 9.906840e-01    B         B    TRUE #> 67   7   7 0.0674961655 9.325038e-01    B         B    TRUE #> 68   7   8 0.0004118983 9.995881e-01    B         B    TRUE #> 69   7   9 0.6796129576 3.203870e-01    A         A    TRUE #> 70   7  10 0.6976379127 3.023621e-01    A         A    TRUE #> 71   8   1 0.9779821725 2.201783e-02    A         A    TRUE #> 72   8   2 0.9974449556 2.555044e-03    A         A    TRUE #> 73   8   3 0.5140969110 4.859031e-01    A         A    TRUE #> 74   8   4 0.0674087083 9.325913e-01    A         B   FALSE #> 75   8   5 0.9751117413 2.488826e-02    A         A    TRUE #> 76   8   6 0.2117653838 7.882346e-01    B         B    TRUE #> 77   8   7 0.2233848155 7.766152e-01    B         B    TRUE #> 78   8   8 0.0582034996 9.417965e-01    B         B    TRUE #> 79   8   9 0.8525554252 1.474446e-01    A         A    TRUE #> 80   8  10 0.9514416255 4.855837e-02    A         A    TRUE #> 81   9   1 0.9759721962 2.402780e-02    A         A    TRUE #> 82   9   2 0.9998962862 1.037138e-04    A         A    TRUE #> 83   9   3 0.5232717982 4.767282e-01    B         A   FALSE #> 84   9   4 0.9999997382 2.617756e-07    A         A    TRUE #> 85   9   5 0.9998956582 1.043418e-04    A         A    TRUE #> 86   9   6 0.9027151083 9.728489e-02    A         A    TRUE #> 87   9   7 0.8824100121 1.175900e-01    A         A    TRUE #> 88   9   8 0.9999919476 8.052431e-06    A         A    TRUE #> 89   9   9 0.3489572064 6.510428e-01    B         B    TRUE #> 90   9  10 0.9999987742 1.225830e-06    A         A    TRUE #> 91  10   1 0.9928674798 7.132520e-03    A         A    TRUE #> 92  10   2 0.3229868217 6.770132e-01    B         B    TRUE #> 93  10   3 0.6917563196 3.082437e-01    A         A    TRUE #> 94  10   4 0.7437217991 2.562782e-01    A         A    TRUE #> 95  10   5 0.9601996820 3.980032e-02    A         A    TRUE #> 96  10   6 0.8688330721 1.311669e-01    A         A    TRUE #> 97  10   7 0.8453278687 1.546721e-01    A         A    TRUE #> 98  10   8 0.9959208602 4.079140e-03    A         A    TRUE #> 99  10   9 0.3230563484 6.769437e-01    B         B    TRUE #> 100 10  10 0.0010287814 9.989712e-01    B         B    TRUE"},{"path":"https://loelschlaeger.de/RprobitB/reference/predict_choices.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict choices. — predict_choices","title":"Predict choices. — predict_choices","text":"function predicts choices decision makers.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/predict_choices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict choices. — predict_choices","text":"","code":"predict_choices(x, data = NULL, overview = TRUE)"},{"path":"https://loelschlaeger.de/RprobitB/reference/predict_choices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict choices. — predict_choices","text":"x object class RprobitB_fit. data Either NULL object class RprobitB_data. overview TRUE, aggregate prediction table.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/predict_choices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict choices. — predict_choices","text":"Either table overview = TRUE data frame otherwise.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/predict_choices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict choices. — predict_choices","text":"","code":"data <- simulate_choices(form = choice ~ covariate, N = 10, T = 10, J = 2) x <- mcmc(data) #> Iteration Info                   ETA (min) #>         0 started Gibbs sampling           #>      1000                                0 #>      2000                                0 #>      3000                                0 #>      4000                                0 #>      5000                                0 #>      6000                                0 #>      7000                                1 #>      8000                                1 #>      9000                                1 #>     10000 done, total time: 1 min predict_choices(x, overview = TRUE) #>     predicted #> true  A  B #>    A 55  5 #>    B  8 32 predict_choices(x, overview = FALSE) #>     id idc            A            B true predicted correct #> 1    1   1 2.967798e-03 9.970322e-01    B         B    TRUE #> 2    1   2 9.701882e-01 2.981175e-02    A         A    TRUE #> 3    1   3 9.999999e-01 5.066375e-08    A         A    TRUE #> 4    1   4 3.901407e-05 9.999610e-01    B         B    TRUE #> 5    1   5 2.257592e-02 9.774241e-01    B         B    TRUE #> 6    1   6 2.956436e-02 9.704356e-01    B         B    TRUE #> 7    1   7 9.386842e-03 9.906132e-01    B         B    TRUE #> 8    1   8 9.999520e-01 4.803690e-05    A         A    TRUE #> 9    1   9 1.628047e-02 9.837195e-01    B         B    TRUE #> 10   1  10 8.231420e-01 1.768580e-01    A         A    TRUE #> 11   2   1 9.120568e-01 8.794317e-02    A         A    TRUE #> 12   2   2 1.565672e-01 8.434328e-01    B         B    TRUE #> 13   2   3 5.302479e-02 9.469752e-01    B         B    TRUE #> 14   2   4 9.928050e-01 7.194960e-03    A         A    TRUE #> 15   2   5 9.999986e-01 1.437353e-06    A         A    TRUE #> 16   2   6 7.738016e-01 2.261984e-01    A         A    TRUE #> 17   2   7 9.247772e-01 7.522283e-02    A         A    TRUE #> 18   2   8 6.294385e-01 3.705615e-01    B         A   FALSE #> 19   2   9 6.878954e-04 9.993121e-01    B         B    TRUE #> 20   2  10 8.205737e-01 1.794263e-01    B         A   FALSE #> 21   3   1 5.399901e-01 4.600099e-01    A         A    TRUE #> 22   3   2 6.640689e-01 3.359311e-01    A         A    TRUE #> 23   3   3 1.000000e+00 1.126482e-11    A         A    TRUE #> 24   3   4 1.000000e+00 6.290888e-12    A         A    TRUE #> 25   3   5 9.908528e-01 9.147181e-03    A         A    TRUE #> 26   3   6 9.980849e-01 1.915070e-03    A         A    TRUE #> 27   3   7 7.498634e-01 2.501366e-01    B         A   FALSE #> 28   3   8 8.339723e-03 9.916603e-01    B         B    TRUE #> 29   3   9 1.000000e+00 1.267566e-08    A         A    TRUE #> 30   3  10 1.704344e-01 8.295656e-01    B         B    TRUE #> 31   4   1 9.190949e-02 9.080905e-01    A         B   FALSE #> 32   4   2 6.451124e-01 3.548876e-01    A         A    TRUE #> 33   4   3 3.169842e-01 6.830158e-01    B         B    TRUE #> 34   4   4 2.650977e-01 7.349023e-01    A         B   FALSE #> 35   4   5 4.660921e-01 5.339079e-01    A         B   FALSE #> 36   4   6 9.962351e-01 3.764944e-03    A         A    TRUE #> 37   4   7 9.999052e-01 9.477371e-05    A         A    TRUE #> 38   4   8 8.841922e-01 1.158078e-01    A         A    TRUE #> 39   4   9 2.148921e-01 7.851079e-01    B         B    TRUE #> 40   4  10 3.295833e-01 6.704167e-01    A         B   FALSE #> 41   5   1 9.851890e-01 1.481100e-02    A         A    TRUE #> 42   5   2 1.000000e+00 4.733702e-09    A         A    TRUE #> 43   5   3 9.932611e-01 6.738890e-03    A         A    TRUE #> 44   5   4 1.354197e-01 8.645803e-01    B         B    TRUE #> 45   5   5 1.359628e-01 8.640372e-01    B         B    TRUE #> 46   5   6 6.882337e-01 3.117663e-01    A         A    TRUE #> 47   5   7 5.976235e-01 4.023765e-01    A         A    TRUE #> 48   5   8 1.000000e+00 7.403753e-13    A         A    TRUE #> 49   5   9 1.000000e+00 3.375938e-08    A         A    TRUE #> 50   5  10 4.579335e-01 5.420665e-01    B         B    TRUE #> 51   6   1 9.246671e-01 7.533285e-02    A         A    TRUE #> 52   6   2 9.980721e-01 1.927950e-03    A         A    TRUE #> 53   6   3 8.273385e-02 9.172662e-01    B         B    TRUE #> 54   6   4 9.995959e-01 4.041259e-04    A         A    TRUE #> 55   6   5 9.935704e-01 6.429554e-03    A         A    TRUE #> 56   6   6 9.887647e-01 1.123533e-02    A         A    TRUE #> 57   6   7 1.997916e-05 9.999800e-01    B         B    TRUE #> 58   6   8 3.894647e-01 6.105353e-01    B         B    TRUE #> 59   6   9 3.331747e-03 9.966683e-01    B         B    TRUE #> 60   6  10 4.995197e-01 5.004803e-01    B         B    TRUE #> 61   7   1 7.254555e-01 2.745445e-01    B         A   FALSE #> 62   7   2 6.035382e-06 9.999940e-01    B         B    TRUE #> 63   7   3 9.968653e-01 3.134725e-03    A         A    TRUE #> 64   7   4 7.229766e-03 9.927702e-01    B         B    TRUE #> 65   7   5 1.136110e-03 9.988639e-01    B         B    TRUE #> 66   7   6 6.013764e-01 3.986236e-01    B         A   FALSE #> 67   7   7 9.978960e-01 2.103995e-03    A         A    TRUE #> 68   7   8 6.189266e-01 3.810734e-01    B         A   FALSE #> 69   7   9 8.791089e-01 1.208911e-01    A         A    TRUE #> 70   7  10 9.999482e-01 5.177511e-05    A         A    TRUE #> 71   8   1 6.630024e-01 3.369976e-01    B         A   FALSE #> 72   8   2 9.629415e-01 3.705847e-02    A         A    TRUE #> 73   8   3 9.974941e-01 2.505860e-03    A         A    TRUE #> 74   8   4 9.996142e-01 3.858012e-04    A         A    TRUE #> 75   8   5 1.000000e+00 1.886872e-08    A         A    TRUE #> 76   8   6 6.465807e-03 9.935342e-01    B         B    TRUE #> 77   8   7 1.452222e-02 9.854778e-01    B         B    TRUE #> 78   8   8 7.995562e-01 2.004438e-01    A         A    TRUE #> 79   8   9 9.999392e-01 6.078733e-05    A         A    TRUE #> 80   8  10 9.657731e-01 3.422693e-02    A         A    TRUE #> 81   9   1 9.999785e-01 2.154195e-05    A         A    TRUE #> 82   9   2 5.268835e-01 4.731165e-01    A         A    TRUE #> 83   9   3 6.099502e-01 3.900498e-01    B         A   FALSE #> 84   9   4 9.999989e-01 1.067558e-06    A         A    TRUE #> 85   9   5 5.546549e-03 9.944535e-01    B         B    TRUE #> 86   9   6 4.943750e-01 5.056250e-01    A         B   FALSE #> 87   9   7 7.673465e-01 2.326535e-01    A         A    TRUE #> 88   9   8 6.328472e-01 3.671528e-01    A         A    TRUE #> 89   9   9 2.456002e-05 9.999754e-01    B         B    TRUE #> 90   9  10 3.676213e-02 9.632379e-01    B         B    TRUE #> 91  10   1 1.559235e-01 8.440765e-01    B         B    TRUE #> 92  10   2 2.695981e-01 7.304019e-01    B         B    TRUE #> 93  10   3 1.734114e-02 9.826589e-01    B         B    TRUE #> 94  10   4 5.221163e-01 4.778837e-01    A         A    TRUE #> 95  10   5 9.999450e-01 5.499177e-05    A         A    TRUE #> 96  10   6 8.136215e-01 1.863785e-01    A         A    TRUE #> 97  10   7 9.999953e-01 4.736949e-06    A         A    TRUE #> 98  10   8 6.346127e-01 3.653873e-01    A         A    TRUE #> 99  10   9 9.222822e-01 7.771777e-02    A         A    TRUE #> 100 10  10 9.922970e-01 7.702961e-03    A         A    TRUE"},{"path":"https://loelschlaeger.de/RprobitB/reference/preference_classification.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify preferences of deciders. — preference_classification","title":"Classify preferences of deciders. — preference_classification","text":"function classifies preferences deciders based estimated latent classes.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/preference_classification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify preferences of deciders. — preference_classification","text":"","code":"preference_classification(x)"},{"path":"https://loelschlaeger.de/RprobitB/reference/preference_classification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify preferences of deciders. — preference_classification","text":"x object class RprobitB_model.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/preference_classification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify preferences of deciders. — preference_classification","text":"data frame deciders id latent class number.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/preference_flip.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for flip in preferences after change in model scale. — preference_flip","title":"Check for flip in preferences after change in model scale. — preference_flip","text":"function checks change model scale flipped preferences.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/preference_flip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for flip in preferences after change in model scale. — preference_flip","text":"","code":"preference_flip(model_old, model_new)"},{"path":"https://loelschlaeger.de/RprobitB/reference/preference_flip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for flip in preferences after change in model scale. — preference_flip","text":"model_old object class RprobitB_model, model scale change. model_new object class RprobitB_model, model scale change.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/preference_flip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for flip in preferences after change in model scale. — preference_flip","text":"return value, called side-effects.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/prepare.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare empirical choice data. — prepare","title":"Prepare empirical choice data. — prepare","text":"function prepares empirical choice data RprobitB package.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/prepare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare empirical choice data. — prepare","text":"","code":"prepare(   form,   choice_data,   alternatives = NULL,   re = NULL,   id = \"id\",   standardize = NULL,   test_prop = NULL )"},{"path":"https://loelschlaeger.de/RprobitB/reference/prepare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare empirical choice data. — prepare","text":"form formula object used specify probit model. structure choice ~ | B | C, names alternative choice situation specific covariates generic coefficient, B names choice situation specific covariates alternative specific coefficients, C names alternative choice situation specific covariates alternative specific coefficients. Separate multiple covariates one type + sign. default, alternative specific constants (ASCs) added model (except last alternative). can removed adding +0 second spot. See vignette vignette(\"data_management\", package = \"RprobitB\") details. choice_data data frame choice data \"wide\" format (.e. row represents one choice occasion) following requirements: must contain column named id contains unique identifier decision maker. can contain column named choice observed choices, choice must match name dependent variable form. column required model fitting prediction. alternative specific covariate p form choice alternative j alternatives, choice_data must contain column named p_j. covariate q form constant across alternatives, choice_data must contain column named q. alternatives character vector names choice alternatives. specified, choice set defined observed choices. re character (vector) covariates form random effects. re = NULL (default), random effects. random effects alternative specific constants, include \"ASC\" re. id character, name column choice_data contains unique identifier decision maker. default \"id\". standardize character vector names covariates get standardized. Covariates type 1 3 addressed <covariate>_<alternative>. standardize = \"\", covariates get standardized. test_prop Either NULL numeric 0 1. latter case, data split training set (decider proportion 1-test_prop) testing set (decider proportion test_prop).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/prepare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare empirical choice data. — prepare","text":"object class RprobitB_data. test_prop specified, list two RprobitB_data objects labelled \"train\" \"test\".","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/prepare.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare empirical choice data. — prepare","text":"See vignette \"Data management\" details: vignette(\"data_management\", package = \"RprobitB\").","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/prepare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare empirical choice data. — prepare","text":"","code":"data(\"Train\", package = \"mlogit\") data <- prepare(   form = choice ~ price | 0 | time + comfort + change,   choice_data = Train, re = c(\"price\", \"time\"),   standardize = \"all\" )"},{"path":"https://loelschlaeger.de/RprobitB/reference/prepare_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare empirical choice data. — prepare_data","title":"Prepare empirical choice data. — prepare_data","text":"function prepares empirical choice data RprobitB package.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/prepare_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare empirical choice data. — prepare_data","text":"","code":"prepare_data(   form,   choice_data,   re = NULL,   alternatives = NULL,   id = \"id\",   idc = NULL,   standardize = NULL )"},{"path":"https://loelschlaeger.de/RprobitB/reference/prepare_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare empirical choice data. — prepare_data","text":"form formula object used specify probit model. structure choice ~ | B | C, names alternative choice situation specific covariates generic coefficient, B names choice situation specific covariates alternative specific coefficients, C names alternative choice situation specific covariates alternative specific coefficients. Separate multiple covariates one type + sign. default, alternative specific constants (ASCs) added model (except last alternative). can removed adding +0 second spot. See vignette vignette(\"data_management\", package = \"RprobitB\") details. choice_data data frame choice data following requirements: must \"wide\" format, .e. row represents one choice occasion. must contain column named id contains unique identifier decision maker. can contain column named idc contains unique identifier choice situation decision maker. information missing, identifier generated automatically appearance choices data set. can contain column named choice observed choices, choice must match name dependent variable form. column required model fitting prediction. must contain column named p_j alternative specific covariate p form choice alternative j alternatives. must contain column named q covariate q form constant across alternatives. re character (vector) covariates form random effects. re = NULL (default), random effects. random effects alternative specific constants, include \"ASC\" re. alternatives character vector names choice alternatives. specified, choice set defined observed choices. id character, name column choice_data contains unique identifier decision maker. default \"id\". idc character, name column choice_data contains unique identifier choice situation decision maker. default NULL, case identifier generated automatically. standardize character vector names covariates get standardized. Covariates type 1 3 addressed <covariate>_<alternative>. standardize = \"\", covariates get standardized.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/prepare_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare empirical choice data. — prepare_data","text":"object class RprobitB_data.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/prepare_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare empirical choice data. — prepare_data","text":"See vignette \"Choice data\" details: vignette(\"choice_data\", package = \"RprobitB\").","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/prepare_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare empirical choice data. — prepare_data","text":"","code":"data(\"Train\", package = \"mlogit\") data <- prepare_data(   form = choice ~ price + time + comfort + change | 1,   choice_data = Train,   re = c(\"price\", \"time\"),   id = \"id\",   idc = \"choiceid\" )"},{"path":"https://loelschlaeger.de/RprobitB/reference/print.RprobitB_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for RprobitB_data. — print.RprobitB_data","title":"Print method for RprobitB_data. — print.RprobitB_data","text":"function print method object class RprobitB_data.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/print.RprobitB_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for RprobitB_data. — print.RprobitB_data","text":"","code":"# S3 method for RprobitB_data print(x, ...)"},{"path":"https://loelschlaeger.de/RprobitB/reference/print.RprobitB_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for RprobitB_data. — print.RprobitB_data","text":"x object class RprobitB_data. ... Ignored.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/print.RprobitB_gibbs_samples_statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for RprobitB_gibbs_samples_statistics. — print.RprobitB_gibbs_samples_statistics","title":"Print method for RprobitB_gibbs_samples_statistics. — print.RprobitB_gibbs_samples_statistics","text":"function print method object class RprobitB_gibbs_samples_statistics.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/print.RprobitB_gibbs_samples_statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for RprobitB_gibbs_samples_statistics. — print.RprobitB_gibbs_samples_statistics","text":"","code":"# S3 method for RprobitB_gibbs_samples_statistics print(x, true = NULL, digits = 2, ...)"},{"path":"https://loelschlaeger.de/RprobitB/reference/print.RprobitB_gibbs_samples_statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for RprobitB_gibbs_samples_statistics. — print.RprobitB_gibbs_samples_statistics","text":"x object class RprobitB_gibbs_samples_statistics. true Either NULL object class RprobitB_true_parameter. digits number printed decimal places. ... Ignored.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/print.RprobitB_latent_classes.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for RprobitB_latent_classes. — print.RprobitB_latent_classes","title":"Print method for RprobitB_latent_classes. — print.RprobitB_latent_classes","text":"function print method object class RprobitB_latent_classes.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/print.RprobitB_latent_classes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for RprobitB_latent_classes. — print.RprobitB_latent_classes","text":"","code":"# S3 method for RprobitB_latent_classes print(x, ...)"},{"path":"https://loelschlaeger.de/RprobitB/reference/print.RprobitB_latent_classes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for RprobitB_latent_classes. — print.RprobitB_latent_classes","text":"x object class RprobitB_latent_classes. ... Ignored.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/print.RprobitB_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for RprobitB_model. — print.RprobitB_model","title":"Print method for RprobitB_model. — print.RprobitB_model","text":"function print method object class RprobitB_model.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/print.RprobitB_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for RprobitB_model. — print.RprobitB_model","text":"","code":"# S3 method for RprobitB_model print(x, ...)"},{"path":"https://loelschlaeger.de/RprobitB/reference/print.RprobitB_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for RprobitB_model. — print.RprobitB_model","text":"x object class RprobitB_model. ... Ignored.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/print.RprobitB_normalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for RprobitB_normalization. — print.RprobitB_normalization","title":"Print method for RprobitB_normalization. — print.RprobitB_normalization","text":"function print method object class RprobitB_normalization.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/print.RprobitB_normalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for RprobitB_normalization. — print.RprobitB_normalization","text":"","code":"# S3 method for RprobitB_normalization print(x, ...)"},{"path":"https://loelschlaeger.de/RprobitB/reference/print.RprobitB_normalization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for RprobitB_normalization. — print.RprobitB_normalization","text":"x object class RprobitB_normalization. ... Ignored.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/print.summary.RprobitB_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for the summary of RprobitB_data. — print.summary.RprobitB_data","title":"Print method for the summary of RprobitB_data. — print.summary.RprobitB_data","text":"function print method object class summary.RprobitB_data.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/print.summary.RprobitB_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for the summary of RprobitB_data. — print.summary.RprobitB_data","text":"","code":"# S3 method for summary.RprobitB_data print(x, ...)"},{"path":"https://loelschlaeger.de/RprobitB/reference/print.summary.RprobitB_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for the summary of RprobitB_data. — print.summary.RprobitB_data","text":"x object class summary.RprobitB_data. ... Ignored.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/print.summary.RprobitB_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for the summary of RprobitB_model. — print.summary.RprobitB_model","title":"Print method for the summary of RprobitB_model. — print.summary.RprobitB_model","text":"function print method object class summary.RprobitB_model.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/print.summary.RprobitB_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for the summary of RprobitB_model. — print.summary.RprobitB_model","text":"","code":"# S3 method for summary.RprobitB_model print(x, digits = 2, ...)"},{"path":"https://loelschlaeger.de/RprobitB/reference/print.summary.RprobitB_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for the summary of RprobitB_model. — print.summary.RprobitB_model","text":"x object class summary.RprobitB_model. digits number printed decimal places. ... Ignored.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rdirichlet.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw from Dirichlet distribution — rdirichlet","title":"Draw from Dirichlet distribution — rdirichlet","text":"Function draw Dirichlet distribution.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rdirichlet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw from Dirichlet distribution — rdirichlet","text":"","code":"rdirichlet(delta)"},{"path":"https://loelschlaeger.de/RprobitB/reference/rdirichlet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw from Dirichlet distribution — rdirichlet","text":"delta vector, concentration parameter.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rdirichlet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw from Dirichlet distribution — rdirichlet","text":"vector, sample Dirichlet distribution length delta.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rdirichlet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw from Dirichlet distribution — rdirichlet","text":"","code":"rdirichlet(delta = 1:3) #>            [,1] #> [1,] 0.08165491 #> [2,] 0.40900557 #> [3,] 0.50933953"},{"path":"https://loelschlaeger.de/RprobitB/reference/rmvnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw from multivariate normal distribution — rmvnorm","title":"Draw from multivariate normal distribution — rmvnorm","text":"function draws multivariate normal distribution.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rmvnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw from multivariate normal distribution — rmvnorm","text":"","code":"rmvnorm(mu, Sigma)"},{"path":"https://loelschlaeger.de/RprobitB/reference/rmvnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw from multivariate normal distribution — rmvnorm","text":"mu mean vector length n. Sigma covariance matrix dimension n x n.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rmvnorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw from multivariate normal distribution — rmvnorm","text":"numeric vector length n.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rmvnorm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw from multivariate normal distribution — rmvnorm","text":"function builds upon following fact: \\(\\epsilon = (\\epsilon_1,\\dots,\\epsilon_n)\\), \\(\\epsilon_i\\) drawn independently standard normal distribution, \\(\\mu+L\\epsilon\\) draw multivariate normal distribution \\(N(\\mu,\\Sigma)\\), \\(L\\) lower triangular factor Choleski decomposition \\(\\Sigma\\).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rmvnorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw from multivariate normal distribution — rmvnorm","text":"","code":"mu <- c(0,0) Sigma <- diag(2) rmvnorm(mu = mu, Sigma = Sigma) #>           [,1] #> [1,] 0.1346870 #> [2,] 0.3300963"},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB.html","id":null,"dir":"Reference","previous_headings":"","what":"fHMM: A package for Bayes estimation of multinomial Probit models — RprobitB","title":"fHMM: A package for Bayes estimation of multinomial Probit models — RprobitB","text":"package provides tools Bayes estimation multinomial Probit models.","code":""},{"path":[]},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create object of class RprobitB_data. — RprobitB_data","title":"Create object of class RprobitB_data. — RprobitB_data","text":"function creates object class RprobitB_data.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create object of class RprobitB_data. — RprobitB_data","text":"","code":"RprobitB_data(   data,   choice_data,   N,   T,   J,   P_f,   P_r,   alternatives,   form,   re,   ASC,   linear_coeffs,   standardize,   simulated,   choice_available,   true_parameter,   res_var_names )"},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create object of class RprobitB_data. — RprobitB_data","text":"data list choice data. list N elements. element list two elements, X y, covariates decisions decision maker. precisely, X list T elements, element matrix dimension Jx(P_f+P_r) contains characteristics one choice occasion. y vector length T contains labels chosen alternatives. choice_data data frame choice data following requirements: must \"wide\" format, .e. row represents one choice occasion. must contain column named id contains unique identifier decision maker. can contain column named idc contains unique identifier choice situation decision maker. information missing, identifier generated automatically appearance choices data set. can contain column named choice observed choices, choice must match name dependent variable form. column required model fitting prediction. must contain column named p_j alternative specific covariate p form choice alternative j alternatives. must contain column named q covariate q form constant across alternatives. N number (greater equal 1) decision makers. T number (greater equal 1) choice occasions vector choice occasions length N (.e. decision maker specific number). J number (greater equal 2) choice alternatives. P_f number covariates connected fixed coefficient (can 0). P_r number covariates connected random coefficient (can 0). alternatives character vector names choice alternatives. specified, choice set defined observed choices. form formula object used specify probit model. structure choice ~ | B | C, names alternative choice situation specific covariates generic coefficient, B names choice situation specific covariates alternative specific coefficients, C names alternative choice situation specific covariates alternative specific coefficients. Separate multiple covariates one type + sign. default, alternative specific constants (ASCs) added model (except last alternative). can removed adding +0 second spot. See vignette vignette(\"data_management\", package = \"RprobitB\") details. re character (vector) covariates form random effects. re = NULL (default), random effects. random effects alternative specific constants, include \"ASC\" re. ASC boolean, determining whether model ASCs. linear_coeffs data frame coefficient names booleans indicating whether connected random effects. standardize character vector names covariates get standardized. Covariates type 1 3 addressed <covariate>_<alternative>. standardize = \"\", covariates get standardized. simulated boolean, TRUE data simulated, otherwise data empirical. choice_available boolean, TRUE data contains observed choices. true_parameter object class RprobitB_parameters. res_var_names names list reserved variable names choice_data.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create object of class RprobitB_data. — RprobitB_data","text":"object class RprobitB_data arguments function elements.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Create object of class RprobitB_fit. — RprobitB_fit","title":"Create object of class RprobitB_fit. — RprobitB_fit","text":"function creates object class RprobitB_fit.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create object of class RprobitB_fit. — RprobitB_fit","text":"","code":"RprobitB_fit(   data,   normalization,   R,   B,   Q,   latent_classes,   prior,   gibbs_samples,   classification )"},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create object of class RprobitB_fit. — RprobitB_fit","text":"data object class RprobitB_data. normalization object class RprobitB_normalization. R number iterations Gibbs sampler. B length burn-period, .e. non-negative number samples discarded. Q thinning factor Gibbs samples, .e. every Qth sample kept. latent_classes Either NULL list parameters specifying number latent classes: C: number (greater equal 1) latent classes, set 1 per default ignored P_r = 0. update = TRUE, C equals initial number classes. update: boolean, determining whether update C. Ignored P_r = 0. update = FALSE, following elements ignored. Cmax: maximum number latent classes. buffer: updating buffer (number iterations wait next update). epsmin: threshold weight removing latent classes (0 1). epsmax: threshold weight splitting latent classes (0 1). distmin: threshold difference means joining latent classes (non-negative). prior named list parameters prior distributions. See documentation check_prior details parameters can specified. gibbs_samples object class RprobitB_gibbs_samples. classification allocation variable estimated latent classes.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create object of class RprobitB_fit. — RprobitB_fit","text":"object class RprobitB_fit, .e. list arguments function elements.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_gibbs_samples_statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Create object of class RprobitB_gibbs_samples_statistics. — RprobitB_gibbs_samples_statistics","title":"Create object of class RprobitB_gibbs_samples_statistics. — RprobitB_gibbs_samples_statistics","text":"function creates object class RprobitB_gibbs_samples_statistics.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_gibbs_samples_statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create object of class RprobitB_gibbs_samples_statistics. — RprobitB_gibbs_samples_statistics","text":"","code":"RprobitB_gibbs_samples_statistics(gibbs_samples, FUN)"},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_gibbs_samples_statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create object of class RprobitB_gibbs_samples_statistics. — RprobitB_gibbs_samples_statistics","text":"gibbs_samples object class RprobitB_gibbs_samples. FUN (preferably named) list functions compute parameter statistics Gibbs samples, .e. mean mean, sd standard deviation, min minimum, max maximum, median median, function(x) quantile(x, p) pth quantile, R_hat Gelman-Rubin statistic.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_gibbs_samples_statistics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create object of class RprobitB_gibbs_samples_statistics. — RprobitB_gibbs_samples_statistics","text":"object class RprobitB_gibbs_samples_statistics, list statistics gibbs_samples obtained applying elements FUN.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_latent_classes.html","id":null,"dir":"Reference","previous_headings":"","what":"Create object of class RprobitB_latent_classes. — RprobitB_latent_classes","title":"Create object of class RprobitB_latent_classes. — RprobitB_latent_classes","text":"function creates object class RprobitB_latent_classes.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_latent_classes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create object of class RprobitB_latent_classes. — RprobitB_latent_classes","text":"","code":"RprobitB_latent_classes(latent_classes = NULL)"},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_latent_classes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create object of class RprobitB_latent_classes. — RprobitB_latent_classes","text":"latent_classes Either NULL list parameters specifying number latent classes: C: number (greater equal 1) latent classes, set 1 per default ignored P_r = 0. update = TRUE, C equals initial number classes. update: boolean, determining whether update C. Ignored P_r = 0. update = FALSE, following elements ignored. Cmax: maximum number latent classes. buffer: updating buffer (number iterations wait next update). epsmin: threshold weight removing latent classes (0 1). epsmax: threshold weight splitting latent classes (0 1). distmin: threshold difference means joining latent classes (non-negative).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_latent_classes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create object of class RprobitB_latent_classes. — RprobitB_latent_classes","text":"object class RprobitB_latent_classes.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Create object of class RprobitB_model. — RprobitB_model","title":"Create object of class RprobitB_model. — RprobitB_model","text":"function creates object class RprobitB_model.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create object of class RprobitB_model. — RprobitB_model","text":"","code":"RprobitB_model(   data,   normalization,   R,   B,   Q,   latent_classes,   prior,   gibbs_samples,   classification )"},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create object of class RprobitB_model. — RprobitB_model","text":"data object class RprobitB_data. normalization object class RprobitB_normalization. R number iterations Gibbs sampler. B length burn-period, .e. non-negative number samples discarded. Q thinning factor Gibbs samples, .e. every Qth sample kept. latent_classes Either NULL list parameters specifying number latent classes: C: number (greater equal 1) latent classes, set 1 per default ignored P_r = 0. update = TRUE, C equals initial number classes. update: boolean, determining whether update C. Ignored P_r = 0. update = FALSE, following elements ignored. Cmax: maximum number latent classes. buffer: updating buffer (number iterations wait next update). epsmin: threshold weight removing latent classes (0 1). epsmax: threshold weight splitting latent classes (0 1). distmin: threshold difference means joining latent classes (non-negative). prior named list parameters prior distributions normalized parameters: eta: mean vector length P_f normal prior alpha. Psi: covariance matrix dimension P_f x P_f normal prior alpha. delta: concentration parameter length 1 Dirichlet prior s. xi: mean vector length P_r normal prior b_c. D: covariance matrix dimension P_r x P_r normal prior b_c. nu: degrees freedom (natural number greater P_r) Inverse Wishart prior Omega_c. Theta: scale matrix dimension P_r x P_r Inverse Wishart prior Omega_c. kappa: degrees freedom (natural number greater J-1) Inverse Wishart prior Sigma. E: scale matrix dimension J-1 x J-1 Inverse Wishart prior Sigma. gibbs_samples object class RprobitB_gibbs_samples. classification allocation variable estimated latent classes.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create object of class RprobitB_model. — RprobitB_model","text":"object class RprobitB_model, .e. list arguments function elements.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_normalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Create object of class RprobitB_normalization — RprobitB_normalization","title":"Create object of class RprobitB_normalization — RprobitB_normalization","text":"function creates object class RprobitB_normalization.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_normalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create object of class RprobitB_normalization — RprobitB_normalization","text":"","code":"RprobitB_normalization(   J,   P_f,   level = J,   scale = list(parameter = \"s\", index = 1, value = 1) )"},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_normalization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create object of class RprobitB_normalization — RprobitB_normalization","text":"J number (greater equal 2) choice alternatives. P_f number covariates connected fixed coefficient (can 0). level number alternative respect utility differences computed. Currently, level = J (.e. utility differences respect last alternative) implemented. scale named list three elements, determining parameter normalization respect utility scale: parameter: Either \"\" (linear coefficient \"alpha\") \"s\" (variance error-term covariance matrix \"Sigma\"). index: index parameter gets fixed. value: value fixed parameter.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_normalization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create object of class RprobitB_normalization — RprobitB_normalization","text":"object class RprobitB_normalization, list elements level scale.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_normalization.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create object of class RprobitB_normalization — RprobitB_normalization","text":"choice model normalized respect level scale. level normalization, RprobitB takes utility differences respect one alternative. scale normalization, RprobitB fixes model parameter. Per default, first error-term variance fixed 1, .e. scale = list(\"parameter\" = \"s\", \"index\" = 1, \"value\" = 1). Alternatively, error-term variance non-random linear coefficient can fixed.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_normalization.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create object of class RprobitB_normalization — RprobitB_normalization","text":"","code":"RprobitB:::RprobitB_normalization(   J = 2, P_f = 1, level = 2, scale = list(\"parameter\" = \"s\", \"index\" = 1, \"value\" = 1) ) #> Normalization: #> - Level: Utility differences with respect to alternative 2. #> - Scale: Coefficient of the 1. error term variance in Sigma fixed to 1."},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Create object of class RprobitB_parameter. — RprobitB_parameter","title":"Create object of class RprobitB_parameter. — RprobitB_parameter","text":"function creates object class RprobitB_parameter. sample = TRUE, missing parameters sampled. parameters checked values P_f, P_r, J, N.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create object of class RprobitB_parameter. — RprobitB_parameter","text":"","code":"RprobitB_parameter(   P_f,   P_r,   J,   N,   alpha = NULL,   C = NULL,   s = NULL,   b = NULL,   Omega = NULL,   Sigma = NULL,   Sigma_full = NULL,   beta = NULL,   z = NULL,   seed = NULL,   sample = TRUE )"},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create object of class RprobitB_parameter. — RprobitB_parameter","text":"P_f number covariates connected fixed coefficient (can 0). P_r number covariates connected random coefficient (can 0). J number (greater equal 2) choice alternatives. N number (greater equal 1) decision makers. alpha fixed coefficient vector length P_f. Set NA P_f = 0. C number (greater equal 1) latent classes decision makers. Set NA P_r = 0. Otherwise, C = 1 per default. s vector class weights length C. Set NA P_r = 0. identifiability, vector must non-ascending. b matrix class means columns dimension P_r x C. Set NA P_r = 0. Omega matrix class covariance matrices columns dimension P_r*P_r x C. Set NA P_r = 0. Sigma differenced error term covariance matrix dimension J-1 x J-1 respect alternative J. Sigma_full error term covariance matrix dimension J x J. Internally, Sigma_full gets differenced respect alternative J, becomes identified covariance matrix dimension J-1 x J-1. Sigma specified, Sigma_full ignored. beta matrix decision-maker specific coefficient vectors dimension P_r x N. Set NA P_r = 0. z vector allocation variables length N. Set NA P_r = 0. seed Set seed sampling missing parameters. sample boolean, TRUE missing parameters get sampled.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_parameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create object of class RprobitB_parameter. — RprobitB_parameter","text":"object class RprobitB_parameter, .e. named list model parameters alpha, C, s, b, Omega, Sigma, Sigma_full, beta, z.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rtnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw from truncated normal — rtnorm","title":"Draw from truncated normal — rtnorm","text":"function draws truncated univariate normal distribution.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rtnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw from truncated normal — rtnorm","text":"","code":"rtnorm(mu, sig, trunpt, above)"},{"path":"https://loelschlaeger.de/RprobitB/reference/rtnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw from truncated normal — rtnorm","text":"mu mean. sig standard deviation. trunpt truncation point. boolean, TRUE truncate , otherwise .","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rtnorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw from truncated normal — rtnorm","text":"numeric value.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rtnorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw from truncated normal — rtnorm","text":"","code":"### draw R samples from a standard normal truncated at 1 from above R <- 1e4 draws <- replicate(R, rtnorm(1,1,1,TRUE)) ### draw the density plot(density(draws))"},{"path":"https://loelschlaeger.de/RprobitB/reference/rwishart.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw from Wishart distribution — rwishart","title":"Draw from Wishart distribution — rwishart","text":"function draws Wishart inverted Wishart distribution.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rwishart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw from Wishart distribution — rwishart","text":"","code":"rwishart(nu, V)"},{"path":"https://loelschlaeger.de/RprobitB/reference/rwishart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw from Wishart distribution — rwishart","text":"nu numeric, degrees freedom. Must least number dimensions. V matrix, scale matrix.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rwishart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw from Wishart distribution — rwishart","text":"list, draws Wishart (W), inverted Wishart (IW), corresponding Choleski decomposition (C CI).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rwishart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw from Wishart distribution — rwishart","text":"Wishart distribution generalization multiple dimensions gamma distributions draws space covariance matrices. expectation nu*V variance increases nu values V. Wishart distribution conjugate prior precision matrix multivariate normal distribution proper nu greater number dimensions.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rwishart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw from Wishart distribution — rwishart","text":"","code":"rwishart(nu = 2, V = diag(2)) #> $W #>            [,1]       [,2] #> [1,]  2.5852117 -0.9938717 #> [2,] -0.9938717  2.9405701 #>  #> $IW #>           [,1]      [,2] #> [1,] 0.4445834 0.1502630 #> [2,] 0.1502630 0.3908569 #>  #> $C #>          [,1]       [,2] #> [1,] 1.607859 -0.6181335 #> [2,] 0.000000  1.5995253 #>  #> $CI #>           [,1]      [,2] #> [1,] 0.6219449 0.2403494 #> [2,] 0.0000000 0.6251855 #>"},{"path":"https://loelschlaeger.de/RprobitB/reference/R_hat.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Gelman-Rubin statistic — R_hat","title":"Compute Gelman-Rubin statistic — R_hat","text":"function computes Gelman-Rubin statistic R_hat.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/R_hat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Gelman-Rubin statistic — R_hat","text":"","code":"R_hat(samples, parts = 2)"},{"path":"https://loelschlaeger.de/RprobitB/reference/R_hat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Gelman-Rubin statistic — R_hat","text":"samples vector matrix samples Markov chain, e.g. Gibbs samples. samples matrix, column gives samples separate run. parts number parts divide chain sub-chains.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/R_hat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Gelman-Rubin statistic — R_hat","text":"Gelman-Rubin statistic.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/R_hat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute Gelman-Rubin statistic — R_hat","text":"https://bookdown.org/rdpeng/advstatcomp/monitoring-convergence.html","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/R_hat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Gelman-Rubin statistic — R_hat","text":"","code":"no_chains <- 2 length_chains <- 1e3 samples <- matrix(NA, length_chains, no_chains) samples[1, ] <- 1 Gamma <- matrix(c(0.8, 0.1, 0.2, 0.9), 2, 2) for (c in 1:no_chains) {   for (t in 2:length_chains) {     samples[t, c] <- sample(1:2, 1, prob = Gamma[samples[t - 1, c], ])   } } R_hat(samples) #> [1] 1.023246"},{"path":"https://loelschlaeger.de/RprobitB/reference/set_initial_gibbs_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Set initial values for the Gibbs sampler. — set_initial_gibbs_values","title":"Set initial values for the Gibbs sampler. — set_initial_gibbs_values","text":"function sets initial values Gibbs sampler.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/set_initial_gibbs_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set initial values for the Gibbs sampler. — set_initial_gibbs_values","text":"","code":"set_initial_gibbs_values(N, T, J, P_f, P_r, C)"},{"path":"https://loelschlaeger.de/RprobitB/reference/set_initial_gibbs_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set initial values for the Gibbs sampler. — set_initial_gibbs_values","text":"N number (greater equal 1) decision makers. T number (greater equal 1) choice occasions vector choice occasions length N (.e. decision maker specific number). J number (greater equal 2) choice alternatives. P_f number covariates connected fixed coefficient (can 0). P_r number covariates connected random coefficient (can 0). C number (greater equal 1) latent classes.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/set_initial_gibbs_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set initial values for the Gibbs sampler. — set_initial_gibbs_values","text":"list initial values Gibbs sampler.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/set_mfrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Balancing visualization of multiple figures — set_mfrow","title":"Balancing visualization of multiple figures — set_mfrow","text":"function finds balanced setting par(mfrow).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/set_mfrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Balancing visualization of multiple figures — set_mfrow","text":"","code":"set_mfrow(n)"},{"path":"https://loelschlaeger.de/RprobitB/reference/set_mfrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Balancing visualization of multiple figures — set_mfrow","text":"n total number figures.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/set_mfrow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Balancing visualization of multiple figures — set_mfrow","text":"vector form c(nr,nc). par(mfrow = c(nr,nc)), subsequent figures drawn nr x nc array current device rows.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/set_mfrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Balancing visualization of multiple figures — set_mfrow","text":"","code":"RprobitB:::set_mfrow(3) #> [1] 2 2"},{"path":"https://loelschlaeger.de/RprobitB/reference/simulate.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate choice data. — simulate","title":"Simulate choice data. — simulate","text":"function simulates choice data RprobitB package.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/simulate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate choice data. — simulate","text":"","code":"simulate(   form,   N,   T,   J,   re = NULL,   alternatives = NULL,   distr = NULL,   standardize = NULL,   seed = NULL,   test_prop = NULL,   ... )"},{"path":"https://loelschlaeger.de/RprobitB/reference/simulate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate choice data. — simulate","text":"form formula object used specify probit model. structure choice ~ | B | C, names alternative choice situation specific covariates generic coefficient, B names choice situation specific covariates alternative specific coefficients, C names alternative choice situation specific covariates alternative specific coefficients. Separate multiple covariates one type + sign. default, alternative specific constants (ASCs) added model (except last alternative). can removed adding +0 second spot. See vignette vignette(\"data_management\", package = \"RprobitB\") details. N number (greater equal 1) decision makers. T number (greater equal 1) choice occasions vector choice occasions length N (.e. decision maker specific number). J number (greater equal 2) choice alternatives. re character (vector) covariates form random effects. re = NULL (default), random effects. random effects alternative specific constants, include \"ASC\" re. alternatives character vector names choice alternatives. specified, choice set defined observed choices. distr named list number generation functions covariates drawn. Covariates distribution specified drawn standard normal distribution. element distr must form \"cov\" = list(\"name\" = \"<name number generation function>\",...), cov name covariate ... required parameters number generation function. Possible number generation functions functions type r* base R (e.g. rnorm) required parameters (except n) must specified, function sample, required parameters (except size) must specified. standardize character vector names covariates get standardized. Covariates type 1 3 addressed <covariate>_<alternative>. standardize = \"\", covariates get standardized. seed Set seed simulation. test_prop Either NULL numeric 0 1. latter case, data split training set (decider proportion 1-test_prop) testing set (decider proportion test_prop). ... Optionally specify alpha, C, s, b, Omega, Sigma, Sigma_full, beta, z simulation.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/simulate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate choice data. — simulate","text":"object class RprobitB_data. test_prop specified, list two RprobitB_data objects labelled \"train\" \"test\".","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/simulate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate choice data. — simulate","text":"See vignette \"Data management\" details: vignette(\"data_management\", package = \"RprobitB\").","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/simulate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate choice data. — simulate","text":"","code":"data <- simulate(   form = choice ~ cost | income + 0 | time,   N = 100, T = 10, J = 3, re = \"cost\",   alternatives = c(\"car\", \"bus\", \"scooter\") )"},{"path":"https://loelschlaeger.de/RprobitB/reference/simulate_choices.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate choice data. — simulate_choices","title":"Simulate choice data. — simulate_choices","text":"function simulates choice data RprobitB package.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/simulate_choices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate choice data. — simulate_choices","text":"","code":"simulate_choices(   form,   N,   T,   J,   re = NULL,   alternatives = NULL,   covariates = NULL,   seed = NULL,   ... )"},{"path":"https://loelschlaeger.de/RprobitB/reference/simulate_choices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate choice data. — simulate_choices","text":"form formula object used specify probit model. structure choice ~ | B | C, names alternative choice situation specific covariates generic coefficient, B names choice situation specific covariates alternative specific coefficients, C names alternative choice situation specific covariates alternative specific coefficients. Separate multiple covariates one type + sign. default, alternative specific constants (ASCs) added model (except last alternative). can removed adding +0 second spot. See vignette vignette(\"data_management\", package = \"RprobitB\") details. N number (greater equal 1) decision makers. T number (greater equal 1) choice occasions vector choice occasions length N (.e. decision maker specific number). J number (greater equal 2) choice alternatives. re character (vector) covariates form random effects. re = NULL (default), random effects. random effects alternative specific constants, include \"ASC\" re. alternatives character vector names choice alternatives. specified, choice set defined observed choices. covariates named list covariate values. element must vector length equal number choice occasions named according covariate. Covariates values supplied drawn standard normal distribution. seed Set seed simulation. ... Optionally specify alpha, C, s, b, Omega, Sigma, Sigma_full, beta, z simulation.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/simulate_choices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate choice data. — simulate_choices","text":"object class RprobitB_data.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/simulate_choices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate choice data. — simulate_choices","text":"See vignette \"Choice data\" details: vignette(\"choice_data\", package = \"RprobitB\").","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/simulate_choices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate choice data. — simulate_choices","text":"","code":"data <- simulate_choices(   form = choice ~ cost | income | time,   N = 100,   T = 10,   J = 2,   re = c(\"cost\", \"time\"),   alternatives = c(\"car\", \"bus\"),   seed = 1,   alpha = c(-1, 1),   b = matrix(c(-1, -1, -0.5, -1.5, 0, -1), ncol = 2),   C = 2 )"},{"path":"https://loelschlaeger.de/RprobitB/reference/sufficient_statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute sufficient statistics — sufficient_statistics","title":"Compute sufficient statistics — sufficient_statistics","text":"function computes sufficient statistics data Gibbs sampler.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/sufficient_statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute sufficient statistics — sufficient_statistics","text":"","code":"sufficient_statistics(data, normalization)"},{"path":"https://loelschlaeger.de/RprobitB/reference/sufficient_statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute sufficient statistics — sufficient_statistics","text":"data object class RprobitB_data. normalization object class RprobitB_normalization, can created via RprobitB_normalization.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/sufficient_statistics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute sufficient statistics — sufficient_statistics","text":"list sufficient statistics data Gibbs sampling, containing elements N, T, J, P_f P_r data, Tvec, vector choice occasions decider length N, csTvec, vector length N cumulated sums Tvec starting 0, W, list design matrices differenced respect alternative number normalization$level decider choice occasion covariates linked fixed coefficient (NA P_f = 0), X, list design matrices differenced respect alternative number normalization$level decider choice occasion covariates linked random coefficient (NA P_r = 0), y, matrix dimension N x max(Tvec) observed choices deciders rows choice occasions columns, decoded numeric values respect appearance data$alternatives, rows filled NA case unbalanced panel, WkW, matrix dimension P_f^2 x (J-1)^2, sum Kronecker products transposed element W , XkX, list length N, element constructed way WkW elements X separately decider.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/sufficient_statistics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute sufficient statistics — sufficient_statistics","text":"function provides set sufficient statistics data object estimation routine save computation time.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/sufficient_statistics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute sufficient statistics — sufficient_statistics","text":"","code":"data <- simulate_choices(form = choice ~ v1 | v2 + 0, N = 2, T = 1:2, J = 3, re = \"v2\") normalization <- RprobitB:::RprobitB_normalization(J = data$J, P_f = data$P_f) RprobitB:::sufficient_statistics(data = data, normalization = normalization) #> $N #> [1] 2 #>  #> $T #> [1] 1 2 #>  #> $J #> [1] 3 #>  #> $P_f #> [1] 1 #>  #> $P_r #> [1] 2 #>  #> $Tvec #> [1] 1 2 #>  #> $csTvec #> [1] 0 1 #>  #> $W #> $W[[1]] #>              v1 #> [1,] -0.1134949 #> [2,]  0.8146276 #>  #> $W[[2]] #>             v1 #> [1,] 0.4088111 #> [2,] 1.2051665 #>  #> $W[[3]] #>              v1 #> [1,]  1.5144790 #> [2,] -0.2588766 #>  #>  #> $X #> $X[[1]] #>            v2_A       v2_B #> [1,] 0.08900887 0.00000000 #> [2,] 0.00000000 0.08900887 #>  #> $X[[2]] #>             v2_A        v2_B #> [1,] -0.09891759  0.00000000 #> [2,]  0.00000000 -0.09891759 #>  #> $X[[3]] #>           v2_A      v2_B #> [1,] -1.315725  0.000000 #> [2,]  0.000000 -1.315725 #>  #>  #> $y #>      [,1] [,2] #> [1,]    1   NA #> [2,]    3    3 #>  #> $WkW #>          [,1]        [,2]        [,3]     [,4] #> [1,] 2.473654 0.008166166 0.008166166 2.183061 #>  #> $XkX #> $XkX[[1]] #>             [,1]        [,2]        [,3]        [,4] #> [1,] 0.007922579 0.000000000 0.000000000 0.000000000 #> [2,] 0.000000000 0.007922579 0.000000000 0.000000000 #> [3,] 0.000000000 0.000000000 0.007922579 0.000000000 #> [4,] 0.000000000 0.000000000 0.000000000 0.007922579 #>  #> $XkX[[2]] #>          [,1]     [,2]     [,3]     [,4] #> [1,] 1.740916 0.000000 0.000000 0.000000 #> [2,] 0.000000 1.740916 0.000000 0.000000 #> [3,] 0.000000 0.000000 1.740916 0.000000 #> [4,] 0.000000 0.000000 0.000000 1.740916 #>  #>"},{"path":"https://loelschlaeger.de/RprobitB/reference/summary.RprobitB_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for RprobitB_data. — summary.RprobitB_data","title":"Summary method for RprobitB_data. — summary.RprobitB_data","text":"function summary method object class RprobitB_data.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/summary.RprobitB_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for RprobitB_data. — summary.RprobitB_data","text":"","code":"# S3 method for RprobitB_data summary(object, ...)"},{"path":"https://loelschlaeger.de/RprobitB/reference/summary.RprobitB_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for RprobitB_data. — summary.RprobitB_data","text":"object object class RprobitB_data. ... Ignored.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/summary.RprobitB_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for RprobitB_model. — summary.RprobitB_model","title":"Summary method for RprobitB_model. — summary.RprobitB_model","text":"function summary method object class RprobitB_model.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/summary.RprobitB_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for RprobitB_model. — summary.RprobitB_model","text":"","code":"# S3 method for RprobitB_model summary(object, FUN = c(mean = mean, sd = sd, `R^` = R_hat), ...)"},{"path":"https://loelschlaeger.de/RprobitB/reference/summary.RprobitB_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for RprobitB_model. — summary.RprobitB_model","text":"object object class RprobitB_model. FUN (preferably named) list functions compute parameter statistics Gibbs samples, .e. mean mean, sd standard deviation, min minimum, max maximum, median median, function(x) quantile(x, p) pth quantile, R_hat Gelman-Rubin statistic. ... Ignorded.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/train_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Split choice data. — train_test","title":"Split choice data. — train_test","text":"function splits choice data train test part.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/train_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split choice data. — train_test","text":"","code":"train_test(   x,   test_proportion = NULL,   test_number = NULL,   by = \"N\",   random = FALSE,   seed = NULL )"},{"path":"https://loelschlaeger.de/RprobitB/reference/train_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split choice data. — train_test","text":"x object class RprobitB_data. test_proportion number 0 1 gives proportion test subsample. test_number positive integer gives number observations test subsample. One \"N\" (split deciders) \"T\" (split choice occasions). random TRUE, subsamples build randomly. seed Set seed building subsamples randomly.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/train_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split choice data. — train_test","text":"list two objects class RprobitB_data, named \"train\"\"test\".","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/train_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Split choice data. — train_test","text":"See vignette \"Choice data\" details: vignette(\"choice_data\", package = \"RprobitB\").","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/train_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split choice data. — train_test","text":"","code":"x <- simulate_choices(form = choice ~ covariate, N = 10, T = 10, J = 2)  # 70% of deciders in the train subsample, 30% of deciders in the test subsample train_test(x, test_proportion = 0.3, by = \"N\") #> $train #> Simulated data of 70 choices. #>  #> $test #> Simulated data of 30 choices. #>   # 2 randomly chosen choice occasions per decider in the test subsample, the rest # in the train subsample train_test(x, test_number = 2, by = \"T\", random = TRUE, seed = 1) #> $train #> Simulated data of 80 choices. #>  #> $test #> Simulated data of 20 choices. #>"},{"path":"https://loelschlaeger.de/RprobitB/reference/transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform","title":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform","text":"Given object class RprobitB_model, function can: change length B burn-period, change thinning factor Q Gibbs samples, change model scale.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform","text":"","code":"transform(x, B = NULL, Q = NULL, scale = NULL, check_preference_flip = TRUE)"},{"path":"https://loelschlaeger.de/RprobitB/reference/transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform","text":"x object class RprobitB_model. B length burn-period, .e. non-negative number samples discarded. Q thinning factor Gibbs samples, .e. every Qth sample kept. scale named list three elements, determining parameter normalization respect utility scale: parameter: Either \"\" (linear coefficient \"alpha\") \"s\" (variance error-term covariance matrix \"Sigma\"). index: index parameter gets fixed. value: value fixed parameter. check_preference_flip TRUE check flip preferences new scale.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform","text":"object class RprobitB_model.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform","text":"See vignette \"Model fitting\" details: vignette(\"model_fitting\", package = \"RprobitB\").","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform.RprobitB_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform.RprobitB_fit","title":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform.RprobitB_fit","text":"Given object class RprobitB_fit, function can: change length B burn-period, change thinning factor Q Gibbs samples, change model scale.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform.RprobitB_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform.RprobitB_fit","text":"","code":"# S3 method for RprobitB_fit transform(   `_data`,   B = NULL,   Q = NULL,   scale = NULL,   check_preference_flip = TRUE,   ... )"},{"path":"https://loelschlaeger.de/RprobitB/reference/transform.RprobitB_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform.RprobitB_fit","text":"_data object class RprobitB_fit. B length burn-period, .e. non-negative number samples discarded. Q thinning factor Gibbs samples, .e. every Qth sample kept. scale named list three elements, determining parameter normalization respect utility scale: parameter: Either \"\" (linear coefficient \"alpha\") \"s\" (variance error-term covariance matrix \"Sigma\"). index: index parameter gets fixed. value: value fixed parameter. check_preference_flip TRUE check flip preferences new scale. ... Ignored.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform.RprobitB_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform.RprobitB_fit","text":"object class RprobitB_fit.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform.RprobitB_fit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform.RprobitB_fit","text":"See vignette \"Model fitting\" details: vignette(\"model_fitting\", package = \"RprobitB\").","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform_fit","title":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform_fit","text":"Given object class RprobitB_fit, function can: change length B burn-period, change thinning factor Q Gibbs samples, change model scale.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform_fit","text":"","code":"transform_fit(   x,   B = NULL,   Q = NULL,   scale = NULL,   check_preference_flip = TRUE )"},{"path":"https://loelschlaeger.de/RprobitB/reference/transform_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform_fit","text":"x object class RprobitB_fit. B length burn-period, .e. non-negative number samples discarded. Q thinning factor Gibbs samples, .e. every Qth sample kept. scale named list three elements, determining parameter normalization respect utility scale: parameter: Either \"\" (linear coefficient \"alpha\") \"s\" (variance error-term covariance matrix \"Sigma\"). index: index parameter gets fixed. value: value fixed parameter. check_preference_flip TRUE check flip preferences new scale.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform_fit","text":"object class RprobitB_fit.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform_fit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform_fit","text":"See vignette \"Model fitting\" details: vignette(\"model_fitting\", package = \"RprobitB\").","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform_gibbs_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Transformation of Gibbs samples. — transform_gibbs_samples","title":"Transformation of Gibbs samples. — transform_gibbs_samples","text":"function normalizes, burns thins Gibbs samples.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform_gibbs_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transformation of Gibbs samples. — transform_gibbs_samples","text":"","code":"transform_gibbs_samples(gibbs_samples, R, B, Q, normalization)"},{"path":"https://loelschlaeger.de/RprobitB/reference/transform_gibbs_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transformation of Gibbs samples. — transform_gibbs_samples","text":"gibbs_samples output gibbs_sampling. R number iterations Gibbs sampler. B length burn-period, .e. non-negative number samples discarded. Q thinning factor Gibbs samples, .e. every Qth sample kept. normalization object class RprobitB_normalization, can created via RprobitB_normalization.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform_gibbs_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transformation of Gibbs samples. — transform_gibbs_samples","text":"object class RprobitB_gibbs_samples, .e. list transformed Gibbs samples. element list, containing (available) Gibbs samples s, alpha, b, Omega, Sigma: gibbs_samples: function input gibbs_samples. gibbs_samples_n: list normalized samples based normalization. gibbs_samples_nb: list normalized burned samples based normalization B. gibbs_samples_nt: list normalized thinned samples based normalization Q gibbs_samples_nbt: list normalized, burned thinned samples based normalization, B Q","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform_model","title":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform_model","text":"Given object class RprobitB_model, function can: change length B burn-period, change thinning factor Q Gibbs samples, change model scale.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform_model","text":"","code":"transform_model(   x,   B = NULL,   Q = NULL,   scale = NULL,   check_preference_flip = TRUE )"},{"path":"https://loelschlaeger.de/RprobitB/reference/transform_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform_model","text":"x object class RprobitB_model. B length burn-period, .e. non-negative number samples discarded. Q thinning factor Gibbs samples, .e. every Qth sample kept. scale named list three elements, determining parameter normalization respect utility scale: parameter: Either \"\" (linear coefficient \"alpha\") \"s\" (variance error-term covariance matrix \"Sigma\"). index: index parameter gets fixed. value: value fixed parameter. check_preference_flip TRUE check flip preferences new scale.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform_model","text":"object class RprobitB_model.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Change the length of the burn-in period, the thinning factor and the scale\r\nafter Gibbs sampling. — transform_model","text":"See vignette \"Model fitting\" details: vignette(\"model_fitting\", package = \"RprobitB\").","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform_parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Transformation of parameter values. — transform_parameter","title":"Transformation of parameter values. — transform_parameter","text":"function transforms parameter values based normalization.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform_parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transformation of parameter values. — transform_parameter","text":"","code":"transform_parameter(parameter, normalization)"},{"path":"https://loelschlaeger.de/RprobitB/reference/transform_parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transformation of parameter values. — transform_parameter","text":"parameter object class RprobitB_parameter. normalization object class RprobitB_normalization.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform_parameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transformation of parameter values. — transform_parameter","text":"object class RprobitB_parameter.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/undiff_Sigma.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform differenced to non-differenced error term covariance matrix. — undiff_Sigma","title":"Transform differenced to non-differenced error term covariance matrix. — undiff_Sigma","text":"function transforms differenced error term covariance matrix Sigma back non-differenced error term covariance matrix.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/undiff_Sigma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform differenced to non-differenced error term covariance matrix. — undiff_Sigma","text":"","code":"undiff_Sigma(Sigma, i, checks = TRUE, pos = TRUE, labels = TRUE)"},{"path":"https://loelschlaeger.de/RprobitB/reference/undiff_Sigma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform differenced to non-differenced error term covariance matrix. — undiff_Sigma","text":"Sigma error term covariance matrix dimension J-1 x J-1 differenced respect alternative . integer, alternative number respect Sigma differenced. checks TRUE function runs additional input transformation checks. pos TRUE function returns positive matrix. labels TRUE function adds labels output matrix.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/undiff_Sigma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform differenced to non-differenced error term covariance matrix. — undiff_Sigma","text":"covariance matrix dimension J x J. covariance matrix gets differenced respect alternative , results Sigma.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_b.html","id":null,"dir":"Reference","previous_headings":"","what":"Update class means — update_b","title":"Update class means — update_b","text":"function updates class means (independent classes).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_b.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update class means — update_b","text":"","code":"update_b(beta, Omega, z, m, xi, Dinv)"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_b.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update class means — update_b","text":"beta matrix decision-maker specific coefficient vectors dimension P_r x N. Set NA P_r = 0. Omega matrix class covariance matrices columns dimension P_r*P_r x C. Set NA P_r = 0. z vector allocation variables length N. Set NA P_r = 0. m vector class sizes length C. xi mean vector length P_r normal prior b_c. Dinv precision matrix (.e. inverse covariance matrix) dimension P_r x P_r normal prior b_c.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_b.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update class means — update_b","text":"matrix updated means class columns.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_b.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update class means — update_b","text":"following holds independently class \\(c\\). Let \\(b_c\\) mean class number c. priori, assume \\(b_c\\) normally distributed mean vector \\(\\xi\\) covariance matrix \\(D\\). Let \\((\\beta_n)_{z_n=c}\\) collection \\(\\beta_n\\) currently allocated class \\(c\\), \\(m_c\\) class size, \\(\\bar{b}_c\\) arithmetic mean. Assuming independence across draws, \\((\\beta_n)_{z_n=c}\\) normal likelihood $$\\prod_n \\phi(\\beta_n \\mid b_c,\\Omega_c),$$ product values \\(n\\) \\(z_n=c\\) holds. Due conjugacy prior, posterior \\(\\Pr(b_c \\mid (\\beta_n)_{z_n=c})\\) follows normal distribution mean $$(D^{-1} + m_c\\Omega_c^{-1})^{-1}(D^{-1}\\xi + m_c\\Omega_c^{-1}\\bar{b}_c)$$ covariance matrix $$(D^{-1} + m_c \\Omega_c^{-1})^{-1}.$$","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_b.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update class means — update_b","text":"","code":"### coefficient vector for N = 4 decider and P_r = 2 random coefficients beta <- cbind(c(0,0),c(0,0),c(1,1),c(1,1)) ### class covariances for C = 2 classes Omega <- cbind(c(1,0,0,1),c(1,0,0,1)) ### class allocation vector (starting from 0) and class sizes z <- c(0,0,1,1) m <- as.numeric(table(z)) ### prior mean vector and precision matrix (inverse of covariance matrix) xi <- c(0,0) Dinv <- diag(2) ### updated class means (in columns) update_b(beta = beta, Omega = Omega, z = z, m = m, xi = xi, Dinv = Dinv) #>             [,1]      [,2] #> [1,]  0.64947917 0.6573192 #> [2,] -0.02594243 1.2115908"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_Omega.html","id":null,"dir":"Reference","previous_headings":"","what":"Update class covariances — update_Omega","title":"Update class covariances — update_Omega","text":"function updates class covariances (independent classes).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_Omega.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update class covariances — update_Omega","text":"","code":"update_Omega(beta, b, z, m, nu, Theta)"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_Omega.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update class covariances — update_Omega","text":"beta matrix decision-maker specific coefficient vectors dimension P_r x N. Set NA P_r = 0. b matrix class means columns dimension P_r x C. Set NA P_r = 0. z vector allocation variables length N. Set NA P_r = 0. m vector class sizes length C. nu degrees freedom (natural number greater P_r) Inverse Wishart prior Omega_c. Theta scale matrix dimension P_r x P_r Inverse Wishart prior Omega_c.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_Omega.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update class covariances — update_Omega","text":"matrix updated covariance matrices class columns.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_Omega.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update class covariances — update_Omega","text":"following holds independently class \\(c\\). Let \\(\\Omega_c\\) covariance matrix class number c. priori, assume \\(\\Omega_c\\) inverse Wishart distributed \\(\\nu\\) degrees freedom scale matrix \\(\\Theta\\). Let \\((\\beta_n)_{z_n=c}\\) collection \\(\\beta_n\\) currently allocated class \\(c\\), \\(m_c\\) size class \\(c\\), \\(b_c\\) class mean vector. Due conjugacy prior, posterior \\(\\Pr(\\Omega_c \\mid (\\beta_n)_{z_n=c})\\) follows inverted Wishart distribution \\(\\nu + m_c\\) degrees freedom scale matrix \\(\\Theta^{-1} + \\sum_n (\\beta_n - b_c)(\\beta_n - b_c)'\\), product values \\(n\\) \\(z_n=c\\) holds.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_Omega.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update class covariances — update_Omega","text":"","code":"### coefficient vector for N = 10 decider and P_r = 2 random coefficients N <- 10 beta <- cbind(matrix(rnorm(N,0,0.1), nrow = 2, ncol = N/2),               matrix(rnorm(N,1,0.1), nrow = 2, ncol = N/2)) ### class means for C = 2 classes b <- cbind(c(0,0),c(1,1)) ### class allocation vector (starting from 0) and class sizes z <- c(rep(0,N/2),rep(1,N/2)) m <- as.numeric(table(z)) ### degrees of freedom and scale matrix for the Wishart prior nu <- 1 Theta <- diag(2) ### updated class means (in columns) update_Omega(beta = beta, b = b, z = z, m = m, nu = nu, Theta = Theta) #>            [,1]      [,2] #> [1,] 0.11290058 0.3059407 #> [2,] 0.01078389 0.1730753 #> [3,] 0.01078389 0.1730753 #> [4,] 0.16603328 0.5036390"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_reg.html","id":null,"dir":"Reference","previous_headings":"","what":"Update coefficient vector of multiple linear regression — update_reg","title":"Update coefficient vector of multiple linear regression — update_reg","text":"function updates coefficient vector multiple linear regression.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_reg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update coefficient vector of multiple linear regression — update_reg","text":"","code":"update_reg(mu0, Tau0, XSigX, XSigU)"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_reg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update coefficient vector of multiple linear regression — update_reg","text":"mu0 mean vector normal prior distribution coefficient vector. Tau0 precision matrix (.e. inverted covariance matrix) normal prior distribution coefficient vector. XSigX matrix \\(\\sum_{n=1}^N X_n'\\Sigma^{-1}X_n\\). See details. XSigU vector \\(\\sum_{n=1}^N X_n'\\Sigma^{-1}U_n\\). See details.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_reg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update coefficient vector of multiple linear regression — update_reg","text":"vector, draw normal posterior distribution coefficient vector multiple linear regression.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_reg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update coefficient vector of multiple linear regression — update_reg","text":"function draws posterior distribution \\(\\beta\\) linear utility equation $$U_n = X_n\\beta + \\epsilon_n,$$ \\(U_n\\) (latent, assumed known) utility vector decider \\(n = 1,\\dots,N\\), \\(X_n\\) design matrix build choice characteristics faced \\(n\\), \\(\\beta\\) unknown coefficient vector (can either fixed coefficient vector \\(\\alpha\\) decider-specific coefficient vector \\(\\beta_n\\)), \\(\\epsilon_n\\) error term assumed normally distributed mean \\(0\\) (known) covariance matrix \\(\\Sigma\\). priori assume (conjugate) normal prior distribution $$\\beta \\sim N(\\mu_0,\\Tau_0)$$ mean vector \\(\\mu_0\\) precision matrix (.e. inverted covariance matrix) \\(\\Tau_0\\). posterior distribution \\(\\beta\\) normal covariance matrix $$\\Sigma_1 = (\\Tau_0 + \\sum_{n=1}^N X_n'\\Sigma^{-1}X_n)^{-1}$$ mean vector $$\\mu_1 = \\Sigma_1(\\Tau_0\\mu_0 + \\sum_{n=1}^N X_n'\\Sigma^{-1}U_n)$$. Note analogy \\(\\mu_1\\) generalized least squares estimator $$\\hat{\\beta}_\\text{GLS} = (\\sum_{n=1}^N X_n'\\Sigma^{-1}X_n)^{-1} \\sum_{n=1}^N X_n'\\Sigma^{-1}U_n$$ becomes weighted prior parameters \\(\\mu_0\\) \\(\\Tau_0\\).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_reg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update coefficient vector of multiple linear regression — update_reg","text":"","code":"### true coefficient vector beta_true <- matrix(c(-1,1), ncol=1) ### error term covariance matrix Sigma <- matrix(c(1,0.5,0.2,0.5,1,0.2,0.2,0.2,2), ncol=3) ### draw data N <- 100 X <- replicate(N, matrix(rnorm(6), ncol=2), simplify = FALSE) eps <- replicate(N, rmvnorm(mu = c(0,0,0), Sigma = Sigma), simplify = FALSE) U <- mapply(function(X, eps) X %*% beta_true + eps, X, eps, SIMPLIFY = FALSE) ### prior parameters for coefficient vector mu0 <- c(0,0) Tau0 <- diag(2) ### draw from posterior of coefficient vector XSigX <- Reduce(`+`, lapply(X, function(X) t(X) %*% solve(Sigma) %*% X)) XSigU <- Reduce(`+`, mapply(function(X, U) t(X) %*% solve(Sigma) %*% U, X, U, SIMPLIFY = FALSE)) beta_draws <- replicate(100, update_reg(mu0, Tau0, XSigX, XSigU), simplify = TRUE) rowMeans(beta_draws) #> [1] -1.009992  0.913448"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_s.html","id":null,"dir":"Reference","previous_headings":"","what":"Update class weight vector — update_s","title":"Update class weight vector — update_s","text":"function updates class weight vector drawing posterior distribution.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_s.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update class weight vector — update_s","text":"","code":"update_s(delta, m)"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_s.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update class weight vector — update_s","text":"delta numeric concentration parameter vector rep(delta,C) Dirichlet prior s. m vector current class frequencies.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_s.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update class weight vector — update_s","text":"vector, draw Dirichlet posterior distribution s.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_s.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update class weight vector — update_s","text":"Let \\(m=(m_1,\\dots,m_C)\\) frequencies \\(C\\) classes. Given class weight (probability) vector \\(s=(s_1,\\dots,s_C)\\), distribution \\(m\\) multinomial likelihood $$L(m\\mid s) \\propto \\prod_{=1}^C s_i^{m_i}.$$ conjugate prior \\(p(s)\\) \\(s\\) Dirichlet distribution, density function proportional $$\\prod_{=1}^C s_i^{\\delta_i-1},$$ \\(\\delta = (\\delta_1,\\dots,\\delta_C)\\) concentration parameter vector. Note RprobitB, \\(\\delta_1=\\dots=\\delta_C\\). restriction necessary class number \\(C\\) can change. posterior distribution \\(s\\) proportional $$p(s) L(m\\mid s) \\propto \\prod_{=1}^C s_i^{\\delta_i + m_i - 1},$$ turn proportional Dirichlet distribution parameters \\(\\delta+m\\).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_s.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update class weight vector — update_s","text":"","code":"### number of classes C <- 4 ### current class sizes m <- sample.int(C) ### concentration parameter for Dirichlet prior (single-valued) delta <- 1 ### updated class weight vector update_s(delta = 1, m = m) #>           [,1] #> [1,] 0.2261477 #> [2,] 0.3801431 #> [3,] 0.1651098 #> [4,] 0.2285995"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_Sigma.html","id":null,"dir":"Reference","previous_headings":"","what":"Update error term covariance matrix of multiple linear regression — update_Sigma","title":"Update error term covariance matrix of multiple linear regression — update_Sigma","text":"function updates error term covariance matrix multiple linear regression.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_Sigma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update error term covariance matrix of multiple linear regression — update_Sigma","text":"","code":"update_Sigma(kappa, E, N, S)"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_Sigma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update error term covariance matrix of multiple linear regression — update_Sigma","text":"kappa degrees freedom (natural number greater J-1) Inverse Wishart prior Sigma. E scale matrix dimension J-1 x J-1 Inverse Wishart prior Sigma. N draw size. S matrix, sum outer products residuals \\((\\epsilon_n)_{n=1,\\dots,N}\\).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_Sigma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update error term covariance matrix of multiple linear regression — update_Sigma","text":"matrix, draw Inverse Wishart posterior distribution error term covariance matrix multiple linear regression.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_Sigma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update error term covariance matrix of multiple linear regression — update_Sigma","text":"function draws posterior distribution covariance matrix \\(\\Sigma\\) linear utility equation $$U_n = X_n\\beta + \\epsilon_n,$$ \\(U_n\\) (latent, assumed known) utility vector decider \\(n = 1,\\dots,N\\), \\(X_n\\) design matrix build choice characteristics faced \\(n\\), \\(\\beta\\) coefficient vector, \\(\\epsilon_n\\) error term assumed normally distributed mean \\(0\\) unknown covariance matrix \\(\\Sigma\\). priori assume (conjugate) Inverse Wishart distribution $$\\Sigma \\sim W(\\kappa,E)$$ \\(\\kappa\\) degrees freedom scale matrix \\(E\\). posterior \\(\\Sigma\\) Inverted Wishart distribution \\(\\kappa + N\\) degrees freedom scale matrix \\(E^{-1}+S\\), \\(S = \\sum_{n=1}^{N} \\epsilon_n \\epsilon_n'\\) sum outer products residuals \\((\\epsilon_n = U_n - X_n\\beta)_n\\).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_Sigma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update error term covariance matrix of multiple linear regression — update_Sigma","text":"","code":"### true error term covariance matrix Sigma_true <- matrix(c(1,0.5,0.2,0.5,1,0.2,0.2,0.2,2), ncol=3) ### coefficient vector beta <- matrix(c(-1,1), ncol=1) ### draw data N <- 100 X <- replicate(N, matrix(rnorm(6), ncol=2), simplify = FALSE) eps <- replicate(N, rmvnorm(mu = c(0,0,0), Sigma = Sigma_true), simplify = FALSE) U <- mapply(function(X, eps) X %*% beta + eps, X, eps, SIMPLIFY = FALSE) ### prior parameters for covariance matrix kappa <- 4 E <- diag(3) ### draw from posterior of coefficient vector outer_prod <- function(X, U) (U - X %*% beta) %*% t(U - X %*% beta) S <- Reduce(`+`, mapply(outer_prod, X, U, SIMPLIFY = FALSE)) Sigma_draws <- replicate(100, update_Sigma(kappa, E, N, S)) apply(Sigma_draws, 1:2, mean) #>           [,1]       [,2]       [,3] #> [1,] 1.2097978 0.59213663 0.11578799 #> [2,] 0.5921366 1.16309258 0.04588758 #> [3,] 0.1157880 0.04588758 1.95683207 apply(Sigma_draws, 1:2, stats::sd) #>           [,1]      [,2]      [,3] #> [1,] 0.1588569 0.1312811 0.1351268 #> [2,] 0.1312811 0.1709045 0.1457297 #> [3,] 0.1351268 0.1457297 0.2517072"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_z.html","id":null,"dir":"Reference","previous_headings":"","what":"Update class allocation vector — update_z","title":"Update class allocation vector — update_z","text":"function updates class allocation vector (independently observations) drawing conditional distribution.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_z.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update class allocation vector — update_z","text":"","code":"update_z(s, beta, b, Omega)"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_z.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update class allocation vector — update_z","text":"s vector class weights length C. Set NA P_r = 0. identifiability, vector must non-ascending. beta matrix decision-maker specific coefficient vectors dimension P_r x N. Set NA P_r = 0. b matrix class means columns dimension P_r x C. Set NA P_r = 0. Omega matrix class covariance matrices columns dimension P_r*P_r x C. Set NA P_r = 0.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_z.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update class allocation vector — update_z","text":"updated class allocation vector. Values starting 0, .e. \\(z_n = 0\\) means \\(\\beta_n\\) allocated class \\(1\\).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_z.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update class allocation vector — update_z","text":"Let \\(z = (z_1,\\dots,z_N)\\) denote class allocation vector observations (mixed coefficients) \\(\\beta = (\\beta_1,\\dots,\\beta_N)\\). Independently \\(n\\), conditional probability \\(\\Pr(z_n = c \\mid s,\\beta_n,b,\\Omega)\\) \\(\\beta_n\\) allocated class \\(c\\) \\(c=1,\\dots,C\\) depends class allocation vector \\(s\\), class means \\(b=(b_c)_c\\) class covariance matrices \\(Omega=(Omega_c)_c\\) proportional $$s_c \\phi(\\beta_n \\mid b_c,Omega_c).$$","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_z.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update class allocation vector — update_z","text":"","code":"### class weights for C = 2 classes s <- rdirichlet(c(1,1)) ### coefficient vector for N = 1 decider and P_r = 2 random coefficients beta <- matrix(c(1,1), ncol = 1) ### class means and covariances b <- cbind(c(0,0),c(1,1)) Omega <- cbind(c(1,0,0,1),c(1,0,0,1)) ### updated class allocation vector (starting from 0) update_z(s = s, beta = beta, b = b, Omega = Omega) #>      [,1] #> [1,]    1"},{"path":"https://loelschlaeger.de/RprobitB/news/index.html","id":"rprobitb-1009000","dir":"Changelog","previous_headings":"","what":"RprobitB 1.0.0.9000","title":"RprobitB 1.0.0.9000","text":"Added print method RprobitB_parameter. function choice_probs now called choice_probabilities() make functionality clearer. Splitting data set train test part can now done function train_test(). Consequently, argument test_prob removed prepare_data() simulate_choices(). function simulate_choices() argument distr anymore. Instead, covariates can supplied via covariates argument. Consequently, argument standardize removed well. function compare now called model_selection() make functionality clearer. function prepare now called prepare_data() make functionality clearer. function simulate now called simulate_choices() mask stats::simulate(). README file now R Markdown format.","code":""}]
