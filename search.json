[{"path":"https://loelschlaeger.de/RprobitB/articles/RprobitB.html","id":"for-what-tasks-is-this-package-designed","dir":"Articles","previous_headings":"","what":"For what tasks is this package designed?","title":"Introduction","text":"RprobitB1 can analyze choices made deciders among discrete set alternatives, estimate (latent class) (mixed) (multinomial) probit models Bayesian framework, model heterogeneity approximating underlying mixing distributions mixture normal distributions, identify latent classes decision makers. Run install.packages(\"RprobitB\") R console install latest version RprobitB. notation (latent class) (mixed) (multinomial) probit model? RprobitB can fit probit models increasing complexity: basic, modelling choice two alternatives (probit model). Considering two alternatives leads multinomial probit model. incorporate random effects, model gets prefix mixed. general model latent class mixed multinomial probit model, approximates mixing distribution mixiture normal distributions.","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/RprobitB.html","id":"a-package-overview","dir":"Articles","previous_headings":"","what":"A package overview","title":"Introduction","text":"model defined? prepare simulate choice data? fit model?","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/v01_model_definition.html","id":"the-probit-model","dir":"Articles","previous_headings":"","what":"The probit model","title":"Model definition","text":"probit model2 regression model dependent variable takes finite number values error term normally distributed. [Citation] purpose estimate probability dependent variable takes certain (discrete) value. estimation typically relies set explanatory variables. common application probit models discrete choice scenarios. dependent variable one finitely many mutually exclusive alternatives. Explanatory variables typically characteristics deciders alternatives. concrete, assume possess data \\(N\\) decision makers choose \\(J \\geq 2\\) alternatives3 \\(T\\) choice occasions.4 Specific decision maker, alternative choice occasion, furthermore observe \\(P\\) choice attributes use explain choices. continuous choice attributes linked directly discrete choices must take detour latent variable. discrete choice setting, variable can interpreted decider’s utility. Decider \\(n\\)’s utility \\(\\tilde{U}_{ntj}\\) alternative \\(j\\) choice occasion \\(t\\) modeled \\[\\begin{equation}   \\tilde{U}_{ntj} = \\tilde{x}_{ntj}'\\beta + \\tilde{\\epsilon}_{ntj} \\end{equation}\\] \\(n=1,\\dots,N\\), \\(t=1,\\dots,T\\) \\(j=1,\\dots,J\\), \\(\\tilde{x}_{ntj}\\) vector \\(P\\) characteristics \\(j\\) faced \\(n\\) \\(t\\), \\(\\beta \\{\\mathbb R}^{P}\\) vector linear coefficients, \\((\\tilde{\\epsilon}_{nt:}) = (\\tilde{\\epsilon}_{nt1},\\dots,\\tilde{\\epsilon}_{ntJ})' \\sim \\text{MVN}_{J} (0,\\tilde{\\Sigma})\\) models’ error term vector \\(n\\) \\(t\\), probit model assumed multivariate normally distributed zero mean covariance matrix \\(\\tilde{\\Sigma}\\). Now let \\(y_{nt}=j\\) denote event decision maker \\(n\\) chooses alternative \\(j\\) choice occasion \\(t\\). Assuming utility maximizing behavior decision makers5, decisions linked utilities via \\[\\begin{equation} y_{nt} = \\sum_{j=1}^{J-1} j\\cdot 1 \\left (U_{ntj}=\\max_i U_{nti}>0 \\right) + J \\cdot 1\\left (U_{ntj}<0 ~\\text{}~j\\right), \\end{equation}\\] \\(1()\\) equals \\(1\\) condition \\(\\) true \\(0\\) else.","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/v01_model_definition.html","id":"choice-behavior-heterogeneity","dir":"Articles","previous_headings":"","what":"Choice behavior heterogeneity","title":"Model definition","text":"Note \\(\\beta\\) definition constant across decision makers. assumption restrictive applications. example, consider case modeling choice means transportation work. easily imaginable business people pensioners share sensitivities towards cost time. established way model choice behavior heterogeneity impose distribution \\(\\beta\\) decider can sensitivities. distribution commonly called mixing distribution. Formally allow different specifications, define \\(\\beta = (\\alpha, \\beta_n)\\), \\(\\alpha\\) first \\(P_f\\) coefficients constant across deciders \\(\\beta_n\\) last \\(P_r\\) coefficients decider-specific. Consequently, \\(P = P_f + P_r\\). Now \\(P_r>0\\), \\(\\beta_n\\) distributed according \\(P_r\\)-variate distribution, typically constitute (multivariate) normal distribution.6 Sometimes, even normal mixing distribution flexible enough model underlying choice behavior heterogeneity… RprobitB implemented approach (Oelschläger Bauer 2020) approximate underlying mixing distribution mixture (multivariate) Gaussian densities. precisely, underlying mixing distribution \\(g_{P_r}\\) random coefficients7 \\(\\beta=(\\beta_n)_{n}\\) approximated mixture \\(P_r\\)-variate normal densities \\(\\phi_{P_r}\\) mean vectors \\(b=(b_c)_{c}\\) covariance matrices \\(\\Omega=(\\Omega_c)_{c}\\) using \\(C\\) components, .e. \\[\\begin{equation} \\beta_n\\mid b,\\Omega \\sim \\sum_{c=1}^{C} s_c \\phi_{P_r} (\\cdot \\mid b_c,\\Omega_c), \\end{equation}\\] \\((s_c)_{c}\\) weights satisfying \\(0 < s_c\\leq 1\\) \\(c=1,\\dots,C\\) \\(\\sum_c s_c=1\\). One interpretation latent class model obtained introducing variables \\(z=(z_n)_n\\) allocating decision maker \\(n\\) class \\(c\\) probability \\(s_c\\), .e. \\[\\begin{equation} \\text{Prob}(z_n=c)=s_c \\quad \\text{} \\quad \\beta_n \\mid z,b,\\Omega \\sim \\phi_{P_r}(\\cdot \\mid b_{z_n},\\Omega_{z_n}). \\end{equation}\\] interpretation leads classification deciders based heterogeneous choice behavior.","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/v01_model_definition.html","id":"model-normalization","dir":"Articles","previous_headings":"","what":"Model normalization","title":"Model definition","text":"well known, utility model needs normalized respect level scale order identified (Train 2009). Therefore, consider transformed model \\[\\begin{equation} U_{ntj} = W_{ntj}'\\alpha + X_{ntj}'\\beta_n + \\epsilon_{ntj}, \\end{equation}\\] \\(n=1,\\dots,N\\), \\(t=1,\\dots,T\\) \\(j=1,\\dots,J-1\\), (choosing \\(J\\) reference alternative) \\(U_{ntj}=\\tilde{U}_{ntj} - \\tilde{U}_{ntJ}\\), \\(W_{ntj}=\\tilde{W}_{ntj}-\\tilde{W}_{ntJ}\\), \\(X_{ntj}=\\tilde{X}_{ntj}-\\tilde{X}_{ntJ}\\) \\(\\epsilon_{ntj}=\\tilde{\\epsilon}_{ntj}-\\tilde{\\epsilon}_{ntJ}\\), \\((\\epsilon_{nt:}) = (\\epsilon_{nt1},...,\\epsilon_{nt(J-1)})' \\sim \\text{MVN}_{J-1} (0,\\Sigma)\\) \\(\\Sigma\\) denotes covariance matrix top-left element restricted one.8","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/v01_model_definition.html","id":"model-complexities","dir":"Articles","previous_headings":"","what":"Model complexities","title":"Model definition","text":"call defined model latent class mixed multinomial probit model. Note model collapses (normally) mixed multinomial probit model \\(P_r>0\\) \\(C=1\\), multinomial probit model \\(P_r=0\\) binary probit model additionally \\(J=2\\).","code":""},{"path":[]},{"path":[]},{"path":"https://loelschlaeger.de/RprobitB/articles/v01_model_definition.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Model definition","text":"Oelschläger, Lennart, Dietmar Bauer. 2020. “Bayes Estimation Latent Class Mixed Multinomial Probit Models.” TRB Annual Meeting 2021. Train, Kenneth. 2009. Discrete Choice Methods Simulation. 2. ed. Cambridge Univ. Press.","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/v02_choice_data.html","id":"requirements-to-choice-data","dir":"Articles","previous_headings":"","what":"Requirements to choice data","title":"Choice data","text":"Choice data basically consists identifier decider (optionally choice situation), choices, alternative decider specific covariates. {RprobitB} wants receive choice data following format: must class data.frame. must “wide” format, .e. row represents one choice occasion.2 must contain column unique identifier decision maker. can contain column identifier choice situation decider. information missing, identifier generated automatically appearance choices data set.3 can contain column observed choices. column required model fitting prediction. must contain columns values alternative specific covariate alternative decider specific covariate.","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/v02_choice_data.html","id":"example","dir":"Articles","previous_headings":"Requirements to choice data","what":"Example","title":"Choice data","text":"check Train data set4 fulfills requirements: data frame, row represents one choice occasion, columns id choiceid identify deciders choice occasions, respectively. column choice gives observed choices. see four alternative-specific covariates, namely price, time, change comfort. values given alternative.","code":"data(\"Train\", package = \"mlogit\") str(Train) #> 'data.frame':    2929 obs. of  11 variables: #>  $ id       : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ choiceid : int  1 2 3 4 5 6 7 8 9 10 ... #>  $ choice   : Factor w/ 2 levels \"A\",\"B\": 1 1 1 2 2 2 2 2 1 1 ... #>  $ price_A  : num  2400 2400 2400 4000 2400 4000 2400 2400 4000 2400 ... #>  $ time_A   : num  150 150 115 130 150 115 150 115 115 150 ... #>  $ change_A : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ comfort_A: num  1 1 1 1 1 0 1 1 0 1 ... #>  $ price_B  : num  4000 3200 4000 3200 3200 2400 3200 3200 3200 4000 ... #>  $ time_B   : num  150 130 115 150 150 130 115 150 130 115 ... #>  $ change_B : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ comfort_B: num  1 1 0 0 0 0 1 0 1 0 ..."},{"path":"https://loelschlaeger.de/RprobitB/articles/v02_choice_data.html","id":"the-model-formula","dir":"Articles","previous_headings":"","what":"The model formula","title":"Choice data","text":"inform {RprobitB} covariates want include model via specifying formula object. structure formula object choice ~ | B | C, choice dependent variable (discrete choice aim explain), alternative choice situation specific covariates generic coefficient (call covariates type 1), B choice situation specific covariates alternative specific coefficients (call covariates type 2), C alternative choice situation specific covariates alternative specific coefficients (call covariates type 3). Specifying formula object {RprobitB} must consistent following rules: default, alternative specific constants (ASCs) added model5. can removed adding + 0 second spot, e.g. choice ~ | B + 0. exclude covariates backmost categories, use either 0, e.g. choice ~ | B | 0 just leave part write choice ~ | B. However, exclude covariates front categories, use 0, e.g. choice ~ 0 | B. include one covariate category, use +, e.g. choice ~ A1 + A2 | B. don’t want include covariates second category want estimate alternative specific constants, add 1 second spot, e.g. choice ~ | 1. expression choice ~ | 0 interpreted covariates second category alternative specific constants. impose random effects specific variables, need define character vector re corresponding variable names. random effects alternative specific constants, include \"ASC\" re.","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/v02_choice_data.html","id":"example-1","dir":"Articles","previous_headings":"The model formula","what":"Example","title":"Choice data","text":"specify model formula Train data set. Say want include covariates price, time, comfort change, alternative specific, either type 1 type 3. difference type 1 type 3 former case estimate generic coefficient (.e. coefficient constant across alternatives), whereas latter case estimate alternative specific coefficients. Deciding type 1 type 3 covariates belongs topic model selection, provide separate vignette. now, go type 1 covariates add ASCs: Additionally, specify random effects price time (typically expect heterogeneity ): {RprobitB} provides function check_form() can used check form re correctly interpreted:","code":"form <- choice ~ price + time + comfort + change | 1 re <- c(\"price\",\"time\") check_form(form = form, re = re) #> choice ~ price + time + comfort + change | 1 #> - dependent variable: choice  #> - type 1 covariate(s): price, time, comfort, change  #> - type 2 covariate(s):   #> - type 3 covariate(s):   #> - random effects: price, time  #> - ASC: TRUE"},{"path":"https://loelschlaeger.de/RprobitB/articles/v02_choice_data.html","id":"the-prepare_data-function","dir":"Articles","previous_headings":"","what":"The prepare_data() function","title":"Choice data","text":"model estimation {RprobitB}, empirical choice data set choice_data must pass prepare_data() function: function performs compatibility checks data transformations returns object class RprobitB_data can fed estimation routine mcmc. following arguments optional: re: character vector variable names form random effects. alternatives: may want consider alternatives choice_data. case, can specify character vector alternatives selected names alternatives. specified, choice set defined observed choices. id: character, name column choice_data contains unique identifier decision maker. default \"id\". idc: character, name column choice_data contains unique identifier choice situation given decision maker. Per default, identifier generated appearance choices data set. standardize: character vector variable names form get standardized. Covariates type 1 3 addressed <covariate>_<alternative>. standardize = \"\", covariates get standardized. missing_data: Specifies handle missing entries (NA, NaN, -Inf, Inf) choice_data. following options available: \"complete_cases\", removes rows containing missing entries (default), \"zero_out\", replaces missing entries zero, \"mean\", imputes missing entries covariate mean.","code":"data <- prepare_data(form = form, choice_data = choice_data)"},{"path":"https://loelschlaeger.de/RprobitB/articles/v02_choice_data.html","id":"example-2","dir":"Articles","previous_headings":"The prepare_data() function","what":"Example","title":"Choice data","text":"Let’s prepare Train data set estimation previous specification form re: summary plot methods provide quick data overview:","code":"data <- prepare_data(form = form, choice_data = Train, re = re, id = \"id\", idc = \"choiceid\") summary(data) #> Summary of empirical choice data #>  #> 235 decision makers  #> 5 to 19 choice occasions each  #> 2929 choices in total #>  #> Alternatives #>   frequency #> A      1474 #> B      1455 #>  #> Linear coefficients #>      name    re #> 1 comfort FALSE #> 2  change FALSE #> 3   ASC_A FALSE #> 4   price  TRUE #> 5    time  TRUE plot(data, alpha = 0.8) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"https://loelschlaeger.de/RprobitB/articles/v02_choice_data.html","id":"simulate-choices-using-the-simulate_choices-function","dir":"Articles","previous_headings":"","what":"Simulate choices using the simulate_choices() function","title":"Choice data","text":"simulate_choices function simulates discrete choice data prespecified probit model. Say want simulate choices N deciders T choice occasions6 among J alternatives model formulation form, call function simulate_choices() following optional arguments: re: character vector variable names form random effects. alternatives: character vector length J names choice alternatives. specified, alternatives labeled first J upper-case letters Roman alphabet. covariates: named list covariate values. element must vector length equal number choice occasions named according covariate. Covariates values specified drawn standard normal distribution. standardize: character vector variable names form get standardized, see . seed: Set seed simulation. can specify true parameter values7 adding values alpha, fixed coefficient vector, C, number (greater equal 1) latent classes decision makers, s, vector class weights, b, matrix class means columns, Omega, matrix class covariance matrices columns, Sigma, differenced error term covariance matrix, Sigma_full, full error term covariance matrix, beta, matrix decision-maker specific coefficient vectors, z, class allocation vector.","code":"data <- simulate_choices(form = form, N = N, T = T, J = J)"},{"path":"https://loelschlaeger.de/RprobitB/articles/v02_choice_data.html","id":"example-3","dir":"Articles","previous_headings":"Simulate choices using the simulate_choices() function","what":"Example","title":"Choice data","text":"illustration, simulate data set N = 100 deciders choosing T = 10 choice occasions among J = 2 alternatives bus car: specify form re follows: Finally, may want specify true parameter values. Parameter values specified get randomly drawn. {RprobitB} provides function overview_effects() can used get overview effects parameters can specified. , column re contains booleans indicate whether effect connected random effect. Hence, coefficient vector alpha must length 2, first coefficient income_bus second ASC_bus. matrix b must dimension 3 x C, default C = 1 row 1 3 correspond cost, time_bus, time_car, respectively. exemplary call simulate_choices() looks like follows, summary() method useful overview:","code":"N <- 100 T <- 10 J <- 2 alternatives <- c(\"car\", \"bus\") form <- choice ~ cost | income | time re <- c(\"cost\", \"time\") overview_effects(form = form, re = re, alternatives = alternatives) #>         name    re #> 1 income_bus FALSE #> 2    ASC_bus FALSE #> 3       cost  TRUE #> 4   time_bus  TRUE #> 5   time_car  TRUE data <- simulate_choices(   form = choice ~ cost | income | time,   N = 100,   T = 10,   J = 2,   re = c(\"cost\", \"time\"),   alternatives = c(\"car\", \"bus\"),   seed = 1,   alpha = c(-1,1),   b = matrix(c(-1,-1,-0.5,-1.5,0,-1), ncol = 2),   C = 2 ) summary(data) #> Summary of simulated choice data #>  #> 100 decision makers  #> 10 choice occasions each  #> 1000 choices in total #>  #> Alternatives #>     frequency #> bus       561 #> car       439 #>  #> Linear coefficients #>         name    re #> 1 income_bus FALSE #> 2    ASC_bus FALSE #> 3       cost  TRUE #> 4   time_bus  TRUE #> 5   time_car  TRUE"},{"path":"https://loelschlaeger.de/RprobitB/articles/v02_choice_data.html","id":"train-and-test-data-set","dir":"Articles","previous_headings":"","what":"Train and test data set","title":"Choice data","text":"{RprobitB} provides function train_test() can used split output prepare_data() simulate_choices() train test subset. useful evaluating prediction performance fitted model. example, following code puts 70% deciders data train subsample 30% deciders test subsample: Alternatively, following code puts 2 randomly chosen choice occasions per decider data test subsample, rest goes train subsample:","code":"train_test(data, test_proportion = 0.3, by = \"N\") #> $train #> Simulated data of 700 choices. #>  #> $test #> Simulated data of 300 choices. train_test(data, test_number = 2, by = \"T\", random = TRUE, seed = 1) #> $train #> Simulated data of 800 choices. #>  #> $test #> Simulated data of 200 choices."},{"path":"https://loelschlaeger.de/RprobitB/articles/v02_choice_data.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Choice data","text":"Croissant, Yves. 2020. “Estimation Random Utility Models R: mlogit Package.” Journal Statistical Software 95 (11): 1–41. https://doi.org/10.18637/jss.v095.i11.","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/v03_model_fitting.html","id":"prior-settings","dir":"Articles","previous_headings":"","what":"Prior settings","title":"Model fitting","text":"Bayesian analysis enables impose prior beliefs model parameters. possible either express strong prior knowledge using informative prior distributions express vague knowledge using diffuse prior distributions. RprobitB applies following conjugate priors: \\((s_1,\\dots,s_C)\\sim D_C(\\delta)\\), \\(D_C(\\delta)\\) denotes \\(C\\)-dimensional Dirichlet distribution concentration parameter vector \\(\\delta = (\\delta_1,\\dots,\\delta_C)\\), \\(\\alpha\\sim \\text{MVN}{P_f}(\\psi,\\Psi)\\), \\(b_c \\sim \\text{MVN}{P_r}(\\xi,\\Xi)\\), independent \\(c\\), \\(\\Omega_c \\sim W^{-1}_{P_r}(\\nu,\\Theta)\\), independent \\(c\\), \\(W^{-1}_{P_r}(\\nu,\\Theta)\\) denotes \\(P_r\\)-dimensional inverse Wishart distribution \\(\\nu\\) degrees freedom scale matrix \\(\\Theta\\), \\(\\Sigma \\sim W^{-1}_{J-1}(\\kappa,\\Lambda)\\). Per default, RprobitB applies diffuse prior approach, setting \\(\\delta_1=\\dots=\\delta_C=1\\); \\(\\psi\\) \\(\\xi\\) equal zero vector; \\(\\Psi\\) \\(\\Xi\\) equal identity matrix; \\(\\nu\\) \\(\\kappa\\) equal \\(P_r+2\\) \\(J+1\\), respectively (obtain proper priors); \\(\\Theta\\) \\(\\Lambda\\) equal identity matrix. Alternatively, parameters can chosen based estimation results similar choice settings, resulting informative priors.","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/v03_model_fitting.html","id":"bayes-estimation-of-the-probit-model-via-gibbs-sampling","dir":"Articles","previous_headings":"","what":"Bayes estimation of the probit model via Gibbs sampling","title":"Model fitting","text":"Bayesian analysis (latent class) (mixed) (multinomial) probit model builds upon work (McCulloch Rossi 1994), (Nobile 1998), (Allenby Rossi 1998), (Imai Dyk 2005). key ingredient concept data augmentation, cf. (Albert Chib 1993), treats latent utilities parameters . Conditional latent utilities, multinomial probit model constitutes standard Bayesian linear regression set-, renders drawing posterior distribution feasible without need evaluate likelihood. Gibbs sampling joint posterior distribution latent class mixed multinomial probit model proceeds iteratively drawing updating model parameter conditional parameters. class weights drawn Dirichlet distribution \\[\\begin{equation} (s_1,\\dots,s_C)\\mid \\delta,z \\sim D_C(\\delta_1+m_1,\\dots,\\delta_C+m_C), \\end{equation}\\] \\(c=1,\\dots,C\\), \\(m_c=\\#\\{n:z_n=c\\}\\) denotes current absolute class size. Mind model invariant permutations class labels \\(1,\\dots,C\\). reason, accept update ordering \\(s_1<\\dots<s_C\\) holds, thereby ensuring unique labeling classes. Independently \\(n\\), update allocation variables \\((z_n)_n\\) conditional distribution \\[\\begin{equation} \\text{Prob}(z_n=c\\mid s,\\beta,b,\\Omega )=\\frac{s_c\\phi_{P_r}(\\beta_n\\mid b_c,\\Omega_c)}{\\sum_c s_c\\phi_{P_r}(\\beta_n\\mid b_c,\\Omega_c)}. \\end{equation}\\] class means \\((b_c)_c\\) updated independently \\(c\\) via \\[\\begin{equation} b_c\\mid \\Xi,\\Omega,\\xi,z,\\beta \\sim\\text{MVN}{P_r}\\left( \\mu_{b_c}, \\Sigma_{b_c}  \\right), \\end{equation}\\] \\(\\mu_{b_c}=(\\Xi^{-1}+m_c\\Omega_c^{-1})^{-1}(\\Xi^{-1}\\xi +m_c\\Omega_c^{-1}\\bar{b}_c)\\), \\(\\Sigma_{b_c}=(\\Xi^{-1}+m_c\\Omega_c^{-1})^{-1}\\), \\(\\bar{b}_c=m_c^{-1}\\sum_{n:z_n=c} \\beta_n\\). class covariance matrices \\((\\Omega_c)_c\\) updated independently \\(c\\) via \\[\\begin{equation} \\Omega_c \\mid \\nu,\\Theta,z,\\beta,b \\sim W^{-1}_{P_r}(\\mu_{\\Omega_c},\\Sigma_{\\Omega_c}), \\end{equation}\\] \\(\\mu_{\\Omega_c}=\\nu+m_c\\) \\(\\Sigma_{\\Omega_c}=\\Theta^{-1} + \\sum_{n:z_n=c} (\\beta_n-b_c)(\\beta_n-b_c)'\\). Independently \\(n\\) \\(t\\) conditionally components, utility vectors \\((U_{nt:})\\) follow \\(J-1\\)-dimensional truncated multivariate normal distribution, truncation points determined choices \\(y_{nt}\\). sample truncated multivariate normal distribution, apply sub-Gibbs sampler, following approach : \\[\\begin{equation} U_{ntj} \\mid U_{nt(-j)},y_{nt},\\Sigma,W,\\alpha,X,\\beta  \\sim \\mathcal{N}(\\mu_{U_{ntj}},\\Sigma_{U_{ntj}}) \\cdot \\begin{cases} 1(U_{ntj}>\\max(U_{nt(-j)},0) ) & \\text{}~ y_{nt}=j\\\\ 1(U_{ntj}<\\max(U_{nt(-j)},0) ) & \\text{}~ y_{nt}\\neq j \\end{cases}, \\end{equation}\\] \\(U_{nt(-j)}\\) denotes vector \\((U_{nt:})\\) without element \\(U_{ntj}\\), \\(\\mathcal{N}\\) denotes univariate normal distribution, \\(\\Sigma_{U_{ntj}} = 1/(\\Sigma^{-1})_{jj}\\) \\[\\begin{equation} \\mu_{U_{ntj}} = W_{ntj}'\\alpha + X_{ntj}'\\beta_n - \\Sigma_{U_{ntj}} (\\Sigma^{-1})_{j(-j)}   (U_{nt(-j)} - W_{nt(-j)}'\\alpha - X_{nt(-j)}' \\beta_n ), \\end{equation}\\] \\((\\Sigma^{-1})_{jj}\\) denotes \\((j,j)\\)th element \\(\\Sigma^{-1}\\), \\((\\Sigma^{-1})_{j(-j)}\\) \\(j\\)th row without \\(j\\)th entry, \\(W_{nt(-j)}\\) \\(X_{nt(-j)}\\) coefficient matrices \\(W_{nt}\\) \\(X_{nt}\\), respectively, without \\(j\\)th column. Updating fixed coefficient vector \\(\\alpha\\) achieved applying formula Bayesian linear regression regressors \\(W_{nt}\\) regressands \\((U_{nt:})-X_{nt}'\\beta_n\\), .e. \\[\\begin{equation} \\alpha \\mid \\Psi,\\psi,W,\\Sigma,U,X,\\beta \\sim \\text{MVN}{P_f}(\\mu_\\alpha,\\Sigma_\\alpha), \\end{equation}\\] \\(\\mu_\\alpha = \\Sigma_\\alpha (\\Psi^{-1}\\psi + \\sum_{n=1,t=1}^{N,T} W_{nt} \\Sigma^{-1} ((U_{nt:})-X_{nt}'\\beta_n) )\\) \\(\\Sigma_\\alpha = (\\Psi^{-1} + \\sum_{n=1,t=1}^{N,T} W_{nt}\\Sigma^{-1} W_{nt}^{'} )^{-1}\\). Analogously \\(\\alpha\\), random coefficients \\((\\beta_n)_n\\) updated independently via \\[\\begin{equation} \\beta_n \\mid \\Omega,b,X,\\Sigma,U,W,\\alpha \\sim \\text{MVN}{P_r}(\\mu_{\\beta_n},\\Sigma_{\\beta_n}), \\end{equation}\\] \\(\\mu_{\\beta_n} = \\Sigma_{\\beta_n} (\\Omega_{z_n}^{-1}b_{z_n} + \\sum_{t=1}^{T} X_{nt} \\Sigma^{-1} (U_{nt}-W_{nt}'\\alpha) )\\) \\(\\Sigma_{\\beta_n} = (\\Omega_{z_n}^{-1} + \\sum_{t=1}^{T} X_{nt}\\Sigma^{-1} X_{nt}^{'} )^{-1}\\) . error term covariance matrix \\(\\Sigma\\) updated means \\[\\begin{equation} \\Sigma \\mid \\kappa,\\Lambda,U,W,\\alpha,X,\\beta \\sim W^{-1}_{J-1}(\\kappa+NT,\\Lambda+S), \\\\ \\end{equation}\\] \\(S = \\sum_{n=1,t=1}^{N,T} \\varepsilon_{nt} \\varepsilon_{nt}'\\) \\(\\varepsilon_{nt} = (U_{nt:}) - W_{nt}'\\alpha - X_{nt}'\\beta_n\\).","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/v03_model_fitting.html","id":"parameter-normalization","dir":"Articles","previous_headings":"","what":"Parameter normalization","title":"Model fitting","text":"Samples obtained scheme described still lack identification (see introductory vignette). Therefore, subsequent sampling, normalizations \\(\\alpha^{()}/\\sqrt{(\\Sigma^{()})_{11}}\\), \\(b_c^{()}/\\sqrt{(\\Sigma^{()})_{11}}\\), \\(\\Omega_c^{()}/(\\Sigma^{()})_{11}\\), \\(c=1,\\dots,C\\) \\(\\Sigma^{()}/(\\Sigma^{()})_{11}\\) required \\(\\)th updates iterations \\(\\), cf. (Imai Dyk 2005), \\((\\Sigma^{()})_{11}\\) denotes top-left element \\(\\Sigma^{()}\\). draws \\(s\\) \\(z\\) need normalized. draws \\(U\\) \\(\\beta\\) normalized results interest analysis. Alternatively, samples can normalized variance \\(\\Sigma\\) element \\(\\alpha\\) equals fixed non-negative value. normalization fitted model can changed afterwards via model output mcmc() scale named list three elements, determining parameter normalization, described .","code":"model <- transform(model, scale = scale)"},{"path":"https://loelschlaeger.de/RprobitB/articles/v03_model_fitting.html","id":"burning-and-thinning","dir":"Articles","previous_headings":"","what":"Burning and thinning","title":"Model fitting","text":"theory behind Gibbs sampling constitutes sequence samples produced updating scheme can considered Markov chain stationary distribution equal desired joint posterior distribution. takes certain number iterations stationary distribution approximated reasonably well. Therefore, common practice discard first \\(B\\) \\(R\\) samples (-called burn-period). Furthermore, correlation nearby samples expected. order obtain independent samples, consider every \\(Q\\)th sample averaging values compute parameter statistics like expectation standard deviation. Adequate values \\(R\\), \\(B\\) \\(Q\\) depend complexity considered Bayesian framework. Per default, RprobitB sets R = 1e4, B = R/2 Q = 10. independence samples can verified computing serial correlation convergence Gibbs sampler can checked considering trace plots.","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/v03_model_fitting.html","id":"updating-the-number-of-latent-classes","dir":"Articles","previous_headings":"","what":"Updating the number of latent classes","title":"Model fitting","text":"Updating number \\(C\\) latent classes done within Gibbs sampler executing following weight-based updating scheme within second half burn-period2: remove class \\(c\\), \\(s_c<\\varepsilon_{\\text{min}}\\), .e. class weight \\(s_c\\) drops threshold \\(\\varepsilon_{\\text{min}}\\). case indicates class \\(c\\) negligible impact mixing distribution. split class \\(c\\) two classes \\(c_1\\) \\(c_2\\), \\(s_c>\\varepsilon_\\text{max}\\). case indicates class \\(c\\) high influence mixing distribution whose approximation can potentially improved increasing resolution directions high variance. Therefore, class means \\(b_{c_1}\\) \\(b_{c_2}\\) new classes \\(c_1\\) \\(c_2\\) shifted opposite directions class mean \\(b_c\\) old class \\(c\\) direction highest variance. join two classes \\(c_1\\) \\(c_2\\) one class \\(c\\), \\(\\lVert b_{c_1} - b_{c_2} \\rVert<\\varepsilon_{\\text{distmin}}\\), .e. euclidean distance class means \\(b_{c_1}\\) \\(b_{c_2}\\) drops threshold \\(\\varepsilon_{\\text{distmin}}\\). case indicates location redundancy repealed. parameters \\(c\\) assigned adding values \\(s\\) \\(c_1\\) \\(c_2\\) averaging values \\(b\\) \\(\\Omega\\). rules contain choices values \\(\\varepsilon_{\\text{min}}\\), \\(\\varepsilon_{\\text{max}}\\) \\(\\varepsilon_{\\text{distmin}}\\). adequate value \\(\\varepsilon_{\\text{distmin}}\\) depends scale parameters. Per default, RprobitB sets epsmin = 0.01, epsmax = 0.99, distmin = 0.1.","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/v03_model_fitting.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Model fitting","text":"","code":"### probit model p = simulate(form = choice ~ var | 0, N = 100, T = 10, J = 2) m1 = mcmc(data = p) ### multinomial probit model mnp = simulate(form = choice ~ var | 0, N = 100, T = 10, J = 3) m2 = mcmc(data = mnp) ### mixed multinomial probit model mmnp = simulate(form = choice ~ 0 | var, N = 100, T = 10, J = 3, re = \"var\") m3 = mcmc(data = mmnp) ### latent classes mixed multinomial probit model lcmmnp = simulate(form = choice ~ 0 | var, N = 100, T = 10, J = 3, re = \"var\",                   parm = list(\"C\" = 2)) m4 = mcmc(data = lcmmnp, latent_classes = list(\"C\" = 2)) ### update of latent classes m5 = mcmc(data = lcmmnp, latent_classes = list(\"update\" = TRUE))"},{"path":"https://loelschlaeger.de/RprobitB/articles/v03_model_fitting.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Model fitting","text":"Albert, James H., Siddhartha Chib. 1993. “Bayesian Analysis Binary Polychotomous Response Data.” Journal American Statistical Association 88. Allenby, Greg M., Peter Rossi. 1998. “Marketing Models Consumer Heterogeneity.” Journal Econometrics 89. Imai, Kosuke, David . van Dyk. 2005. “Bayesian Analysis Multinomial Probit Model Using Marginal Data Augmentation.” Journal Econometrics 124. McCulloch, Robert, Peter Rossi. 1994. “Exact Likelihood Analysis Multinomial Probit Model.” Journal Econometrics 64. Nobile, Agostino. 1998. “Hybrid Markov Chain Bayesian Analysis Multinomial Probit Model.” Statistics Computing 8.","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/v04_model_selection.html","id":"model-selection-with-the-model_selection-function","dir":"Articles","previous_headings":"","what":"Model selection with the model_selection() function","title":"Model selection","text":"RprobitB provides function called model_selection() guides process model selection. input function takes arbitrary number RprobitB_model objects. illustration, fit three different models increasing complexity Train dataset mlogit package. model_selection() function returns following information: output explained detail .","code":"data(\"Train\", package = \"mlogit\")  ### Using only the alternative's price as covariate d1 <- prepare_data(   form = choice ~ price,   choice_data = Train ) m1 <- mcmc(d1, print_progress = FALSE)  ### Using all available covariates d2 <- prepare_data(   form = choice ~ price | 0 | time + comfort + change,   choice_data = Train ) m2 <- mcmc(d2, print_progress = FALSE)  ### We additionally impose a mixing distribution on the price coefficient d3 <- prepare_data(   form = choice ~ price | 0 | time + comfort + change,   choice_data = Train,    re = \"price\" ) m3 <- mcmc(d3, print_progress = FALSE) model_selection(m1, m2, m3)"},{"path":[]},{"path":"https://loelschlaeger.de/RprobitB/articles/v04_model_selection.html","id":"npar","dir":"Articles","previous_headings":"Information criteria","what":"npar","title":"Model selection","text":"Simply number estimated model parameters.","code":""},{"path":"https://loelschlaeger.de/RprobitB/articles/v04_model_selection.html","id":"ll","dir":"Articles","previous_headings":"Information criteria","what":"LL","title":"Model selection","text":"model’s log-likelihood value estimated parameters.","code":""},{"path":[]},{"path":[]},{"path":"https://loelschlaeger.de/RprobitB/articles/v04_model_selection.html","id":"waic","dir":"Articles","previous_headings":"Information criteria","what":"WAIC","title":"Model selection","text":"WAIC short Widely Applicable (Watanabe-Akaike) Information Criterion. AIC BIC, smaller WAIC value better model. definition \\[\\text{WAIC} = -2 ( \\text{lppd} - p_\\text{WAIC} ),\\] \\(\\text{lppd}\\) stands log pointwise predictive density \\(p_\\text{WAIC}\\) penalty term proportional variance posterior distribution sometimes called effective number parameters, see McElreath (2020) page 220. \\(\\text{lppd}\\) computed follows. Let \\[p_{} = \\Pr(y_i\\mid \\theta_s)\\] probability observation \\(y_i\\) given \\(s\\)-th set \\(\\theta_s\\) parameter samples posterior. \\[\\text{lppd} = \\sum_i \\log S^{-1} \\sum_s p_{si}.\\] penalty term computed sum variances log-probability observation: \\[p_\\text{WAIC} = \\sum_i \\mathbb{V}_{\\theta} \\left[ \\log p_{si} \\right]. \\] Since calculation \\(\\text{WAIC}\\) pointwise \\(n\\) observations \\(y_i\\), (approximate) standard error \\(\\text{SE}\\), computed \\[\\text{SE} = \\sqrt{n \\cdot \\mathbb{V}_i \\left[-2 \\left(\\text{lppd} - \\mathbb{V}_{\\theta} \\left[ \\log p_{si} \\right] \\right)\\right]}.\\] internal function waic() provides components given RprobitB_model object.","code":""},{"path":[]},{"path":[]},{"path":"https://loelschlaeger.de/RprobitB/articles/v04_model_selection.html","id":"likelihood-ratio-test","dir":"Articles","previous_headings":"","what":"Likelihood ratio test","title":"Model selection","text":"McElreath, Richard. 2020. Statistical Rethinking: Bayesian Course Examples R Stan. 2. ed. Chapman; Hall/CRC.","code":""},{"path":"https://loelschlaeger.de/RprobitB/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lennart Oelschläger. Author, maintainer. Dietmar Bauer. Author. Sebastian Büscher. Contributor. Manuel Batram. Contributor.","code":""},{"path":"https://loelschlaeger.de/RprobitB/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Oelschläger L, Bauer D (2022). RprobitB: Bayes Estimation Mixed Multinomial Probit Models. R package version 1.0.0.9000, https://loelschlaeger.de/RprobitB/.","code":"@Manual{,   title = {RprobitB: Bayes Estimation of Mixed Multinomial Probit Models},   author = {Lennart Oelschläger and Dietmar Bauer},   year = {2022},   note = {R package version 1.0.0.9000},   url = {https://loelschlaeger.de/RprobitB/}, }"},{"path":"https://loelschlaeger.de/RprobitB/index.html","id":"rprobitb-","dir":"","previous_headings":"","what":"Probit models for choice data","title":"Probit models for choice data","text":"goal RprobitB fit mixed probit models choice data. package differs comparable packages two ways: Bayesian estimation focus taste heterogeneity.","code":""},{"path":"https://loelschlaeger.de/RprobitB/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Probit models for choice data","text":"can install released version RprobitB CRAN : development version GitHub :","code":"install.packages(\"RprobitB\") # install.packages(\"devtools\") devtools::install_github(\"loelschlaeger/RprobitB\")"},{"path":"https://loelschlaeger.de/RprobitB/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Probit models for choice data","text":"package documented several vignettes:","code":"browseVignettes(\"RprobitB\")"},{"path":"https://loelschlaeger.de/RprobitB/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Probit models for choice data","text":"basic example show fit mixed probit model make choice predictions: First, load package. , prepare choice data, example Train dataset mlogit package. split dataset train (70%) test subset (30%). Call mcmc function estimate model. summary method gives overview estimates. Let’s visualize estimated mixture distribution price coefficient.  predict function makes choice predictions compares prediction actual choices.","code":"library(RprobitB) #> Thanks for using RprobitB 1.0.0.9000, happy choice modeling! #> See https://loelschlaeger.de/RprobitB for help. #> Type 'citation(\"RprobitB\")' for citing this R package. data(\"Train\", package = \"mlogit\") data <- prepare_data(   form = choice ~ price | 0 | time + comfort + change,   choice_data = Train,   re = \"price\",   standardize = \"all\") data <- train_test(data, test_proportion = 0.3) model <- mcmc(data$train) #> Iteration Info                   ETA (min) #>         0 started Gibbs sampling           #>      1000                                2 #>      2000                                2 #>      3000                                2 #>      4000                                2 #>      5000                                1 #>      6000                                1 #>      7000                                1 #>      8000                                1 #>      9000                                1 #>     10000 done, total time: 2 min summary(model) #> Probit model 'choice ~ price | 0 | time + comfort + change'. #>  #> MCMC settings: #> - R: 10000  #> - B: 5000  #> - Q: 1  #>  #> Normalization: #> - Level: Utility differences with respect to alternative 2. #> - Scale: Coefficient of the 1. error term variance in Sigma fixed to 1. #>  #> Legend of alternatives: #>   name #> 1    A #> 2    B #>  #> Legend of linear coefficients: #>        name    re #> 1    time_A FALSE #> 2    time_B FALSE #> 3 comfort_A FALSE #> 4 comfort_B FALSE #> 5  change_A FALSE #> 6  change_B FALSE #> 7     price  TRUE #>  #> Latent classes: 1  #> - Update: FALSE  #>  #> Parameter statistics: #>           mean      sd      R^ #>  alpha #>                                #>      1   -0.82    0.08    1.02 #>      2   -0.85    0.08    1.01 #>      3   -0.52    0.05    1.01 #>      4   -0.50    0.05    1.00 #>      5   -0.26    0.05    1.01 #>      6   -0.21    0.05    1.00 #>  #>  s #>                                #>      1    1.00    0.00     NaN #>  #>  b #>                                #>    1.1   -2.19    0.26    1.02 #>  #>  Omega #>                                #>  1.1,1    3.10    0.87    1.01 #>  #>  Sigma #>                                #>    1,1    1.00    0.00    1.00 plot(model, type = \"mixture\") predict(model, data$test) #>     predicted #> true   A   B #>    A 299 127 #>    B 144 304"},{"path":"https://loelschlaeger.de/RprobitB/reference/R_hat.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Gelman-Rubin statistic — R_hat","title":"Compute Gelman-Rubin statistic — R_hat","text":"function computes Gelman-Rubin statistic R_hat.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/R_hat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Gelman-Rubin statistic — R_hat","text":"","code":"R_hat(samples, parts = 2)"},{"path":"https://loelschlaeger.de/RprobitB/reference/R_hat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Gelman-Rubin statistic — R_hat","text":"samples vector matrix samples Markov chain, e.g. Gibbs samples. samples matrix, column gives samples separate run. parts number parts divide chain sub-chains.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/R_hat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Gelman-Rubin statistic — R_hat","text":"Gelman-Rubin statistic.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/R_hat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute Gelman-Rubin statistic — R_hat","text":"https://bookdown.org/rdpeng/advstatcomp/monitoring-convergence.html","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/R_hat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Gelman-Rubin statistic — R_hat","text":"","code":"no_chains <- 2 length_chains <- 1e3 samples <- matrix(NA, length_chains, no_chains) samples[1, ] <- 1 Gamma <- matrix(c(0.8, 0.1, 0.2, 0.9), 2, 2) for (c in 1:no_chains) {   for (t in 2:length_chains) {     samples[t, c] <- sample(1:2, 1, prob = Gamma[samples[t - 1, c], ])   } } R_hat(samples) #> [1] 1.016738"},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB.html","id":null,"dir":"Reference","previous_headings":"","what":"fHMM: A package for Bayes estimation of multinomial Probit models — RprobitB","title":"fHMM: A package for Bayes estimation of multinomial Probit models — RprobitB","text":"package provides tools Bayes estimation multinomial Probit models.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create object of class RprobitB_data. — RprobitB_data","title":"Create object of class RprobitB_data. — RprobitB_data","text":"function creates object class RprobitB_data.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create object of class RprobitB_data. — RprobitB_data","text":"","code":"RprobitB_data(   data,   choice_data,   N,   T,   J,   P_f,   P_r,   alternatives,   form,   re,   ASC,   linear_coeffs,   standardize,   simulated,   choice_available,   true_parameter,   res_var_names )"},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create object of class RprobitB_data. — RprobitB_data","text":"data list choice data. list N elements. element list two elements, X y, covariates decisions decision maker. precisely, X list T elements, element matrix dimension Jx(P_f+P_r) contains characteristics one choice occasion. y vector length T contains labels chosen alternatives. choice_data data frame choice data following requirements: must \"wide\" format, .e. row represents one choice occasion. must contain column named id contains unique identifier decision maker. can contain column named idc contains unique identifier choice situation decision maker. information missing, identifier generated automatically appearance choices data set. can contain column named choice observed choices, choice must match name dependent variable form. column required model fitting prediction. must contain column named p_j alternative specific covariate p form choice alternative j alternatives. must contain column named q covariate q form constant across alternatives. N number (greater equal 1) decision makers. T number (greater equal 1) choice occasions vector choice occasions length N (.e. decision maker specific number). J number (greater equal 2) choice alternatives. P_f number covariates connected fixed coefficient (can 0). P_r number covariates connected random coefficient (can 0). alternatives character vector names choice alternatives. specified, choice set defined observed choices. form formula object used specify probit model. structure choice ~ | B | C, names alternative choice situation specific covariates generic coefficient, B names choice situation specific covariates alternative specific coefficients, C names alternative choice situation specific covariates alternative specific coefficients. Separate multiple covariates one type + sign. default, alternative specific constants (ASCs) added model (except last alternative). can removed adding +0 second spot. See vignette vignette(\"data_management\", package = \"RprobitB\") details. re character (vector) covariates form random effects. re = NULL (default), random effects. random effects alternative specific constants, include \"ASC\" re. ASC boolean, determining whether model ASCs. linear_coeffs data frame coefficient names booleans indicating whether connected random effects. standardize character vector names covariates get standardized. Covariates type 1 3 addressed <covariate>_<alternative>. standardize = \"\", covariates get standardized. simulated boolean, TRUE data simulated, otherwise data empirical. choice_available boolean, TRUE data contains observed choices. true_parameter object class RprobitB_parameters. res_var_names names list reserved variable names choice_data.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create object of class RprobitB_data. — RprobitB_data","text":"object class RprobitB_data arguments function elements.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Create object of class RprobitB_fit. — RprobitB_fit","title":"Create object of class RprobitB_fit. — RprobitB_fit","text":"function creates object class RprobitB_fit.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create object of class RprobitB_fit. — RprobitB_fit","text":"","code":"RprobitB_fit(   data,   normalization,   R,   B,   Q,   latent_classes,   prior,   gibbs_samples,   class_sequence )"},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create object of class RprobitB_fit. — RprobitB_fit","text":"data object class RprobitB_data. normalization object class RprobitB_normalization. R number iterations Gibbs sampler. B length burn-period, .e. non-negative number samples discarded. Q thinning factor Gibbs samples, .e. every Qth sample kept. latent_classes Either NULL (latent classes) list parameters specifying number latent classes updating scheme: C: fixed number (greater equal 1) latent classes, set 1 per default. either weight_update = TRUE dp_update = TRUE (.e. classes updated), C equals initial number latent classes. weight_update: boolean, set TRUE weight-based update latent classes. See ... details. dp_update: boolean, set TRUE update latent classes based Dirichlet process. See ... details. Cmax: maximum number latent classes. buffer: number iterations wait next weight-based update latent classes. epsmin: threshold weight (0 1) removing latent class weight-based updating scheme. epsmax: threshold weight (0 1) splitting latent class weight-based updating scheme. distmin: (non-negative) threshold difference class means joining two latent classes weight-based updating scheme. prior named list parameters prior distributions. See documentation check_prior details parameters can specified. gibbs_samples object class RprobitB_gibbs_samples. class_sequence sequence class numbers Gibbs sampling length R.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create object of class RprobitB_fit. — RprobitB_fit","text":"object class RprobitB_fit, .e. list arguments function elements.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_gibbs_samples_statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Create object of class RprobitB_gibbs_samples_statistics — RprobitB_gibbs_samples_statistics","title":"Create object of class RprobitB_gibbs_samples_statistics — RprobitB_gibbs_samples_statistics","text":"function creates object class RprobitB_gibbs_samples_statistics.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_gibbs_samples_statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create object of class RprobitB_gibbs_samples_statistics — RprobitB_gibbs_samples_statistics","text":"","code":"RprobitB_gibbs_samples_statistics(gibbs_samples, FUN)"},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_gibbs_samples_statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create object of class RprobitB_gibbs_samples_statistics — RprobitB_gibbs_samples_statistics","text":"gibbs_samples object class RprobitB_gibbs_samples. FUN (preferably named) list functions compute parameter statistics Gibbs samples, .e. mean mean, sd standard deviation, min minimum, max maximum, median median, function(x) quantile(x, p) pth quantile, R_hat Gelman-Rubin statistic.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_gibbs_samples_statistics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create object of class RprobitB_gibbs_samples_statistics — RprobitB_gibbs_samples_statistics","text":"object class RprobitB_gibbs_samples_statistics, list statistics gibbs_samples obtained applying elements FUN.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_latent_classes.html","id":null,"dir":"Reference","previous_headings":"","what":"Create object of class RprobitB_latent_classes. — RprobitB_latent_classes","title":"Create object of class RprobitB_latent_classes. — RprobitB_latent_classes","text":"function creates object class RprobitB_latent_classes can passed mcmc determine number latent classes updating scheme. RprobitB_latent_classes-object generated function relevance model possesses least one random coefficient, .e. P_r>0.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_latent_classes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create object of class RprobitB_latent_classes. — RprobitB_latent_classes","text":"","code":"RprobitB_latent_classes(latent_classes = NULL)"},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_latent_classes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create object of class RprobitB_latent_classes. — RprobitB_latent_classes","text":"latent_classes Either NULL (latent classes) list parameters specifying number latent classes updating scheme: C: fixed number (greater equal 1) latent classes, set 1 per default. either weight_update = TRUE dp_update = TRUE (.e. classes updated), C equals initial number latent classes. weight_update: boolean, set TRUE weight-based update latent classes. See ... details. dp_update: boolean, set TRUE update latent classes based Dirichlet process. See ... details. Cmax: maximum number latent classes. buffer: number iterations wait next weight-based update latent classes. epsmin: threshold weight (0 1) removing latent class weight-based updating scheme. epsmax: threshold weight (0 1) splitting latent class weight-based updating scheme. distmin: (non-negative) threshold difference class means joining two latent classes weight-based updating scheme.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_latent_classes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create object of class RprobitB_latent_classes. — RprobitB_latent_classes","text":"object class RprobitB_latent_classes.","code":""},{"path":[]},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_latent_classes.html","id":"why-update-latent-classes-","dir":"Reference","previous_headings":"","what":"Why update latent classes?","title":"Create object of class RprobitB_latent_classes. — RprobitB_latent_classes","text":"order specify number latent classes estimation.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_latent_classes.html","id":"what-options-to-update-latent-classes-exist-","dir":"Reference","previous_headings":"","what":"What options to update latent classes exist?","title":"Create object of class RprobitB_latent_classes. — RprobitB_latent_classes","text":"Currently two updating schemes implemented, weight-based (see ...) via Dirichlet process (see ...).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_latent_classes.html","id":"what-is-the-default-behaviour-","dir":"Reference","previous_headings":"","what":"What is the default behaviour?","title":"Create object of class RprobitB_latent_classes. — RprobitB_latent_classes","text":"One latent class without updates specified per default. Print RprobitB_latent_classes-object see summary relevant (default) parameter settings.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_latent_classes.html","id":"why-is-cmax-required-","dir":"Reference","previous_headings":"","what":"Why is Cmax required?","title":"Create object of class RprobitB_latent_classes. — RprobitB_latent_classes","text":"implementation requires upper bound number latent classes saving Gibbs samples. However, restriction since number latent classes bounded number deciders case. function ... visualizes sequence class numbers estimation can used check Cmax reached.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_latent_classes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create object of class RprobitB_latent_classes. — RprobitB_latent_classes","text":"","code":"### default setting RprobitB:::RprobitB_latent_classes() #> Number of latent classes: 1   ### setting for a fixed number of two latent classes RprobitB:::RprobitB_latent_classes(list(C = 2)) #> Number of latent classes: 2   ### setting for weight-based on Dirichlet process-based updates RprobitB:::RprobitB_latent_classes(list(\"weight_update\" = TRUE,                                         \"dp_update\" = TRUE)) #> DP-based update: TRUE  #> Weight-based update: TRUE  #> - Initial classes: 1  #> - Maximum classes: 10  #> - Updating buffer: 100  #> - Minimum class weight: 0.01  #> - Maximum class weight: 0.99  #> - Mimumum class distance: 0.1"},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_normalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Create object of class RprobitB_normalization — RprobitB_normalization","title":"Create object of class RprobitB_normalization — RprobitB_normalization","text":"function creates object class RprobitB_normalization.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_normalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create object of class RprobitB_normalization — RprobitB_normalization","text":"","code":"RprobitB_normalization(   J,   P_f,   level = J,   scale = list(parameter = \"s\", index = 1, value = 1) )"},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_normalization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create object of class RprobitB_normalization — RprobitB_normalization","text":"J number (greater equal 2) choice alternatives. P_f number covariates connected fixed coefficient (can 0). level number alternative respect utility differences computed. Currently, level = J (.e. utility differences respect last alternative) implemented. scale named list three elements, determining parameter normalization respect utility scale: parameter: Either \"\" (linear coefficient \"alpha\") \"s\" (variance error-term covariance matrix \"Sigma\"). index: index parameter gets fixed. value: value fixed parameter.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_normalization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create object of class RprobitB_normalization — RprobitB_normalization","text":"object class RprobitB_normalization, list elements level scale.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_normalization.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create object of class RprobitB_normalization — RprobitB_normalization","text":"choice model normalized respect level scale. level normalization, RprobitB takes utility differences respect one alternative. scale normalization, RprobitB fixes model parameter. Per default, first error-term variance fixed 1, .e. scale = list(\"parameter\" = \"s\", \"index\" = 1, \"value\" = 1). Alternatively, error-term variance non-random linear coefficient can fixed.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_normalization.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create object of class RprobitB_normalization — RprobitB_normalization","text":"","code":"RprobitB:::RprobitB_normalization(   J = 2, P_f = 1, level = 2, scale = list(\"parameter\" = \"s\", \"index\" = 1, \"value\" = 1) ) #> Normalization: #> - Level: Utility differences with respect to alternative 2. #> - Scale: Coefficient of the 1. error term variance in Sigma fixed to 1."},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Create object of class RprobitB_parameter. — RprobitB_parameter","title":"Create object of class RprobitB_parameter. — RprobitB_parameter","text":"function creates object class RprobitB_parameter. sample = TRUE, missing parameters sampled. parameters checked values P_f, P_r, J, N.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create object of class RprobitB_parameter. — RprobitB_parameter","text":"","code":"RprobitB_parameter(   P_f,   P_r,   J,   N,   alpha = NULL,   C = NULL,   s = NULL,   b = NULL,   Omega = NULL,   Sigma = NULL,   Sigma_full = NULL,   beta = NULL,   z = NULL,   seed = NULL,   sample = TRUE )"},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create object of class RprobitB_parameter. — RprobitB_parameter","text":"P_f number covariates connected fixed coefficient (can 0). P_r number covariates connected random coefficient (can 0). J number (greater equal 2) choice alternatives. N number (greater equal 1) decision makers. alpha fixed coefficient vector length P_f. Set NA P_f = 0. C number (greater equal 1) latent classes decision makers. Set NA P_r = 0. Otherwise, C = 1 per default. s vector class weights length C. Set NA P_r = 0. identifiability, vector must non-ascending. b matrix class means columns dimension P_r x C. Set NA P_r = 0. Omega matrix class covariance matrices columns dimension P_r*P_r x C. Set NA P_r = 0. Sigma differenced error term covariance matrix dimension J-1 x J-1 respect alternative J. Sigma_full error term covariance matrix dimension J x J. Internally, Sigma_full gets differenced respect alternative J, becomes identified covariance matrix dimension J-1 x J-1. Sigma specified, Sigma_full ignored. beta matrix decision-maker specific coefficient vectors dimension P_r x N. Set NA P_r = 0. z vector allocation variables length N. Set NA P_r = 0. seed Set seed sampling missing parameters. sample boolean, TRUE missing parameters get sampled.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/RprobitB_parameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create object of class RprobitB_parameter. — RprobitB_parameter","text":"object class RprobitB_parameter, .e. named list model parameters alpha, C, s, b, Omega, Sigma, Sigma_full, beta, z.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/berserk_choice.html","id":null,"dir":"Reference","previous_headings":"","what":"Choice of berserking — berserk_choice","title":"Choice of berserking — berserk_choice","text":"dataset includes binary berserking choice participants yearly bullet arena online chess platform https://lichess.org. tournament startet 2022-01-10 17:00:25 lasted 240 minutes.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/berserk_choice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Choice of berserking — berserk_choice","text":"","code":"data(berserk_choice)"},{"path":"https://loelschlaeger.de/RprobitB/reference/berserk_choice.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Choice of berserking — berserk_choice","text":"data frame containing berserking choices White Black player 65811 bullet (1+0) games. consists following columns: id_white id_black, unique lichess usernames White Black players game, rating_white rating_black, player's lichess bullet rating start game, berserk_white berserk_black, boolean whether players berserked, winner, winner game, either 'white', 'black' 'draw', minutes_remaining, number minutes left tournament, game_id, game's id lichess (game can accessed via https://lichess.org/<game_id>).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/berserk_choice.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Choice of berserking — berserk_choice","text":"data obtained via lichess API https://lichess.org/api tournament id 'RibHfoX6' 2022-01-25.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/berserk_choice.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Choice of berserking — berserk_choice","text":"'berserk' feature online chess platform https://lichess.org. game starts, player can click 'berserk' button, lose half clock time, win worth one extra tournament point. See https://lichess.org/tournament/help?system=arena information.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/check_form.html","id":null,"dir":"Reference","previous_headings":"","what":"Check form. — check_form","title":"Check form. — check_form","text":"function checks input form.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/check_form.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check form. — check_form","text":"","code":"check_form(form, re = NULL)"},{"path":"https://loelschlaeger.de/RprobitB/reference/check_form.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check form. — check_form","text":"form formula object used specify probit model. structure choice ~ | B | C, names alternative choice situation specific covariates generic coefficient, B names choice situation specific covariates alternative specific coefficients, C names alternative choice situation specific covariates alternative specific coefficients. Separate multiple covariates one type + sign. default, alternative specific constants (ASCs) added model (except last alternative). can removed adding +0 second spot. See vignette vignette(\"data_management\", package = \"RprobitB\") details. re character (vector) covariates form random effects. re = NULL (default), random effects. random effects alternative specific constants, include \"ASC\" re.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/check_form.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check form. — check_form","text":"object class RprobitB_formula, list contains following elements: form: input form. choice: dependent variable form. re: input re, covariates part form removed. vars: list three character vectors covariate names three covariate types. ASC: boolean, determining whether model ASCs.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/check_form.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check form. — check_form","text":"","code":"form <- choice ~ price + time + comfort + change | 1 re <- re <- c(\"price\", \"time\") check_form(form = form, re = re) #> choice ~ price + time + comfort + change | 1 #> <environment: 0x7fc28297e7d0> #> - dependent variable: choice  #> - type 1 covariate(s): price, time, comfort, change  #> - type 2 covariate(s):   #> - type 3 covariate(s):   #> - random effects: price, time  #> - ASC: TRUE"},{"path":"https://loelschlaeger.de/RprobitB/reference/check_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Check prior parameters — check_prior","title":"Check prior parameters — check_prior","text":"function checks compatibility submitted parameters prior distributions sets missing values default values.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/check_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check prior parameters — check_prior","text":"","code":"check_prior(   P_f,   P_r,   J,   eta = numeric(P_f),   Psi = diag(P_f),   delta = 1,   xi = numeric(P_r),   D = diag(P_r),   nu = P_r + 2,   Theta = diag(P_r),   kappa = J + 1,   E = diag(J - 1) )"},{"path":"https://loelschlaeger.de/RprobitB/reference/check_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check prior parameters — check_prior","text":"P_f number covariates connected fixed coefficient (can 0). P_r number covariates connected random coefficient (can 0). J number (greater equal 2) choice alternatives. eta mean vector length P_f normal prior alpha. Psi covariance matrix dimension P_f x P_f normal prior alpha. delta numeric concentration parameter vector rep(delta,C) Dirichlet prior s. xi mean vector length P_r normal prior b_c. D covariance matrix dimension P_r x P_r normal prior b_c. nu degrees freedom (natural number greater P_r) Inverse Wishart prior Omega_c. Theta scale matrix dimension P_r x P_r Inverse Wishart prior Omega_c. kappa degrees freedom (natural number greater J-1) Inverse Wishart prior Sigma. E scale matrix dimension J-1 x J-1 Inverse Wishart prior Sigma.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/check_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check prior parameters — check_prior","text":"list containing prior parameters. Parameters relevant model configuration set NA.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/check_prior.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check prior parameters — check_prior","text":"priori, assume model parameters follow distributions: \\(\\alpha \\sim N(\\eta, \\Psi)\\) \\(s \\sim Dir(\\delta)\\) \\(b_c \\sim N(\\xi, D)\\) classes \\(c\\) \\(\\Omega_c \\sim IW(\\nu,\\Theta)\\) classes \\(c\\) \\(\\Sigma \\sim IW(\\kappa,E)\\) \\(N\\) denotes normal, \\(Dir\\) Dirichlet, \\(IW\\) Inverted Wishart distribution.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/check_prior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check prior parameters — check_prior","text":"","code":"check_prior(P_f = 1, P_r = 2, J = 3) #> $eta #> [1] 0 #>  #> $Psi #>      [,1] #> [1,]    1 #>  #> $delta #> [1] 1 #>  #> $xi #> [1] 0 0 #>  #> $D #>      [,1] [,2] #> [1,]    1    0 #> [2,]    0    1 #>  #> $nu #> [1] 4 #>  #> $Theta #>      [,1] [,2] #> [1,]    1    0 #> [2,]    0    1 #>  #> $kappa #> [1] 4 #>  #> $E #>      [,1] [,2] #> [1,]    1    0 #> [2,]    0    1 #>  #> attr(,\"class\") #> [1] \"RprobitB_prior\""},{"path":"https://loelschlaeger.de/RprobitB/reference/choice_probabilities.html","id":null,"dir":"Reference","previous_headings":"","what":"Return choice probabilities of an RprobitB_fit. — choice_probabilities","title":"Return choice probabilities of an RprobitB_fit. — choice_probabilities","text":"function returns choice probabilities RprobitB_fit.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/choice_probabilities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return choice probabilities of an RprobitB_fit. — choice_probabilities","text":"","code":"choice_probabilities(x, data = NULL, par_set = mean)"},{"path":"https://loelschlaeger.de/RprobitB/reference/choice_probabilities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return choice probabilities of an RprobitB_fit. — choice_probabilities","text":"x object class RprobitB_fit. data Either NULL object class RprobitB_data. former case, choice probabilities computed data used model fitting. Alternatively, new data set can provided. par_set Specifying parameter set calculation either function computes posterior point estimate (default mean()), \"true\" select true parameter set, object class RprobitB_parameter.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/choice_probabilities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return choice probabilities of an RprobitB_fit. — choice_probabilities","text":"data frame choice probabilities choice situations rows alternatives columns. first two columns decider identifier \"id\" choice situation identifier \"idc\".","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/choice_probabilities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return choice probabilities of an RprobitB_fit. — choice_probabilities","text":"","code":"data <- simulate_choices(form = choice ~ covariate, N = 10, T = 10, J = 2) x <- mcmc(data) #> Iteration 10 of 10000 Iteration 20 of 10000 Iteration 30 of 10000 Iteration 40 of 10000 Iteration 50 of 10000 Iteration 60 of 10000 Iteration 70 of 10000 Iteration 80 of 10000 Iteration 90 of 10000 Iteration 100 of 10000 Iteration 110 of 10000 Iteration 120 of 10000 Iteration 130 of 10000 Iteration 140 of 10000 Iteration 150 of 10000 Iteration 160 of 10000 Iteration 170 of 10000 Iteration 180 of 10000 Iteration 190 of 10000 Iteration 200 of 10000 Iteration 210 of 10000 Iteration 220 of 10000 Iteration 230 of 10000 Iteration 240 of 10000 Iteration 250 of 10000 Iteration 260 of 10000 Iteration 270 of 10000 Iteration 280 of 10000 Iteration 290 of 10000 Iteration 300 of 10000 Iteration 310 of 10000 Iteration 320 of 10000 Iteration 330 of 10000 Iteration 340 of 10000 Iteration 350 of 10000 Iteration 360 of 10000 Iteration 370 of 10000 Iteration 380 of 10000 Iteration 390 of 10000 Iteration 400 of 10000 Iteration 410 of 10000 Iteration 420 of 10000 Iteration 430 of 10000 Iteration 440 of 10000 Iteration 450 of 10000 Iteration 460 of 10000 Iteration 470 of 10000 Iteration 480 of 10000 Iteration 490 of 10000 Iteration 500 of 10000 Iteration 510 of 10000 Iteration 520 of 10000 Iteration 530 of 10000 Iteration 540 of 10000 Iteration 550 of 10000 Iteration 560 of 10000 Iteration 570 of 10000 Iteration 580 of 10000 Iteration 590 of 10000 Iteration 600 of 10000 Iteration 610 of 10000 Iteration 620 of 10000 Iteration 630 of 10000 Iteration 640 of 10000 Iteration 650 of 10000 Iteration 660 of 10000 Iteration 670 of 10000 Iteration 680 of 10000 Iteration 690 of 10000 Iteration 700 of 10000 Iteration 710 of 10000 Iteration 720 of 10000 Iteration 730 of 10000 Iteration 740 of 10000 Iteration 750 of 10000 Iteration 760 of 10000 Iteration 770 of 10000 Iteration 780 of 10000 Iteration 790 of 10000 Iteration 800 of 10000 Iteration 810 of 10000 Iteration 820 of 10000 Iteration 830 of 10000 Iteration 840 of 10000 Iteration 850 of 10000 Iteration 860 of 10000 Iteration 870 of 10000 Iteration 880 of 10000 Iteration 890 of 10000 Iteration 900 of 10000 Iteration 910 of 10000 Iteration 920 of 10000 Iteration 930 of 10000 Iteration 940 of 10000 Iteration 950 of 10000 Iteration 960 of 10000 Iteration 970 of 10000 Iteration 980 of 10000 Iteration 990 of 10000 Iteration 1000 of 10000 Iteration 1010 of 10000 Iteration 1020 of 10000 Iteration 1030 of 10000 Iteration 1040 of 10000 Iteration 1050 of 10000 Iteration 1060 of 10000 Iteration 1070 of 10000 Iteration 1080 of 10000 Iteration 1090 of 10000 Iteration 1100 of 10000 Iteration 1110 of 10000 Iteration 1120 of 10000 Iteration 1130 of 10000 Iteration 1140 of 10000 Iteration 1150 of 10000 Iteration 1160 of 10000 Iteration 1170 of 10000 Iteration 1180 of 10000 Iteration 1190 of 10000 Iteration 1200 of 10000 Iteration 1210 of 10000 Iteration 1220 of 10000 Iteration 1230 of 10000 Iteration 1240 of 10000 Iteration 1250 of 10000 Iteration 1260 of 10000 Iteration 1270 of 10000 Iteration 1280 of 10000 Iteration 1290 of 10000 Iteration 1300 of 10000 Iteration 1310 of 10000 Iteration 1320 of 10000 Iteration 1330 of 10000 Iteration 1340 of 10000 Iteration 1350 of 10000 Iteration 1360 of 10000 Iteration 1370 of 10000 Iteration 1380 of 10000 Iteration 1390 of 10000 Iteration 1400 of 10000 Iteration 1410 of 10000 Iteration 1420 of 10000 Iteration 1430 of 10000 Iteration 1440 of 10000 Iteration 1450 of 10000 Iteration 1460 of 10000 Iteration 1470 of 10000 Iteration 1480 of 10000 Iteration 1490 of 10000 Iteration 1500 of 10000 Iteration 1510 of 10000 Iteration 1520 of 10000 Iteration 1530 of 10000 Iteration 1540 of 10000 Iteration 1550 of 10000 Iteration 1560 of 10000 Iteration 1570 of 10000 Iteration 1580 of 10000 Iteration 1590 of 10000 Iteration 1600 of 10000 Iteration 1610 of 10000 Iteration 1620 of 10000 Iteration 1630 of 10000 Iteration 1640 of 10000 Iteration 1650 of 10000 Iteration 1660 of 10000 Iteration 1670 of 10000 Iteration 1680 of 10000 Iteration 1690 of 10000 Iteration 1700 of 10000 Iteration 1710 of 10000 Iteration 1720 of 10000 Iteration 1730 of 10000 Iteration 1740 of 10000 Iteration 1750 of 10000 Iteration 1760 of 10000 Iteration 1770 of 10000 Iteration 1780 of 10000 Iteration 1790 of 10000 Iteration 1800 of 10000 Iteration 1810 of 10000 Iteration 1820 of 10000 Iteration 1830 of 10000 Iteration 1840 of 10000 Iteration 1850 of 10000 Iteration 1860 of 10000 Iteration 1870 of 10000 Iteration 1880 of 10000 Iteration 1890 of 10000 Iteration 1900 of 10000 Iteration 1910 of 10000 Iteration 1920 of 10000 Iteration 1930 of 10000 Iteration 1940 of 10000 Iteration 1950 of 10000 Iteration 1960 of 10000 Iteration 1970 of 10000 Iteration 1980 of 10000 Iteration 1990 of 10000 Iteration 2000 of 10000 Iteration 2010 of 10000 Iteration 2020 of 10000 Iteration 2030 of 10000 Iteration 2040 of 10000 Iteration 2050 of 10000 Iteration 2060 of 10000 Iteration 2070 of 10000 Iteration 2080 of 10000 Iteration 2090 of 10000 Iteration 2100 of 10000 Iteration 2110 of 10000 Iteration 2120 of 10000 Iteration 2130 of 10000 Iteration 2140 of 10000 Iteration 2150 of 10000 Iteration 2160 of 10000 Iteration 2170 of 10000 Iteration 2180 of 10000 Iteration 2190 of 10000 Iteration 2200 of 10000 Iteration 2210 of 10000 Iteration 2220 of 10000 Iteration 2230 of 10000 Iteration 2240 of 10000 Iteration 2250 of 10000 Iteration 2260 of 10000 Iteration 2270 of 10000 Iteration 2280 of 10000 Iteration 2290 of 10000 Iteration 2300 of 10000 Iteration 2310 of 10000 Iteration 2320 of 10000 Iteration 2330 of 10000 Iteration 2340 of 10000 Iteration 2350 of 10000 Iteration 2360 of 10000 Iteration 2370 of 10000 Iteration 2380 of 10000 Iteration 2390 of 10000 Iteration 2400 of 10000 Iteration 2410 of 10000 Iteration 2420 of 10000 Iteration 2430 of 10000 Iteration 2440 of 10000 Iteration 2450 of 10000 Iteration 2460 of 10000 Iteration 2470 of 10000 Iteration 2480 of 10000 Iteration 2490 of 10000 Iteration 2500 of 10000 Iteration 2510 of 10000 Iteration 2520 of 10000 Iteration 2530 of 10000 Iteration 2540 of 10000 Iteration 2550 of 10000 Iteration 2560 of 10000 Iteration 2570 of 10000 Iteration 2580 of 10000 Iteration 2590 of 10000 Iteration 2600 of 10000 Iteration 2610 of 10000 Iteration 2620 of 10000 Iteration 2630 of 10000 Iteration 2640 of 10000 Iteration 2650 of 10000 Iteration 2660 of 10000 Iteration 2670 of 10000 Iteration 2680 of 10000 Iteration 2690 of 10000 Iteration 2700 of 10000 Iteration 2710 of 10000 Iteration 2720 of 10000 Iteration 2730 of 10000 Iteration 2740 of 10000 Iteration 2750 of 10000 Iteration 2760 of 10000 Iteration 2770 of 10000 Iteration 2780 of 10000 Iteration 2790 of 10000 Iteration 2800 of 10000 Iteration 2810 of 10000 Iteration 2820 of 10000 Iteration 2830 of 10000 Iteration 2840 of 10000 Iteration 2850 of 10000 Iteration 2860 of 10000 Iteration 2870 of 10000 Iteration 2880 of 10000 Iteration 2890 of 10000 Iteration 2900 of 10000 Iteration 2910 of 10000 Iteration 2920 of 10000 Iteration 2930 of 10000 Iteration 2940 of 10000 Iteration 2950 of 10000 Iteration 2960 of 10000 Iteration 2970 of 10000 Iteration 2980 of 10000 Iteration 2990 of 10000 Iteration 3000 of 10000 Iteration 3010 of 10000 Iteration 3020 of 10000 Iteration 3030 of 10000 Iteration 3040 of 10000 Iteration 3050 of 10000 Iteration 3060 of 10000 Iteration 3070 of 10000 Iteration 3080 of 10000 Iteration 3090 of 10000 Iteration 3100 of 10000 Iteration 3110 of 10000 Iteration 3120 of 10000 Iteration 3130 of 10000 Iteration 3140 of 10000 Iteration 3150 of 10000 Iteration 3160 of 10000 Iteration 3170 of 10000 Iteration 3180 of 10000 Iteration 3190 of 10000 Iteration 3200 of 10000 Iteration 3210 of 10000 Iteration 3220 of 10000 Iteration 3230 of 10000 Iteration 3240 of 10000 Iteration 3250 of 10000 Iteration 3260 of 10000 Iteration 3270 of 10000 Iteration 3280 of 10000 Iteration 3290 of 10000 Iteration 3300 of 10000 Iteration 3310 of 10000 Iteration 3320 of 10000 Iteration 3330 of 10000 Iteration 3340 of 10000 Iteration 3350 of 10000 Iteration 3360 of 10000 Iteration 3370 of 10000 Iteration 3380 of 10000 Iteration 3390 of 10000 Iteration 3400 of 10000 Iteration 3410 of 10000 Iteration 3420 of 10000 Iteration 3430 of 10000 Iteration 3440 of 10000 Iteration 3450 of 10000 Iteration 3460 of 10000 Iteration 3470 of 10000 Iteration 3480 of 10000 Iteration 3490 of 10000 Iteration 3500 of 10000 Iteration 3510 of 10000 Iteration 3520 of 10000 Iteration 3530 of 10000 Iteration 3540 of 10000 Iteration 3550 of 10000 Iteration 3560 of 10000 Iteration 3570 of 10000 Iteration 3580 of 10000 Iteration 3590 of 10000 Iteration 3600 of 10000 Iteration 3610 of 10000 Iteration 3620 of 10000 Iteration 3630 of 10000 Iteration 3640 of 10000 Iteration 3650 of 10000 Iteration 3660 of 10000 Iteration 3670 of 10000 Iteration 3680 of 10000 Iteration 3690 of 10000 Iteration 3700 of 10000 Iteration 3710 of 10000 Iteration 3720 of 10000 Iteration 3730 of 10000 Iteration 3740 of 10000 Iteration 3750 of 10000 Iteration 3760 of 10000 Iteration 3770 of 10000 Iteration 3780 of 10000 Iteration 3790 of 10000 Iteration 3800 of 10000 Iteration 3810 of 10000 Iteration 3820 of 10000 Iteration 3830 of 10000 Iteration 3840 of 10000 Iteration 3850 of 10000 Iteration 3860 of 10000 Iteration 3870 of 10000 Iteration 3880 of 10000 Iteration 3890 of 10000 Iteration 3900 of 10000 Iteration 3910 of 10000 Iteration 3920 of 10000 Iteration 3930 of 10000 Iteration 3940 of 10000 Iteration 3950 of 10000 Iteration 3960 of 10000 Iteration 3970 of 10000 Iteration 3980 of 10000 Iteration 3990 of 10000 Iteration 4000 of 10000 Iteration 4010 of 10000 Iteration 4020 of 10000 Iteration 4030 of 10000 Iteration 4040 of 10000 Iteration 4050 of 10000 Iteration 4060 of 10000 Iteration 4070 of 10000 Iteration 4080 of 10000 Iteration 4090 of 10000 Iteration 4100 of 10000 Iteration 4110 of 10000 Iteration 4120 of 10000 Iteration 4130 of 10000 Iteration 4140 of 10000 Iteration 4150 of 10000 Iteration 4160 of 10000 Iteration 4170 of 10000 Iteration 4180 of 10000 Iteration 4190 of 10000 Iteration 4200 of 10000 Iteration 4210 of 10000 Iteration 4220 of 10000 Iteration 4230 of 10000 Iteration 4240 of 10000 Iteration 4250 of 10000 Iteration 4260 of 10000 Iteration 4270 of 10000 Iteration 4280 of 10000 Iteration 4290 of 10000 Iteration 4300 of 10000 Iteration 4310 of 10000 Iteration 4320 of 10000 Iteration 4330 of 10000 Iteration 4340 of 10000 Iteration 4350 of 10000 Iteration 4360 of 10000 Iteration 4370 of 10000 Iteration 4380 of 10000 Iteration 4390 of 10000 Iteration 4400 of 10000 Iteration 4410 of 10000 Iteration 4420 of 10000 Iteration 4430 of 10000 Iteration 4440 of 10000 Iteration 4450 of 10000 Iteration 4460 of 10000 Iteration 4470 of 10000 Iteration 4480 of 10000 Iteration 4490 of 10000 Iteration 4500 of 10000 Iteration 4510 of 10000 Iteration 4520 of 10000 Iteration 4530 of 10000 Iteration 4540 of 10000 Iteration 4550 of 10000 Iteration 4560 of 10000 Iteration 4570 of 10000 Iteration 4580 of 10000 Iteration 4590 of 10000 Iteration 4600 of 10000 Iteration 4610 of 10000 Iteration 4620 of 10000 Iteration 4630 of 10000 Iteration 4640 of 10000 Iteration 4650 of 10000 Iteration 4660 of 10000 Iteration 4670 of 10000 Iteration 4680 of 10000 Iteration 4690 of 10000 Iteration 4700 of 10000 Iteration 4710 of 10000 Iteration 4720 of 10000 Iteration 4730 of 10000 Iteration 4740 of 10000 Iteration 4750 of 10000 Iteration 4760 of 10000 Iteration 4770 of 10000 Iteration 4780 of 10000 Iteration 4790 of 10000 Iteration 4800 of 10000 Iteration 4810 of 10000 Iteration 4820 of 10000 Iteration 4830 of 10000 Iteration 4840 of 10000 Iteration 4850 of 10000 Iteration 4860 of 10000 Iteration 4870 of 10000 Iteration 4880 of 10000 Iteration 4890 of 10000 Iteration 4900 of 10000 Iteration 4910 of 10000 Iteration 4920 of 10000 Iteration 4930 of 10000 Iteration 4940 of 10000 Iteration 4950 of 10000 Iteration 4960 of 10000 Iteration 4970 of 10000 Iteration 4980 of 10000 Iteration 4990 of 10000 Iteration 5000 of 10000 Iteration 5010 of 10000 Iteration 5020 of 10000 Iteration 5030 of 10000 Iteration 5040 of 10000 Iteration 5050 of 10000 Iteration 5060 of 10000 Iteration 5070 of 10000 Iteration 5080 of 10000 Iteration 5090 of 10000 Iteration 5100 of 10000 Iteration 5110 of 10000 Iteration 5120 of 10000 Iteration 5130 of 10000 Iteration 5140 of 10000 Iteration 5150 of 10000 Iteration 5160 of 10000 Iteration 5170 of 10000 Iteration 5180 of 10000 Iteration 5190 of 10000 Iteration 5200 of 10000 Iteration 5210 of 10000 Iteration 5220 of 10000 Iteration 5230 of 10000 Iteration 5240 of 10000 Iteration 5250 of 10000 Iteration 5260 of 10000 Iteration 5270 of 10000 Iteration 5280 of 10000 Iteration 5290 of 10000 Iteration 5300 of 10000 Iteration 5310 of 10000 Iteration 5320 of 10000 Iteration 5330 of 10000 Iteration 5340 of 10000 Iteration 5350 of 10000 Iteration 5360 of 10000 Iteration 5370 of 10000 Iteration 5380 of 10000 Iteration 5390 of 10000 Iteration 5400 of 10000 Iteration 5410 of 10000 Iteration 5420 of 10000 Iteration 5430 of 10000 Iteration 5440 of 10000 Iteration 5450 of 10000 Iteration 5460 of 10000 Iteration 5470 of 10000 Iteration 5480 of 10000 Iteration 5490 of 10000 Iteration 5500 of 10000 Iteration 5510 of 10000 Iteration 5520 of 10000 Iteration 5530 of 10000 Iteration 5540 of 10000 Iteration 5550 of 10000 Iteration 5560 of 10000 Iteration 5570 of 10000 Iteration 5580 of 10000 Iteration 5590 of 10000 Iteration 5600 of 10000 Iteration 5610 of 10000 Iteration 5620 of 10000 Iteration 5630 of 10000 Iteration 5640 of 10000 Iteration 5650 of 10000 Iteration 5660 of 10000 Iteration 5670 of 10000 Iteration 5680 of 10000 Iteration 5690 of 10000 Iteration 5700 of 10000 Iteration 5710 of 10000 Iteration 5720 of 10000 Iteration 5730 of 10000 Iteration 5740 of 10000 Iteration 5750 of 10000 Iteration 5760 of 10000 Iteration 5770 of 10000 Iteration 5780 of 10000 Iteration 5790 of 10000 Iteration 5800 of 10000 Iteration 5810 of 10000 Iteration 5820 of 10000 Iteration 5830 of 10000 Iteration 5840 of 10000 Iteration 5850 of 10000 Iteration 5860 of 10000 Iteration 5870 of 10000 Iteration 5880 of 10000 Iteration 5890 of 10000 Iteration 5900 of 10000 Iteration 5910 of 10000 Iteration 5920 of 10000 Iteration 5930 of 10000 Iteration 5940 of 10000 Iteration 5950 of 10000 Iteration 5960 of 10000 Iteration 5970 of 10000 Iteration 5980 of 10000 Iteration 5990 of 10000 Iteration 6000 of 10000 Iteration 6010 of 10000 Iteration 6020 of 10000 Iteration 6030 of 10000 Iteration 6040 of 10000 Iteration 6050 of 10000 Iteration 6060 of 10000 Iteration 6070 of 10000 Iteration 6080 of 10000 Iteration 6090 of 10000 Iteration 6100 of 10000 Iteration 6110 of 10000 Iteration 6120 of 10000 Iteration 6130 of 10000 Iteration 6140 of 10000 Iteration 6150 of 10000 Iteration 6160 of 10000 Iteration 6170 of 10000 Iteration 6180 of 10000 Iteration 6190 of 10000 Iteration 6200 of 10000 Iteration 6210 of 10000 Iteration 6220 of 10000 Iteration 6230 of 10000 Iteration 6240 of 10000 Iteration 6250 of 10000 Iteration 6260 of 10000 Iteration 6270 of 10000 Iteration 6280 of 10000 Iteration 6290 of 10000 Iteration 6300 of 10000 Iteration 6310 of 10000 Iteration 6320 of 10000 Iteration 6330 of 10000 Iteration 6340 of 10000 Iteration 6350 of 10000 Iteration 6360 of 10000 Iteration 6370 of 10000 Iteration 6380 of 10000 Iteration 6390 of 10000 Iteration 6400 of 10000 Iteration 6410 of 10000 Iteration 6420 of 10000 Iteration 6430 of 10000 Iteration 6440 of 10000 Iteration 6450 of 10000 Iteration 6460 of 10000 Iteration 6470 of 10000 Iteration 6480 of 10000 Iteration 6490 of 10000 Iteration 6500 of 10000 Iteration 6510 of 10000 Iteration 6520 of 10000 Iteration 6530 of 10000 Iteration 6540 of 10000 Iteration 6550 of 10000 Iteration 6560 of 10000 Iteration 6570 of 10000 Iteration 6580 of 10000 Iteration 6590 of 10000 Iteration 6600 of 10000 Iteration 6610 of 10000 Iteration 6620 of 10000 Iteration 6630 of 10000 Iteration 6640 of 10000 Iteration 6650 of 10000 Iteration 6660 of 10000 Iteration 6670 of 10000 Iteration 6680 of 10000 Iteration 6690 of 10000 Iteration 6700 of 10000 Iteration 6710 of 10000 Iteration 6720 of 10000 Iteration 6730 of 10000 Iteration 6740 of 10000 Iteration 6750 of 10000 Iteration 6760 of 10000 Iteration 6770 of 10000 Iteration 6780 of 10000 Iteration 6790 of 10000 Iteration 6800 of 10000 Iteration 6810 of 10000 Iteration 6820 of 10000 Iteration 6830 of 10000 Iteration 6840 of 10000 Iteration 6850 of 10000 Iteration 6860 of 10000 Iteration 6870 of 10000 Iteration 6880 of 10000 Iteration 6890 of 10000 Iteration 6900 of 10000 Iteration 6910 of 10000 Iteration 6920 of 10000 Iteration 6930 of 10000 Iteration 6940 of 10000 Iteration 6950 of 10000 Iteration 6960 of 10000 Iteration 6970 of 10000 Iteration 6980 of 10000 Iteration 6990 of 10000 Iteration 7000 of 10000 Iteration 7010 of 10000 Iteration 7020 of 10000 Iteration 7030 of 10000 Iteration 7040 of 10000 Iteration 7050 of 10000 Iteration 7060 of 10000 Iteration 7070 of 10000 Iteration 7080 of 10000 Iteration 7090 of 10000 Iteration 7100 of 10000 Iteration 7110 of 10000 Iteration 7120 of 10000 Iteration 7130 of 10000 Iteration 7140 of 10000 Iteration 7150 of 10000 Iteration 7160 of 10000 Iteration 7170 of 10000 Iteration 7180 of 10000 Iteration 7190 of 10000 Iteration 7200 of 10000 Iteration 7210 of 10000 Iteration 7220 of 10000 Iteration 7230 of 10000 Iteration 7240 of 10000 Iteration 7250 of 10000 Iteration 7260 of 10000 Iteration 7270 of 10000 Iteration 7280 of 10000 Iteration 7290 of 10000 Iteration 7300 of 10000 Iteration 7310 of 10000 Iteration 7320 of 10000 Iteration 7330 of 10000 Iteration 7340 of 10000 Iteration 7350 of 10000 Iteration 7360 of 10000 Iteration 7370 of 10000 Iteration 7380 of 10000 Iteration 7390 of 10000 Iteration 7400 of 10000 Iteration 7410 of 10000 Iteration 7420 of 10000 Iteration 7430 of 10000 Iteration 7440 of 10000 Iteration 7450 of 10000 Iteration 7460 of 10000 Iteration 7470 of 10000 Iteration 7480 of 10000 Iteration 7490 of 10000 Iteration 7500 of 10000 Iteration 7510 of 10000 Iteration 7520 of 10000 Iteration 7530 of 10000 Iteration 7540 of 10000 Iteration 7550 of 10000 Iteration 7560 of 10000 Iteration 7570 of 10000 Iteration 7580 of 10000 Iteration 7590 of 10000 Iteration 7600 of 10000 Iteration 7610 of 10000 Iteration 7620 of 10000 Iteration 7630 of 10000 Iteration 7640 of 10000 Iteration 7650 of 10000 Iteration 7660 of 10000 Iteration 7670 of 10000 Iteration 7680 of 10000 Iteration 7690 of 10000 Iteration 7700 of 10000 Iteration 7710 of 10000 Iteration 7720 of 10000 Iteration 7730 of 10000 Iteration 7740 of 10000 Iteration 7750 of 10000 Iteration 7760 of 10000 Iteration 7770 of 10000 Iteration 7780 of 10000 Iteration 7790 of 10000 Iteration 7800 of 10000 Iteration 7810 of 10000 Iteration 7820 of 10000 Iteration 7830 of 10000 Iteration 7840 of 10000 Iteration 7850 of 10000 Iteration 7860 of 10000 Iteration 7870 of 10000 Iteration 7880 of 10000 Iteration 7890 of 10000 Iteration 7900 of 10000 Iteration 7910 of 10000 Iteration 7920 of 10000 Iteration 7930 of 10000 Iteration 7940 of 10000 Iteration 7950 of 10000 Iteration 7960 of 10000 Iteration 7970 of 10000 Iteration 7980 of 10000 Iteration 7990 of 10000 Iteration 8000 of 10000 Iteration 8010 of 10000 Iteration 8020 of 10000 Iteration 8030 of 10000 Iteration 8040 of 10000 Iteration 8050 of 10000 Iteration 8060 of 10000 Iteration 8070 of 10000 Iteration 8080 of 10000 Iteration 8090 of 10000 Iteration 8100 of 10000 Iteration 8110 of 10000 Iteration 8120 of 10000 Iteration 8130 of 10000 Iteration 8140 of 10000 Iteration 8150 of 10000 Iteration 8160 of 10000 Iteration 8170 of 10000 Iteration 8180 of 10000 Iteration 8190 of 10000 Iteration 8200 of 10000 Iteration 8210 of 10000 Iteration 8220 of 10000 Iteration 8230 of 10000 Iteration 8240 of 10000 Iteration 8250 of 10000 Iteration 8260 of 10000 Iteration 8270 of 10000 Iteration 8280 of 10000 Iteration 8290 of 10000 Iteration 8300 of 10000 Iteration 8310 of 10000 Iteration 8320 of 10000 Iteration 8330 of 10000 Iteration 8340 of 10000 Iteration 8350 of 10000 Iteration 8360 of 10000 Iteration 8370 of 10000 Iteration 8380 of 10000 Iteration 8390 of 10000 Iteration 8400 of 10000 Iteration 8410 of 10000 Iteration 8420 of 10000 Iteration 8430 of 10000 Iteration 8440 of 10000 Iteration 8450 of 10000 Iteration 8460 of 10000 Iteration 8470 of 10000 Iteration 8480 of 10000 Iteration 8490 of 10000 Iteration 8500 of 10000 Iteration 8510 of 10000 Iteration 8520 of 10000 Iteration 8530 of 10000 Iteration 8540 of 10000 Iteration 8550 of 10000 Iteration 8560 of 10000 Iteration 8570 of 10000 Iteration 8580 of 10000 Iteration 8590 of 10000 Iteration 8600 of 10000 Iteration 8610 of 10000 Iteration 8620 of 10000 Iteration 8630 of 10000 Iteration 8640 of 10000 Iteration 8650 of 10000 Iteration 8660 of 10000 Iteration 8670 of 10000 Iteration 8680 of 10000 Iteration 8690 of 10000 Iteration 8700 of 10000 Iteration 8710 of 10000 Iteration 8720 of 10000 Iteration 8730 of 10000 Iteration 8740 of 10000 Iteration 8750 of 10000 Iteration 8760 of 10000 Iteration 8770 of 10000 Iteration 8780 of 10000 Iteration 8790 of 10000 Iteration 8800 of 10000 Iteration 8810 of 10000 Iteration 8820 of 10000 Iteration 8830 of 10000 Iteration 8840 of 10000 Iteration 8850 of 10000 Iteration 8860 of 10000 Iteration 8870 of 10000 Iteration 8880 of 10000 Iteration 8890 of 10000 Iteration 8900 of 10000 Iteration 8910 of 10000 Iteration 8920 of 10000 Iteration 8930 of 10000 Iteration 8940 of 10000 Iteration 8950 of 10000 Iteration 8960 of 10000 Iteration 8970 of 10000 Iteration 8980 of 10000 Iteration 8990 of 10000 Iteration 9000 of 10000 Iteration 9010 of 10000 Iteration 9020 of 10000 Iteration 9030 of 10000 Iteration 9040 of 10000 Iteration 9050 of 10000 Iteration 9060 of 10000 Iteration 9070 of 10000 Iteration 9080 of 10000 Iteration 9090 of 10000 Iteration 9100 of 10000 Iteration 9110 of 10000 Iteration 9120 of 10000 Iteration 9130 of 10000 Iteration 9140 of 10000 Iteration 9150 of 10000 Iteration 9160 of 10000 Iteration 9170 of 10000 Iteration 9180 of 10000 Iteration 9190 of 10000 Iteration 9200 of 10000 Iteration 9210 of 10000 Iteration 9220 of 10000 Iteration 9230 of 10000 Iteration 9240 of 10000 Iteration 9250 of 10000 Iteration 9260 of 10000 Iteration 9270 of 10000 Iteration 9280 of 10000 Iteration 9290 of 10000 Iteration 9300 of 10000 Iteration 9310 of 10000 Iteration 9320 of 10000 Iteration 9330 of 10000 Iteration 9340 of 10000 Iteration 9350 of 10000 Iteration 9360 of 10000 Iteration 9370 of 10000 Iteration 9380 of 10000 Iteration 9390 of 10000 Iteration 9400 of 10000 Iteration 9410 of 10000 Iteration 9420 of 10000 Iteration 9430 of 10000 Iteration 9440 of 10000 Iteration 9450 of 10000 Iteration 9460 of 10000 Iteration 9470 of 10000 Iteration 9480 of 10000 Iteration 9490 of 10000 Iteration 9500 of 10000 Iteration 9510 of 10000 Iteration 9520 of 10000 Iteration 9530 of 10000 Iteration 9540 of 10000 Iteration 9550 of 10000 Iteration 9560 of 10000 Iteration 9570 of 10000 Iteration 9580 of 10000 Iteration 9590 of 10000 Iteration 9600 of 10000 Iteration 9610 of 10000 Iteration 9620 of 10000 Iteration 9630 of 10000 Iteration 9640 of 10000 Iteration 9650 of 10000 Iteration 9660 of 10000 Iteration 9670 of 10000 Iteration 9680 of 10000 Iteration 9690 of 10000 Iteration 9700 of 10000 Iteration 9710 of 10000 Iteration 9720 of 10000 Iteration 9730 of 10000 Iteration 9740 of 10000 Iteration 9750 of 10000 Iteration 9760 of 10000 Iteration 9770 of 10000 Iteration 9780 of 10000 Iteration 9790 of 10000 Iteration 9800 of 10000 Iteration 9810 of 10000 Iteration 9820 of 10000 Iteration 9830 of 10000 Iteration 9840 of 10000 Iteration 9850 of 10000 Iteration 9860 of 10000 Iteration 9870 of 10000 Iteration 9880 of 10000 Iteration 9890 of 10000 Iteration 9900 of 10000 Iteration 9910 of 10000 Iteration 9920 of 10000 Iteration 9930 of 10000 Iteration 9940 of 10000 Iteration 9950 of 10000 Iteration 9960 of 10000 Iteration 9970 of 10000 Iteration 9980 of 10000 Iteration 9990 of 10000 Iteration 10000 of 10000 choice_probabilities(x) #>     id idc         A         B #> 1    1   1 0.8956290 0.1043710 #> 2    1   2 0.7783582 0.2216418 #> 3    1   3 0.6795716 0.3204284 #> 4    1   4 0.5000761 0.4999239 #> 5    1   5 0.4522903 0.5477097 #> 6    1   6 0.4699923 0.5300077 #> 7    1   7 0.5281143 0.4718857 #> 8    1   8 0.6713468 0.3286532 #> 9    1   9 0.7083164 0.2916836 #> 10   1  10 0.8441325 0.1558675 #> 11   2   1 0.7282757 0.2717243 #> 12   2   2 0.5710194 0.4289806 #> 13   2   3 0.7856964 0.2143036 #> 14   2   4 0.7481441 0.2518559 #> 15   2   5 0.7222251 0.2777749 #> 16   2   6 0.7104753 0.2895247 #> 17   2   7 0.7146033 0.2853967 #> 18   2   8 0.7613626 0.2386374 #> 19   2   9 0.7672953 0.2327047 #> 20   2  10 0.6960981 0.3039019 #> 21   3   1 0.7005396 0.2994604 #> 22   3   2 0.5128890 0.4871110 #> 23   3   3 0.3454981 0.6545019 #> 24   3   4 0.4634812 0.5365188 #> 25   3   5 0.6611405 0.3388595 #> 26   3   6 0.6928271 0.3071729 #> 27   3   7 0.5550844 0.4449156 #> 28   3   8 0.5763255 0.4236745 #> 29   3   9 0.5171924 0.4828076 #> 30   3  10 0.4887200 0.5112800 #> 31   4   1 0.4562918 0.5437082 #> 32   4   2 0.5382251 0.4617749 #> 33   4   3 0.7671292 0.2328708 #> 34   4   4 0.8491007 0.1508993 #> 35   4   5 0.6347622 0.3652378 #> 36   4   6 0.7390666 0.2609334 #> 37   4   7 0.7794487 0.2205513 #> 38   4   8 0.4475831 0.5524169 #> 39   4   9 0.4946553 0.5053447 #> 40   4  10 0.5642767 0.4357233 #> 41   5   1 0.7321232 0.2678768 #> 42   5   2 0.7003312 0.2996688 #> 43   5   3 0.5540814 0.4459186 #> 44   5   4 0.6792782 0.3207218 #> 45   5   5 0.5908999 0.4091001 #> 46   5   6 0.5669368 0.4330632 #> 47   5   7 0.6100456 0.3899544 #> 48   5   8 0.6068167 0.3931833 #> 49   5   9 0.6481946 0.3518054 #> 50   5  10 0.7345812 0.2654188 #> 51   6   1 0.7151621 0.2848379 #> 52   6   2 0.7589524 0.2410476 #> 53   6   3 0.6077644 0.3922356 #> 54   6   4 0.4600998 0.5399002 #> 55   6   5 0.7522912 0.2477088 #> 56   6   6 0.7114054 0.2885946 #> 57   6   7 0.6003408 0.3996592 #> 58   6   8 0.5657008 0.4342992 #> 59   6   9 0.7585920 0.2414080 #> 60   6  10 0.5220671 0.4779329 #> 61   7   1 0.6531901 0.3468099 #> 62   7   2 0.7651826 0.2348174 #> 63   7   3 0.4983172 0.5016828 #> 64   7   4 0.6916503 0.3083497 #> 65   7   5 0.6097050 0.3902950 #> 66   7   6 0.6930465 0.3069535 #> 67   7   7 0.5182272 0.4817728 #> 68   7   8 0.6646993 0.3353007 #> 69   7   9 0.8177468 0.1822532 #> 70   7  10 0.5561358 0.4438642 #> 71   8   1 0.5068485 0.4931515 #> 72   8   2 0.8107943 0.1892057 #> 73   8   3 0.4993699 0.5006301 #> 74   8   4 0.7262035 0.2737965 #> 75   8   5 0.8473819 0.1526181 #> 76   8   6 0.6031691 0.3968309 #> 77   8   7 0.3913724 0.6086276 #> 78   8   8 0.3585497 0.6414503 #> 79   8   9 0.7020826 0.2979174 #> 80   8  10 0.6708247 0.3291753 #> 81   9   1 0.4838676 0.5161324 #> 82   9   2 0.6839187 0.3160813 #> 83   9   3 0.4884662 0.5115338 #> 84   9   4 0.4188804 0.5811196 #> 85   9   5 0.5516937 0.4483063 #> 86   9   6 0.7019341 0.2980659 #> 87   9   7 0.5279650 0.4720350 #> 88   9   8 0.6358205 0.3641795 #> 89   9   9 0.7516253 0.2483747 #> 90   9  10 0.7846284 0.2153716 #> 91  10   1 0.7480159 0.2519841 #> 92  10   2 0.7994740 0.2005260 #> 93  10   3 0.7633911 0.2366089 #> 94  10   4 0.6458556 0.3541444 #> 95  10   5 0.7074046 0.2925954 #> 96  10   6 0.7088710 0.2911290 #> 97  10   7 0.7387659 0.2612341 #> 98  10   8 0.6301840 0.3698160 #> 99  10   9 0.4550648 0.5449352 #> 100 10  10 0.4838197 0.5161803"},{"path":"https://loelschlaeger.de/RprobitB/reference/compute_choice_probabilities.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute probit choice probabilities for a single choice situation. — compute_choice_probabilities","title":"Compute probit choice probabilities for a single choice situation. — compute_choice_probabilities","text":"function computes probit choice probabilities single choice situation J alternatives.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/compute_choice_probabilities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute probit choice probabilities for a single choice situation. — compute_choice_probabilities","text":"","code":"compute_choice_probabilities(X, alternatives, parameter)"},{"path":"https://loelschlaeger.de/RprobitB/reference/compute_choice_probabilities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute probit choice probabilities for a single choice situation. — compute_choice_probabilities","text":"X matrix covariates J rows P_f + P_r columns, first P_f columns connected fixed coefficients last P_r columns connected random coefficients. alternatives vector unique integers 1 J, indicating alternatives choice probabilities computed. parameter object class RprobitB_parameter.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/compute_choice_probabilities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute probit choice probabilities for a single choice situation. — compute_choice_probabilities","text":"probability vector length length(alternatives).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/compute_p_si.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute probability for each observation for different posterior samples — compute_p_si","title":"Compute probability for each observation for different posterior samples — compute_p_si","text":"function computes probability observation different samples posterior.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/compute_p_si.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute probability for each observation for different posterior samples — compute_p_si","text":"","code":"compute_p_si(x, S, print_progress = TRUE, ncores = 1)"},{"path":"https://loelschlaeger.de/RprobitB/reference/compute_p_si.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute probability for each observation for different posterior samples — compute_p_si","text":"x object class RprobitB_fit. S number posterior samples used calculation WAIC value. Must greater equal two variance computation. print_progress Set TRUE print computation progress. ncores Computation parallelized, set number cores.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/compute_p_si.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute probability for each observation for different posterior samples — compute_p_si","text":"matrix, observations rows posterior samples columns.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_Omega.html","id":null,"dir":"Reference","previous_headings":"","what":"Create labels for Omega — create_labels_Omega","title":"Create labels for Omega — create_labels_Omega","text":"function creates labels model parameter Omega.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_Omega.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create labels for Omega — create_labels_Omega","text":"","code":"create_labels_Omega(P_r, C, cov_sym)"},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_Omega.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create labels for Omega — create_labels_Omega","text":"P_r number covariates connected random coefficient (can 0). cov_sym Set TRUE labels symmetric covariance elements.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_Omega.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create labels for Omega — create_labels_Omega","text":"vector labels model parameter Omega length P_r^2 * C P_r > 0 cov_sym = TRUEor length P_r*(P_r+1)/2*C cov_sym = FALSE NULLotherwise.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_Omega.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create labels for Omega — create_labels_Omega","text":"labels form \"c.p1,p2\", c latent class number p1,p2 indeces two random coefficients.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_Omega.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create labels for Omega — create_labels_Omega","text":"","code":"RprobitB:::create_labels_Omega(2, 3, cov_sym = TRUE) #>  [1] \"1.1,1\" \"1.1,2\" \"1.2,1\" \"1.2,2\" \"2.1,1\" \"2.1,2\" \"2.2,1\" \"2.2,2\" \"3.1,1\" #> [10] \"3.1,2\" \"3.2,1\" \"3.2,2\" RprobitB:::create_labels_Omega(2, 3, cov_sym = FALSE) #> [1] \"1.1,1\" \"1.1,2\" \"1.2,2\" \"2.1,1\" \"2.1,2\" \"2.2,2\" \"3.1,1\" \"3.1,2\" \"3.2,2\""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_Sigma.html","id":null,"dir":"Reference","previous_headings":"","what":"Create labels for Sigma — create_labels_Sigma","title":"Create labels for Sigma — create_labels_Sigma","text":"function creates labels model parameter Sigma.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_Sigma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create labels for Sigma — create_labels_Sigma","text":"","code":"create_labels_Sigma(J, cov_sym)"},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_Sigma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create labels for Sigma — create_labels_Sigma","text":"J number (greater equal 2) choice alternatives. cov_sym Set TRUE labels symmetric covariance elements.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_Sigma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create labels for Sigma — create_labels_Sigma","text":"vector labels model parameter Sigma length (J-1)^2 cov_sym = TRUE length P_r*(P_r+1)/2*Cif cov_sym = FALSE.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_Sigma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create labels for Sigma — create_labels_Sigma","text":"labels form \"j1,j2\", j1,j2 indices two alternatives.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_Sigma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create labels for Sigma — create_labels_Sigma","text":"","code":"RprobitB:::create_labels_Sigma(3, cov_sym = TRUE) #> [1] \"1,1\" \"1,2\" \"2,1\" \"2,2\" RprobitB:::create_labels_Sigma(4, cov_sym = FALSE) #> [1] \"1,1\" \"1,2\" \"1,3\" \"2,2\" \"2,3\" \"3,3\""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_alpha.html","id":null,"dir":"Reference","previous_headings":"","what":"Create labels for alpha — create_labels_alpha","title":"Create labels for alpha — create_labels_alpha","text":"function creates labels model parameter alpha.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_alpha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create labels for alpha — create_labels_alpha","text":"","code":"create_labels_alpha(P_f)"},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_alpha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create labels for alpha — create_labels_alpha","text":"P_f number covariates connected fixed coefficient (can 0).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_alpha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create labels for alpha — create_labels_alpha","text":"vector labels model parameter alpha length P_fif P_f > 0 NULL otherwise.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_alpha.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create labels for alpha — create_labels_alpha","text":"","code":"RprobitB:::create_labels_alpha(P_f = 3) #> [1] \"1\" \"2\" \"3\""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_b.html","id":null,"dir":"Reference","previous_headings":"","what":"Create labels for b — create_labels_b","title":"Create labels for b — create_labels_b","text":"function creates labels model parameter b.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_b.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create labels for b — create_labels_b","text":"","code":"create_labels_b(P_r, C)"},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_b.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create labels for b — create_labels_b","text":"P_r number covariates connected random coefficient (can 0).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_b.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create labels for b — create_labels_b","text":"vector labels model parameter b length P_r * Cif P_r > 0 NULL otherwise.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_b.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create labels for b — create_labels_b","text":"labels form \"c.p\", c latent class number p index random coefficient.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_b.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create labels for b — create_labels_b","text":"","code":"RprobitB:::create_labels_b(2,3) #> [1] \"1.1\" \"1.2\" \"2.1\" \"2.2\" \"3.1\" \"3.2\""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_s.html","id":null,"dir":"Reference","previous_headings":"","what":"Create labels for s — create_labels_s","title":"Create labels for s — create_labels_s","text":"function creates labels model parameter s.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_s.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create labels for s — create_labels_s","text":"","code":"create_labels_s(P_r, C)"},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_s.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create labels for s — create_labels_s","text":"P_r number covariates connected random coefficient (can 0).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_s.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create labels for s — create_labels_s","text":"vector labels model parameter s length C P_r > 0 NULL otherwise.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/create_labels_s.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create labels for s — create_labels_s","text":"","code":"RprobitB:::create_labels_s(1,3) #> [1] \"1\" \"2\" \"3\""},{"path":"https://loelschlaeger.de/RprobitB/reference/delta.html","id":null,"dir":"Reference","previous_headings":"","what":"Matrix difference operator — delta","title":"Matrix difference operator — delta","text":"function creates difference operator matrix delta subtracting matrix row matrix rows.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/delta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matrix difference operator — delta","text":"","code":"delta(J, i)"},{"path":"https://loelschlaeger.de/RprobitB/reference/delta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matrix difference operator — delta","text":"J number matrix rows. row number respect differences computed.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/delta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matrix difference operator — delta","text":"matrix J-1 rows.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/delta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Matrix difference operator — delta","text":"Given matrix x J rows, delta(,J) %*% x computes differences respect row .","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/delta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Matrix difference operator — delta","text":"","code":"J <- 2 x <- matrix(1, nrow = J, ncol = 2) RprobitB:::delta(J, 1) %*% x #>      [,1] [,2] #> [1,]    0    0"},{"path":"https://loelschlaeger.de/RprobitB/reference/dmvnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Density of multivariate normal distribution — dmvnorm","title":"Density of multivariate normal distribution — dmvnorm","text":"function computes density multivariate normal distribution.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/dmvnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density of multivariate normal distribution — dmvnorm","text":"","code":"dmvnorm(x, mean, Sigma, log = FALSE)"},{"path":"https://loelschlaeger.de/RprobitB/reference/dmvnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density of multivariate normal distribution — dmvnorm","text":"x quantile vector length n. mean mean vector length n. Sigma covariance matrix dimension n x n. log boolean, TRUE logarithm density value returned.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/dmvnorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density of multivariate normal distribution — dmvnorm","text":"density value.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/dmvnorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density of multivariate normal distribution — dmvnorm","text":"","code":"x = c(0,0) mean = c(0,0) Sigma = diag(2) dmvnorm(x = x, mean = mean, Sigma = Sigma) #> [1] 0.1591549 dmvnorm(x = x, mean = mean, Sigma = Sigma, log = TRUE) #> [1] -1.837877"},{"path":"https://loelschlaeger.de/RprobitB/reference/draw_from_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample from prior distributions — draw_from_prior","title":"Sample from prior distributions — draw_from_prior","text":"function returns sample parameter's prior distribution.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/draw_from_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample from prior distributions — draw_from_prior","text":"","code":"draw_from_prior(prior, C = 1)"},{"path":"https://loelschlaeger.de/RprobitB/reference/draw_from_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample from prior distributions — draw_from_prior","text":"prior object class RprobitB_prior, output check_prior. C number latent classes.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/draw_from_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample from prior distributions — draw_from_prior","text":"list draws alpha, s, b, Omega, Sigma (specified model).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/draw_from_prior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample from prior distributions — draw_from_prior","text":"","code":"prior <- check_prior(P_f = 1, P_r = 2, J = 3) RprobitB:::draw_from_prior(prior, C = 2) #> $alpha #>         [,1] #> [1,] 1.24216 #>  #> $s #> [1] 0.7198217 0.2801783 #>  #> $b #>             [,1]      [,2] #> [1,] -1.33191121 -2.026042 #> [2,] -0.07803845  2.203605 #>  #> $Omega #>            [,1]       [,2] #> [1,]  1.5267822 0.12195913 #> [2,] -0.2835140 0.02664509 #> [3,] -0.2835140 0.02664509 #> [4,]  0.2065988 0.09819330 #>  #> $Sigma #>           [,1]      [,2] #> [1,] 0.3275682 0.3862662 #> [2,] 0.3862662 0.6890913 #>"},{"path":"https://loelschlaeger.de/RprobitB/reference/euc_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Euclidean distance — euc_dist","title":"Euclidean distance — euc_dist","text":"function computes euclidean distance two vectors.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/euc_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Euclidean distance — euc_dist","text":"","code":"euc_dist(a, b)"},{"path":"https://loelschlaeger.de/RprobitB/reference/euc_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Euclidean distance — euc_dist","text":"numeric vector. b Another numeric vector length .","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/euc_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Euclidean distance — euc_dist","text":"euclidean distance.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/filter_gibbs_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Gibbs samples — filter_gibbs_samples","title":"Filter Gibbs samples — filter_gibbs_samples","text":"helper function filters Gibbs samples.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/filter_gibbs_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Gibbs samples — filter_gibbs_samples","text":"","code":"filter_gibbs_samples(   x,   P_f,   P_r,   J,   C,   cov_sym,   keep_par = c(\"s\", \"alpha\", \"b\", \"Omega\", \"Sigma\"),   drop_par = NULL )"},{"path":"https://loelschlaeger.de/RprobitB/reference/filter_gibbs_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Gibbs samples — filter_gibbs_samples","text":"x object class RprobitB_gibbs_samples. P_f number covariates connected fixed coefficient (can 0). P_r number covariates connected random coefficient (can 0). J number (greater equal 2) choice alternatives. cov_sym Set TRUE labels symmetric covariance elements. keep_par vector parameter names kept. drop_par vector parameter names get dropped.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/filter_gibbs_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Gibbs samples — filter_gibbs_samples","text":"object class RprobitB_gibbs_samples filtered labels parameter_labels(P_f, P_r, J, C, cov_sym, keep_par, drop_par).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/gibbs_sampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Gibbs sampler for the (mixed) multinomial probit model — gibbs_sampling","title":"Gibbs sampler for the (mixed) multinomial probit model — gibbs_sampling","text":"function draws Gibbs samples posterior distribution (mixed) multinomial probit model parameters.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/gibbs_sampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gibbs sampler for the (mixed) multinomial probit model — gibbs_sampling","text":"","code":"gibbs_sampling(   sufficient_statistics,   prior,   latent_classes,   init,   R,   B,   print_progress )"},{"path":"https://loelschlaeger.de/RprobitB/reference/gibbs_sampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gibbs sampler for the (mixed) multinomial probit model — gibbs_sampling","text":"sufficient_statistics output sufficient_statistics. prior named list parameters prior distributions. See documentation check_prior details parameters can specified. latent_classes Either NULL (latent classes) list parameters specifying number latent classes updating scheme: C: fixed number (greater equal 1) latent classes, set 1 per default. either weight_update = TRUE dp_update = TRUE (.e. classes updated), C equals initial number latent classes. weight_update: boolean, set TRUE weight-based update latent classes. See ... details. dp_update: boolean, set TRUE update latent classes based Dirichlet process. See ... details. Cmax: maximum number latent classes. buffer: number iterations wait next weight-based update latent classes. epsmin: threshold weight (0 1) removing latent class weight-based updating scheme. epsmax: threshold weight (0 1) splitting latent class weight-based updating scheme. distmin: (non-negative) threshold difference class means joining two latent classes weight-based updating scheme. init output set_initial_gibbs_values. R number iterations Gibbs sampler. B length burn-period, .e. non-negative number samples discarded. print_progress boolean, determining whether print Gibbs sampler progress estimated remaining computation time.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/gibbs_sampling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gibbs sampler for the (mixed) multinomial probit model — gibbs_sampling","text":"list Gibbs samples Sigma, alpha (P_f>0), s, b, Omega (P_r>0), (P_r>0) vector classification class memberships decider vector class_sequence length R, rth entry number latent classes iteration r.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/gibbs_sampling.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gibbs sampler for the (mixed) multinomial probit model — gibbs_sampling","text":"function supposed called directly, rather via mcmc.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/is_covariance_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Check covariance matrix properties — is_covariance_matrix","title":"Check covariance matrix properties — is_covariance_matrix","text":"function checks input proper covariance matrix, .e. symmetric, numeric matrix non-negative eigenvalues.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/is_covariance_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check covariance matrix properties — is_covariance_matrix","text":"","code":"is_covariance_matrix(x)"},{"path":"https://loelschlaeger.de/RprobitB/reference/is_covariance_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check covariance matrix properties — is_covariance_matrix","text":"x matrix.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/is_covariance_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check covariance matrix properties — is_covariance_matrix","text":"boolean, TRUE x proper covariance matrix.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/is_covariance_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check covariance matrix properties — is_covariance_matrix","text":"","code":"x <- diag(2) RprobitB:::is_covariance_matrix(x) #> [1] TRUE"},{"path":"https://loelschlaeger.de/RprobitB/reference/log_likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute log-likelihood of an RprobitB_fit. — log_likelihood","title":"Compute log-likelihood of an RprobitB_fit. — log_likelihood","text":"function computes log-likelihood RprobitB_fit.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/log_likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute log-likelihood of an RprobitB_fit. — log_likelihood","text":"","code":"log_likelihood(x, par_set = mean)"},{"path":"https://loelschlaeger.de/RprobitB/reference/log_likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute log-likelihood of an RprobitB_fit. — log_likelihood","text":"x object class RprobitB_fit. par_set Specifying parameter set calculation either function computes posterior point estimate (default mean()), \"true\" select true parameter set, object class RprobitB_parameter.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/log_likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute log-likelihood of an RprobitB_fit. — log_likelihood","text":"log-likelihood value.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/log_likelihood.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute log-likelihood of an RprobitB_fit. — log_likelihood","text":"","code":"data <- simulate_choices(form = choice ~ covariate, N = 10, T = 10, J = 2) x <- mcmc(data) #> Iteration 10 of 10000 Iteration 20 of 10000 Iteration 30 of 10000 Iteration 40 of 10000 Iteration 50 of 10000 Iteration 60 of 10000 Iteration 70 of 10000 Iteration 80 of 10000 Iteration 90 of 10000 Iteration 100 of 10000 Iteration 110 of 10000 Iteration 120 of 10000 Iteration 130 of 10000 Iteration 140 of 10000 Iteration 150 of 10000 Iteration 160 of 10000 Iteration 170 of 10000 Iteration 180 of 10000 Iteration 190 of 10000 Iteration 200 of 10000 Iteration 210 of 10000 Iteration 220 of 10000 Iteration 230 of 10000 Iteration 240 of 10000 Iteration 250 of 10000 Iteration 260 of 10000 Iteration 270 of 10000 Iteration 280 of 10000 Iteration 290 of 10000 Iteration 300 of 10000 Iteration 310 of 10000 Iteration 320 of 10000 Iteration 330 of 10000 Iteration 340 of 10000 Iteration 350 of 10000 Iteration 360 of 10000 Iteration 370 of 10000 Iteration 380 of 10000 Iteration 390 of 10000 Iteration 400 of 10000 Iteration 410 of 10000 Iteration 420 of 10000 Iteration 430 of 10000 Iteration 440 of 10000 Iteration 450 of 10000 Iteration 460 of 10000 Iteration 470 of 10000 Iteration 480 of 10000 Iteration 490 of 10000 Iteration 500 of 10000 Iteration 510 of 10000 Iteration 520 of 10000 Iteration 530 of 10000 Iteration 540 of 10000 Iteration 550 of 10000 Iteration 560 of 10000 Iteration 570 of 10000 Iteration 580 of 10000 Iteration 590 of 10000 Iteration 600 of 10000 Iteration 610 of 10000 Iteration 620 of 10000 Iteration 630 of 10000 Iteration 640 of 10000 Iteration 650 of 10000 Iteration 660 of 10000 Iteration 670 of 10000 Iteration 680 of 10000 Iteration 690 of 10000 Iteration 700 of 10000 Iteration 710 of 10000 Iteration 720 of 10000 Iteration 730 of 10000 Iteration 740 of 10000 Iteration 750 of 10000 Iteration 760 of 10000 Iteration 770 of 10000 Iteration 780 of 10000 Iteration 790 of 10000 Iteration 800 of 10000 Iteration 810 of 10000 Iteration 820 of 10000 Iteration 830 of 10000 Iteration 840 of 10000 Iteration 850 of 10000 Iteration 860 of 10000 Iteration 870 of 10000 Iteration 880 of 10000 Iteration 890 of 10000 Iteration 900 of 10000 Iteration 910 of 10000 Iteration 920 of 10000 Iteration 930 of 10000 Iteration 940 of 10000 Iteration 950 of 10000 Iteration 960 of 10000 Iteration 970 of 10000 Iteration 980 of 10000 Iteration 990 of 10000 Iteration 1000 of 10000 Iteration 1010 of 10000 Iteration 1020 of 10000 Iteration 1030 of 10000 Iteration 1040 of 10000 Iteration 1050 of 10000 Iteration 1060 of 10000 Iteration 1070 of 10000 Iteration 1080 of 10000 Iteration 1090 of 10000 Iteration 1100 of 10000 Iteration 1110 of 10000 Iteration 1120 of 10000 Iteration 1130 of 10000 Iteration 1140 of 10000 Iteration 1150 of 10000 Iteration 1160 of 10000 Iteration 1170 of 10000 Iteration 1180 of 10000 Iteration 1190 of 10000 Iteration 1200 of 10000 Iteration 1210 of 10000 Iteration 1220 of 10000 Iteration 1230 of 10000 Iteration 1240 of 10000 Iteration 1250 of 10000 Iteration 1260 of 10000 Iteration 1270 of 10000 Iteration 1280 of 10000 Iteration 1290 of 10000 Iteration 1300 of 10000 Iteration 1310 of 10000 Iteration 1320 of 10000 Iteration 1330 of 10000 Iteration 1340 of 10000 Iteration 1350 of 10000 Iteration 1360 of 10000 Iteration 1370 of 10000 Iteration 1380 of 10000 Iteration 1390 of 10000 Iteration 1400 of 10000 Iteration 1410 of 10000 Iteration 1420 of 10000 Iteration 1430 of 10000 Iteration 1440 of 10000 Iteration 1450 of 10000 Iteration 1460 of 10000 Iteration 1470 of 10000 Iteration 1480 of 10000 Iteration 1490 of 10000 Iteration 1500 of 10000 Iteration 1510 of 10000 Iteration 1520 of 10000 Iteration 1530 of 10000 Iteration 1540 of 10000 Iteration 1550 of 10000 Iteration 1560 of 10000 Iteration 1570 of 10000 Iteration 1580 of 10000 Iteration 1590 of 10000 Iteration 1600 of 10000 Iteration 1610 of 10000 Iteration 1620 of 10000 Iteration 1630 of 10000 Iteration 1640 of 10000 Iteration 1650 of 10000 Iteration 1660 of 10000 Iteration 1670 of 10000 Iteration 1680 of 10000 Iteration 1690 of 10000 Iteration 1700 of 10000 Iteration 1710 of 10000 Iteration 1720 of 10000 Iteration 1730 of 10000 Iteration 1740 of 10000 Iteration 1750 of 10000 Iteration 1760 of 10000 Iteration 1770 of 10000 Iteration 1780 of 10000 Iteration 1790 of 10000 Iteration 1800 of 10000 Iteration 1810 of 10000 Iteration 1820 of 10000 Iteration 1830 of 10000 Iteration 1840 of 10000 Iteration 1850 of 10000 Iteration 1860 of 10000 Iteration 1870 of 10000 Iteration 1880 of 10000 Iteration 1890 of 10000 Iteration 1900 of 10000 Iteration 1910 of 10000 Iteration 1920 of 10000 Iteration 1930 of 10000 Iteration 1940 of 10000 Iteration 1950 of 10000 Iteration 1960 of 10000 Iteration 1970 of 10000 Iteration 1980 of 10000 Iteration 1990 of 10000 Iteration 2000 of 10000 Iteration 2010 of 10000 Iteration 2020 of 10000 Iteration 2030 of 10000 Iteration 2040 of 10000 Iteration 2050 of 10000 Iteration 2060 of 10000 Iteration 2070 of 10000 Iteration 2080 of 10000 Iteration 2090 of 10000 Iteration 2100 of 10000 Iteration 2110 of 10000 Iteration 2120 of 10000 Iteration 2130 of 10000 Iteration 2140 of 10000 Iteration 2150 of 10000 Iteration 2160 of 10000 Iteration 2170 of 10000 Iteration 2180 of 10000 Iteration 2190 of 10000 Iteration 2200 of 10000 Iteration 2210 of 10000 Iteration 2220 of 10000 Iteration 2230 of 10000 Iteration 2240 of 10000 Iteration 2250 of 10000 Iteration 2260 of 10000 Iteration 2270 of 10000 Iteration 2280 of 10000 Iteration 2290 of 10000 Iteration 2300 of 10000 Iteration 2310 of 10000 Iteration 2320 of 10000 Iteration 2330 of 10000 Iteration 2340 of 10000 Iteration 2350 of 10000 Iteration 2360 of 10000 Iteration 2370 of 10000 Iteration 2380 of 10000 Iteration 2390 of 10000 Iteration 2400 of 10000 Iteration 2410 of 10000 Iteration 2420 of 10000 Iteration 2430 of 10000 Iteration 2440 of 10000 Iteration 2450 of 10000 Iteration 2460 of 10000 Iteration 2470 of 10000 Iteration 2480 of 10000 Iteration 2490 of 10000 Iteration 2500 of 10000 Iteration 2510 of 10000 Iteration 2520 of 10000 Iteration 2530 of 10000 Iteration 2540 of 10000 Iteration 2550 of 10000 Iteration 2560 of 10000 Iteration 2570 of 10000 Iteration 2580 of 10000 Iteration 2590 of 10000 Iteration 2600 of 10000 Iteration 2610 of 10000 Iteration 2620 of 10000 Iteration 2630 of 10000 Iteration 2640 of 10000 Iteration 2650 of 10000 Iteration 2660 of 10000 Iteration 2670 of 10000 Iteration 2680 of 10000 Iteration 2690 of 10000 Iteration 2700 of 10000 Iteration 2710 of 10000 Iteration 2720 of 10000 Iteration 2730 of 10000 Iteration 2740 of 10000 Iteration 2750 of 10000 Iteration 2760 of 10000 Iteration 2770 of 10000 Iteration 2780 of 10000 Iteration 2790 of 10000 Iteration 2800 of 10000 Iteration 2810 of 10000 Iteration 2820 of 10000 Iteration 2830 of 10000 Iteration 2840 of 10000 Iteration 2850 of 10000 Iteration 2860 of 10000 Iteration 2870 of 10000 Iteration 2880 of 10000 Iteration 2890 of 10000 Iteration 2900 of 10000 Iteration 2910 of 10000 Iteration 2920 of 10000 Iteration 2930 of 10000 Iteration 2940 of 10000 Iteration 2950 of 10000 Iteration 2960 of 10000 Iteration 2970 of 10000 Iteration 2980 of 10000 Iteration 2990 of 10000 Iteration 3000 of 10000 Iteration 3010 of 10000 Iteration 3020 of 10000 Iteration 3030 of 10000 Iteration 3040 of 10000 Iteration 3050 of 10000 Iteration 3060 of 10000 Iteration 3070 of 10000 Iteration 3080 of 10000 Iteration 3090 of 10000 Iteration 3100 of 10000 Iteration 3110 of 10000 Iteration 3120 of 10000 Iteration 3130 of 10000 Iteration 3140 of 10000 Iteration 3150 of 10000 Iteration 3160 of 10000 Iteration 3170 of 10000 Iteration 3180 of 10000 Iteration 3190 of 10000 Iteration 3200 of 10000 Iteration 3210 of 10000 Iteration 3220 of 10000 Iteration 3230 of 10000 Iteration 3240 of 10000 Iteration 3250 of 10000 Iteration 3260 of 10000 Iteration 3270 of 10000 Iteration 3280 of 10000 Iteration 3290 of 10000 Iteration 3300 of 10000 Iteration 3310 of 10000 Iteration 3320 of 10000 Iteration 3330 of 10000 Iteration 3340 of 10000 Iteration 3350 of 10000 Iteration 3360 of 10000 Iteration 3370 of 10000 Iteration 3380 of 10000 Iteration 3390 of 10000 Iteration 3400 of 10000 Iteration 3410 of 10000 Iteration 3420 of 10000 Iteration 3430 of 10000 Iteration 3440 of 10000 Iteration 3450 of 10000 Iteration 3460 of 10000 Iteration 3470 of 10000 Iteration 3480 of 10000 Iteration 3490 of 10000 Iteration 3500 of 10000 Iteration 3510 of 10000 Iteration 3520 of 10000 Iteration 3530 of 10000 Iteration 3540 of 10000 Iteration 3550 of 10000 Iteration 3560 of 10000 Iteration 3570 of 10000 Iteration 3580 of 10000 Iteration 3590 of 10000 Iteration 3600 of 10000 Iteration 3610 of 10000 Iteration 3620 of 10000 Iteration 3630 of 10000 Iteration 3640 of 10000 Iteration 3650 of 10000 Iteration 3660 of 10000 Iteration 3670 of 10000 Iteration 3680 of 10000 Iteration 3690 of 10000 Iteration 3700 of 10000 Iteration 3710 of 10000 Iteration 3720 of 10000 Iteration 3730 of 10000 Iteration 3740 of 10000 Iteration 3750 of 10000 Iteration 3760 of 10000 Iteration 3770 of 10000 Iteration 3780 of 10000 Iteration 3790 of 10000 Iteration 3800 of 10000 Iteration 3810 of 10000 Iteration 3820 of 10000 Iteration 3830 of 10000 Iteration 3840 of 10000 Iteration 3850 of 10000 Iteration 3860 of 10000 Iteration 3870 of 10000 Iteration 3880 of 10000 Iteration 3890 of 10000 Iteration 3900 of 10000 Iteration 3910 of 10000 Iteration 3920 of 10000 Iteration 3930 of 10000 Iteration 3940 of 10000 Iteration 3950 of 10000 Iteration 3960 of 10000 Iteration 3970 of 10000 Iteration 3980 of 10000 Iteration 3990 of 10000 Iteration 4000 of 10000 Iteration 4010 of 10000 Iteration 4020 of 10000 Iteration 4030 of 10000 Iteration 4040 of 10000 Iteration 4050 of 10000 Iteration 4060 of 10000 Iteration 4070 of 10000 Iteration 4080 of 10000 Iteration 4090 of 10000 Iteration 4100 of 10000 Iteration 4110 of 10000 Iteration 4120 of 10000 Iteration 4130 of 10000 Iteration 4140 of 10000 Iteration 4150 of 10000 Iteration 4160 of 10000 Iteration 4170 of 10000 Iteration 4180 of 10000 Iteration 4190 of 10000 Iteration 4200 of 10000 Iteration 4210 of 10000 Iteration 4220 of 10000 Iteration 4230 of 10000 Iteration 4240 of 10000 Iteration 4250 of 10000 Iteration 4260 of 10000 Iteration 4270 of 10000 Iteration 4280 of 10000 Iteration 4290 of 10000 Iteration 4300 of 10000 Iteration 4310 of 10000 Iteration 4320 of 10000 Iteration 4330 of 10000 Iteration 4340 of 10000 Iteration 4350 of 10000 Iteration 4360 of 10000 Iteration 4370 of 10000 Iteration 4380 of 10000 Iteration 4390 of 10000 Iteration 4400 of 10000 Iteration 4410 of 10000 Iteration 4420 of 10000 Iteration 4430 of 10000 Iteration 4440 of 10000 Iteration 4450 of 10000 Iteration 4460 of 10000 Iteration 4470 of 10000 Iteration 4480 of 10000 Iteration 4490 of 10000 Iteration 4500 of 10000 Iteration 4510 of 10000 Iteration 4520 of 10000 Iteration 4530 of 10000 Iteration 4540 of 10000 Iteration 4550 of 10000 Iteration 4560 of 10000 Iteration 4570 of 10000 Iteration 4580 of 10000 Iteration 4590 of 10000 Iteration 4600 of 10000 Iteration 4610 of 10000 Iteration 4620 of 10000 Iteration 4630 of 10000 Iteration 4640 of 10000 Iteration 4650 of 10000 Iteration 4660 of 10000 Iteration 4670 of 10000 Iteration 4680 of 10000 Iteration 4690 of 10000 Iteration 4700 of 10000 Iteration 4710 of 10000 Iteration 4720 of 10000 Iteration 4730 of 10000 Iteration 4740 of 10000 Iteration 4750 of 10000 Iteration 4760 of 10000 Iteration 4770 of 10000 Iteration 4780 of 10000 Iteration 4790 of 10000 Iteration 4800 of 10000 Iteration 4810 of 10000 Iteration 4820 of 10000 Iteration 4830 of 10000 Iteration 4840 of 10000 Iteration 4850 of 10000 Iteration 4860 of 10000 Iteration 4870 of 10000 Iteration 4880 of 10000 Iteration 4890 of 10000 Iteration 4900 of 10000 Iteration 4910 of 10000 Iteration 4920 of 10000 Iteration 4930 of 10000 Iteration 4940 of 10000 Iteration 4950 of 10000 Iteration 4960 of 10000 Iteration 4970 of 10000 Iteration 4980 of 10000 Iteration 4990 of 10000 Iteration 5000 of 10000 Iteration 5010 of 10000 Iteration 5020 of 10000 Iteration 5030 of 10000 Iteration 5040 of 10000 Iteration 5050 of 10000 Iteration 5060 of 10000 Iteration 5070 of 10000 Iteration 5080 of 10000 Iteration 5090 of 10000 Iteration 5100 of 10000 Iteration 5110 of 10000 Iteration 5120 of 10000 Iteration 5130 of 10000 Iteration 5140 of 10000 Iteration 5150 of 10000 Iteration 5160 of 10000 Iteration 5170 of 10000 Iteration 5180 of 10000 Iteration 5190 of 10000 Iteration 5200 of 10000 Iteration 5210 of 10000 Iteration 5220 of 10000 Iteration 5230 of 10000 Iteration 5240 of 10000 Iteration 5250 of 10000 Iteration 5260 of 10000 Iteration 5270 of 10000 Iteration 5280 of 10000 Iteration 5290 of 10000 Iteration 5300 of 10000 Iteration 5310 of 10000 Iteration 5320 of 10000 Iteration 5330 of 10000 Iteration 5340 of 10000 Iteration 5350 of 10000 Iteration 5360 of 10000 Iteration 5370 of 10000 Iteration 5380 of 10000 Iteration 5390 of 10000 Iteration 5400 of 10000 Iteration 5410 of 10000 Iteration 5420 of 10000 Iteration 5430 of 10000 Iteration 5440 of 10000 Iteration 5450 of 10000 Iteration 5460 of 10000 Iteration 5470 of 10000 Iteration 5480 of 10000 Iteration 5490 of 10000 Iteration 5500 of 10000 Iteration 5510 of 10000 Iteration 5520 of 10000 Iteration 5530 of 10000 Iteration 5540 of 10000 Iteration 5550 of 10000 Iteration 5560 of 10000 Iteration 5570 of 10000 Iteration 5580 of 10000 Iteration 5590 of 10000 Iteration 5600 of 10000 Iteration 5610 of 10000 Iteration 5620 of 10000 Iteration 5630 of 10000 Iteration 5640 of 10000 Iteration 5650 of 10000 Iteration 5660 of 10000 Iteration 5670 of 10000 Iteration 5680 of 10000 Iteration 5690 of 10000 Iteration 5700 of 10000 Iteration 5710 of 10000 Iteration 5720 of 10000 Iteration 5730 of 10000 Iteration 5740 of 10000 Iteration 5750 of 10000 Iteration 5760 of 10000 Iteration 5770 of 10000 Iteration 5780 of 10000 Iteration 5790 of 10000 Iteration 5800 of 10000 Iteration 5810 of 10000 Iteration 5820 of 10000 Iteration 5830 of 10000 Iteration 5840 of 10000 Iteration 5850 of 10000 Iteration 5860 of 10000 Iteration 5870 of 10000 Iteration 5880 of 10000 Iteration 5890 of 10000 Iteration 5900 of 10000 Iteration 5910 of 10000 Iteration 5920 of 10000 Iteration 5930 of 10000 Iteration 5940 of 10000 Iteration 5950 of 10000 Iteration 5960 of 10000 Iteration 5970 of 10000 Iteration 5980 of 10000 Iteration 5990 of 10000 Iteration 6000 of 10000 Iteration 6010 of 10000 Iteration 6020 of 10000 Iteration 6030 of 10000 Iteration 6040 of 10000 Iteration 6050 of 10000 Iteration 6060 of 10000 Iteration 6070 of 10000 Iteration 6080 of 10000 Iteration 6090 of 10000 Iteration 6100 of 10000 Iteration 6110 of 10000 Iteration 6120 of 10000 Iteration 6130 of 10000 Iteration 6140 of 10000 Iteration 6150 of 10000 Iteration 6160 of 10000 Iteration 6170 of 10000 Iteration 6180 of 10000 Iteration 6190 of 10000 Iteration 6200 of 10000 Iteration 6210 of 10000 Iteration 6220 of 10000 Iteration 6230 of 10000 Iteration 6240 of 10000 Iteration 6250 of 10000 Iteration 6260 of 10000 Iteration 6270 of 10000 Iteration 6280 of 10000 Iteration 6290 of 10000 Iteration 6300 of 10000 Iteration 6310 of 10000 Iteration 6320 of 10000 Iteration 6330 of 10000 Iteration 6340 of 10000 Iteration 6350 of 10000 Iteration 6360 of 10000 Iteration 6370 of 10000 Iteration 6380 of 10000 Iteration 6390 of 10000 Iteration 6400 of 10000 Iteration 6410 of 10000 Iteration 6420 of 10000 Iteration 6430 of 10000 Iteration 6440 of 10000 Iteration 6450 of 10000 Iteration 6460 of 10000 Iteration 6470 of 10000 Iteration 6480 of 10000 Iteration 6490 of 10000 Iteration 6500 of 10000 Iteration 6510 of 10000 Iteration 6520 of 10000 Iteration 6530 of 10000 Iteration 6540 of 10000 Iteration 6550 of 10000 Iteration 6560 of 10000 Iteration 6570 of 10000 Iteration 6580 of 10000 Iteration 6590 of 10000 Iteration 6600 of 10000 Iteration 6610 of 10000 Iteration 6620 of 10000 Iteration 6630 of 10000 Iteration 6640 of 10000 Iteration 6650 of 10000 Iteration 6660 of 10000 Iteration 6670 of 10000 Iteration 6680 of 10000 Iteration 6690 of 10000 Iteration 6700 of 10000 Iteration 6710 of 10000 Iteration 6720 of 10000 Iteration 6730 of 10000 Iteration 6740 of 10000 Iteration 6750 of 10000 Iteration 6760 of 10000 Iteration 6770 of 10000 Iteration 6780 of 10000 Iteration 6790 of 10000 Iteration 6800 of 10000 Iteration 6810 of 10000 Iteration 6820 of 10000 Iteration 6830 of 10000 Iteration 6840 of 10000 Iteration 6850 of 10000 Iteration 6860 of 10000 Iteration 6870 of 10000 Iteration 6880 of 10000 Iteration 6890 of 10000 Iteration 6900 of 10000 Iteration 6910 of 10000 Iteration 6920 of 10000 Iteration 6930 of 10000 Iteration 6940 of 10000 Iteration 6950 of 10000 Iteration 6960 of 10000 Iteration 6970 of 10000 Iteration 6980 of 10000 Iteration 6990 of 10000 Iteration 7000 of 10000 Iteration 7010 of 10000 Iteration 7020 of 10000 Iteration 7030 of 10000 Iteration 7040 of 10000 Iteration 7050 of 10000 Iteration 7060 of 10000 Iteration 7070 of 10000 Iteration 7080 of 10000 Iteration 7090 of 10000 Iteration 7100 of 10000 Iteration 7110 of 10000 Iteration 7120 of 10000 Iteration 7130 of 10000 Iteration 7140 of 10000 Iteration 7150 of 10000 Iteration 7160 of 10000 Iteration 7170 of 10000 Iteration 7180 of 10000 Iteration 7190 of 10000 Iteration 7200 of 10000 Iteration 7210 of 10000 Iteration 7220 of 10000 Iteration 7230 of 10000 Iteration 7240 of 10000 Iteration 7250 of 10000 Iteration 7260 of 10000 Iteration 7270 of 10000 Iteration 7280 of 10000 Iteration 7290 of 10000 Iteration 7300 of 10000 Iteration 7310 of 10000 Iteration 7320 of 10000 Iteration 7330 of 10000 Iteration 7340 of 10000 Iteration 7350 of 10000 Iteration 7360 of 10000 Iteration 7370 of 10000 Iteration 7380 of 10000 Iteration 7390 of 10000 Iteration 7400 of 10000 Iteration 7410 of 10000 Iteration 7420 of 10000 Iteration 7430 of 10000 Iteration 7440 of 10000 Iteration 7450 of 10000 Iteration 7460 of 10000 Iteration 7470 of 10000 Iteration 7480 of 10000 Iteration 7490 of 10000 Iteration 7500 of 10000 Iteration 7510 of 10000 Iteration 7520 of 10000 Iteration 7530 of 10000 Iteration 7540 of 10000 Iteration 7550 of 10000 Iteration 7560 of 10000 Iteration 7570 of 10000 Iteration 7580 of 10000 Iteration 7590 of 10000 Iteration 7600 of 10000 Iteration 7610 of 10000 Iteration 7620 of 10000 Iteration 7630 of 10000 Iteration 7640 of 10000 Iteration 7650 of 10000 Iteration 7660 of 10000 Iteration 7670 of 10000 Iteration 7680 of 10000 Iteration 7690 of 10000 Iteration 7700 of 10000 Iteration 7710 of 10000 Iteration 7720 of 10000 Iteration 7730 of 10000 Iteration 7740 of 10000 Iteration 7750 of 10000 Iteration 7760 of 10000 Iteration 7770 of 10000 Iteration 7780 of 10000 Iteration 7790 of 10000 Iteration 7800 of 10000 Iteration 7810 of 10000 Iteration 7820 of 10000 Iteration 7830 of 10000 Iteration 7840 of 10000 Iteration 7850 of 10000 Iteration 7860 of 10000 Iteration 7870 of 10000 Iteration 7880 of 10000 Iteration 7890 of 10000 Iteration 7900 of 10000 Iteration 7910 of 10000 Iteration 7920 of 10000 Iteration 7930 of 10000 Iteration 7940 of 10000 Iteration 7950 of 10000 Iteration 7960 of 10000 Iteration 7970 of 10000 Iteration 7980 of 10000 Iteration 7990 of 10000 Iteration 8000 of 10000 Iteration 8010 of 10000 Iteration 8020 of 10000 Iteration 8030 of 10000 Iteration 8040 of 10000 Iteration 8050 of 10000 Iteration 8060 of 10000 Iteration 8070 of 10000 Iteration 8080 of 10000 Iteration 8090 of 10000 Iteration 8100 of 10000 Iteration 8110 of 10000 Iteration 8120 of 10000 Iteration 8130 of 10000 Iteration 8140 of 10000 Iteration 8150 of 10000 Iteration 8160 of 10000 Iteration 8170 of 10000 Iteration 8180 of 10000 Iteration 8190 of 10000 Iteration 8200 of 10000 Iteration 8210 of 10000 Iteration 8220 of 10000 Iteration 8230 of 10000 Iteration 8240 of 10000 Iteration 8250 of 10000 Iteration 8260 of 10000 Iteration 8270 of 10000 Iteration 8280 of 10000 Iteration 8290 of 10000 Iteration 8300 of 10000 Iteration 8310 of 10000 Iteration 8320 of 10000 Iteration 8330 of 10000 Iteration 8340 of 10000 Iteration 8350 of 10000 Iteration 8360 of 10000 Iteration 8370 of 10000 Iteration 8380 of 10000 Iteration 8390 of 10000 Iteration 8400 of 10000 Iteration 8410 of 10000 Iteration 8420 of 10000 Iteration 8430 of 10000 Iteration 8440 of 10000 Iteration 8450 of 10000 Iteration 8460 of 10000 Iteration 8470 of 10000 Iteration 8480 of 10000 Iteration 8490 of 10000 Iteration 8500 of 10000 Iteration 8510 of 10000 Iteration 8520 of 10000 Iteration 8530 of 10000 Iteration 8540 of 10000 Iteration 8550 of 10000 Iteration 8560 of 10000 Iteration 8570 of 10000 Iteration 8580 of 10000 Iteration 8590 of 10000 Iteration 8600 of 10000 Iteration 8610 of 10000 Iteration 8620 of 10000 Iteration 8630 of 10000 Iteration 8640 of 10000 Iteration 8650 of 10000 Iteration 8660 of 10000 Iteration 8670 of 10000 Iteration 8680 of 10000 Iteration 8690 of 10000 Iteration 8700 of 10000 Iteration 8710 of 10000 Iteration 8720 of 10000 Iteration 8730 of 10000 Iteration 8740 of 10000 Iteration 8750 of 10000 Iteration 8760 of 10000 Iteration 8770 of 10000 Iteration 8780 of 10000 Iteration 8790 of 10000 Iteration 8800 of 10000 Iteration 8810 of 10000 Iteration 8820 of 10000 Iteration 8830 of 10000 Iteration 8840 of 10000 Iteration 8850 of 10000 Iteration 8860 of 10000 Iteration 8870 of 10000 Iteration 8880 of 10000 Iteration 8890 of 10000 Iteration 8900 of 10000 Iteration 8910 of 10000 Iteration 8920 of 10000 Iteration 8930 of 10000 Iteration 8940 of 10000 Iteration 8950 of 10000 Iteration 8960 of 10000 Iteration 8970 of 10000 Iteration 8980 of 10000 Iteration 8990 of 10000 Iteration 9000 of 10000 Iteration 9010 of 10000 Iteration 9020 of 10000 Iteration 9030 of 10000 Iteration 9040 of 10000 Iteration 9050 of 10000 Iteration 9060 of 10000 Iteration 9070 of 10000 Iteration 9080 of 10000 Iteration 9090 of 10000 Iteration 9100 of 10000 Iteration 9110 of 10000 Iteration 9120 of 10000 Iteration 9130 of 10000 Iteration 9140 of 10000 Iteration 9150 of 10000 Iteration 9160 of 10000 Iteration 9170 of 10000 Iteration 9180 of 10000 Iteration 9190 of 10000 Iteration 9200 of 10000 Iteration 9210 of 10000 Iteration 9220 of 10000 Iteration 9230 of 10000 Iteration 9240 of 10000 Iteration 9250 of 10000 Iteration 9260 of 10000 Iteration 9270 of 10000 Iteration 9280 of 10000 Iteration 9290 of 10000 Iteration 9300 of 10000 Iteration 9310 of 10000 Iteration 9320 of 10000 Iteration 9330 of 10000 Iteration 9340 of 10000 Iteration 9350 of 10000 Iteration 9360 of 10000 Iteration 9370 of 10000 Iteration 9380 of 10000 Iteration 9390 of 10000 Iteration 9400 of 10000 Iteration 9410 of 10000 Iteration 9420 of 10000 Iteration 9430 of 10000 Iteration 9440 of 10000 Iteration 9450 of 10000 Iteration 9460 of 10000 Iteration 9470 of 10000 Iteration 9480 of 10000 Iteration 9490 of 10000 Iteration 9500 of 10000 Iteration 9510 of 10000 Iteration 9520 of 10000 Iteration 9530 of 10000 Iteration 9540 of 10000 Iteration 9550 of 10000 Iteration 9560 of 10000 Iteration 9570 of 10000 Iteration 9580 of 10000 Iteration 9590 of 10000 Iteration 9600 of 10000 Iteration 9610 of 10000 Iteration 9620 of 10000 Iteration 9630 of 10000 Iteration 9640 of 10000 Iteration 9650 of 10000 Iteration 9660 of 10000 Iteration 9670 of 10000 Iteration 9680 of 10000 Iteration 9690 of 10000 Iteration 9700 of 10000 Iteration 9710 of 10000 Iteration 9720 of 10000 Iteration 9730 of 10000 Iteration 9740 of 10000 Iteration 9750 of 10000 Iteration 9760 of 10000 Iteration 9770 of 10000 Iteration 9780 of 10000 Iteration 9790 of 10000 Iteration 9800 of 10000 Iteration 9810 of 10000 Iteration 9820 of 10000 Iteration 9830 of 10000 Iteration 9840 of 10000 Iteration 9850 of 10000 Iteration 9860 of 10000 Iteration 9870 of 10000 Iteration 9880 of 10000 Iteration 9890 of 10000 Iteration 9900 of 10000 Iteration 9910 of 10000 Iteration 9920 of 10000 Iteration 9930 of 10000 Iteration 9940 of 10000 Iteration 9950 of 10000 Iteration 9960 of 10000 Iteration 9970 of 10000 Iteration 9980 of 10000 Iteration 9990 of 10000 Iteration 10000 of 10000 log_likelihood(x) #> [1] -36.26365"},{"path":"https://loelschlaeger.de/RprobitB/reference/mcmc.html","id":null,"dir":"Reference","previous_headings":"","what":"Probit model fitting via Markov chain Monte Carlo simulation. — mcmc","title":"Probit model fitting via Markov chain Monte Carlo simulation. — mcmc","text":"function performs Markov chain Monte Carlo simulation fitting (latent class) (mixed) (multinomial) probit model discrete choice data.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/mcmc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probit model fitting via Markov chain Monte Carlo simulation. — mcmc","text":"","code":"mcmc(   data,   scale = list(parameter = \"s\", index = 1, value = 1),   R = 10000,   B = R/2,   Q = 1,   print_progress = TRUE,   prior = NULL,   latent_classes = NULL,   seed = NULL )"},{"path":"https://loelschlaeger.de/RprobitB/reference/mcmc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probit model fitting via Markov chain Monte Carlo simulation. — mcmc","text":"data object class RprobitB_data. scale named list three elements, determining parameter normalization respect utility scale: parameter: Either \"\" (linear coefficient \"alpha\") \"s\" (variance error-term covariance matrix \"Sigma\"). index: index parameter gets fixed. value: value fixed parameter. R number iterations Gibbs sampler. B length burn-period, .e. non-negative number samples discarded. Q thinning factor Gibbs samples, .e. every Qth sample kept. print_progress boolean, determining whether print Gibbs sampler progress estimated remaining computation time. prior named list parameters prior distributions. See documentation check_prior details parameters can specified. latent_classes Either NULL (latent classes) list parameters specifying number latent classes updating scheme: C: fixed number (greater equal 1) latent classes, set 1 per default. either weight_update = TRUE dp_update = TRUE (.e. classes updated), C equals initial number latent classes. weight_update: boolean, set TRUE weight-based update latent classes. See ... details. dp_update: boolean, set TRUE update latent classes based Dirichlet process. See ... details. Cmax: maximum number latent classes. buffer: number iterations wait next weight-based update latent classes. epsmin: threshold weight (0 1) removing latent class weight-based updating scheme. epsmax: threshold weight (0 1) splitting latent class weight-based updating scheme. distmin: (non-negative) threshold difference class means joining two latent classes weight-based updating scheme. seed Set seed Gibbs sampling.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/mcmc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probit model fitting via Markov chain Monte Carlo simulation. — mcmc","text":"object class RprobitB_fit.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/mcmc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Probit model fitting via Markov chain Monte Carlo simulation. — mcmc","text":"See vignette \"Model fitting\" details: vignette(\"model_fitting\", package = \"RprobitB\").","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/mcmc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probit model fitting via Markov chain Monte Carlo simulation. — mcmc","text":"","code":"if (FALSE) { ### probit model p <- simulate_choices(form = choice ~ var | 0, N = 100, T = 10, J = 2, seed = 1) m1 <- mcmc(data = p, seed = 1)  ### multinomial probit model mnp <- simulate_choices(form = choice ~ var | 0, N = 100, T = 10, J = 3, seed = 1) m2 <- mcmc(data = mnp, seed = 1)  ### mixed multinomial probit model mmnp <- simulate_choices(   form = choice ~ 0 | var, N = 100, T = 10, J = 3, re = \"var\",   seed = 1 ) m3 <- mcmc(data = mmnp, seed = 1)  ### mixed multinomial probit model with 2 latent classes lcmmnp <- simulate_choices(   form = choice ~ 0 | var, N = 100, T = 10, J = 3,   re = \"var\", seed = 1, C = 2 ) m4 <- mcmc(data = lcmmnp, latent_classes = list(\"C\" = 2), seed = 1)  ### update of latent classes m5 <- simulate_choices(data = lcmmnp, latent_classes = list(\"weight_update\" = TRUE), seed = 1) }"},{"path":"https://loelschlaeger.de/RprobitB/reference/mml.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximation of the model's marginal likelihood — mml","title":"Approximation of the model's marginal likelihood — mml","text":"function approximates model's marginal likelihood via different approximation methods.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/mml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximation of the model's marginal likelihood — mml","text":"","code":"mml(   x,   S = 100,   method = \"pame\",   print_progress = TRUE,   check_conv = TRUE,   ncores = 1,   seq = FALSE )"},{"path":"https://loelschlaeger.de/RprobitB/reference/mml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Approximation of the model's marginal likelihood — mml","text":"x object class RprobitB_fit. S sample size. method approximation method, one \"pame\" prior arithmetic mean estimate, \"phme\" posterior harmonic mean estimate. print_progress Set TRUE print computation progress. check_conv Set TRUE plot convergence behavior approximation. ncores Computation parallelized, set number cores. seq Set TRUE add attribute \"seq\" output vector containing approximation sequence.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/mml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Approximation of the model's marginal likelihood — mml","text":"model's marginal likelihood value.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/mml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Approximation of the model's marginal likelihood — mml","text":"model's marginal likelihood \\(p(y\\mid M)\\) model \\(M\\) data \\(y\\) required computation Bayes factors. general, term closed form must approximated numerically. function offers following approximation methods. strong law large numbers garantees (almost surely), following approximations converge model's marginal likelihood sample size S goes infinity.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/mml.html","id":"the-prior-arithmetic-mean-estimator","dir":"Reference","previous_headings":"","what":"The prior arithmetic mean estimator","title":"Approximation of the model's marginal likelihood — mml","text":"Set method = \"pame\" compute prior arithmetic mean estimate. approach, S samples \\(\\theta_1,\\dots,\\theta_S\\) drawn model's prior distribution. , $$p(y\\mid M) = \\mathbb{E}_\\text{prior} p(y\\mid \\theta,M) \\approx \\frac{1}{S} \\sum_s p(y\\mid \\theta_n,M)$$.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/mml.html","id":"the-posterior-harmonic-mean-estimator","dir":"Reference","previous_headings":"","what":"The posterior harmonic mean estimator","title":"Approximation of the model's marginal likelihood — mml","text":"Set method = \"phme\" compute posterior harmonic mean estimate. approach, S samples \\(\\theta_1,\\dots,\\theta_S\\) drawn model's posterior distribution. , $$p(y\\mid M) = \\left(\\mathbb{E}_\\text{posterior} p(y\\mid \\theta,M)^{-1} \\right)^{-1} \\approx \\left( \\frac{1}{S} \\sum_s 1/p(y\\mid \\theta_n,M) \\right) ^{-1}$$.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/mml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Approximation of the model's marginal likelihood — mml","text":"","code":"data <- simulate_choices(   form = choice ~ cov | 0,   N = 10,   T = 10,   J = 2,   seed = 1 ) x <- mcmc(data, R = 1000) #> Iteration 10 of 1000 Iteration 20 of 1000 Iteration 30 of 1000 Iteration 40 of 1000 Iteration 50 of 1000 Iteration 60 of 1000 Iteration 70 of 1000 Iteration 80 of 1000 Iteration 90 of 1000 Iteration 100 of 1000 Iteration 110 of 1000 Iteration 120 of 1000 Iteration 130 of 1000 Iteration 140 of 1000 Iteration 150 of 1000 Iteration 160 of 1000 Iteration 170 of 1000 Iteration 180 of 1000 Iteration 190 of 1000 Iteration 200 of 1000 Iteration 210 of 1000 Iteration 220 of 1000 Iteration 230 of 1000 Iteration 240 of 1000 Iteration 250 of 1000 Iteration 260 of 1000 Iteration 270 of 1000 Iteration 280 of 1000 Iteration 290 of 1000 Iteration 300 of 1000 Iteration 310 of 1000 Iteration 320 of 1000 Iteration 330 of 1000 Iteration 340 of 1000 Iteration 350 of 1000 Iteration 360 of 1000 Iteration 370 of 1000 Iteration 380 of 1000 Iteration 390 of 1000 Iteration 400 of 1000 Iteration 410 of 1000 Iteration 420 of 1000 Iteration 430 of 1000 Iteration 440 of 1000 Iteration 450 of 1000 Iteration 460 of 1000 Iteration 470 of 1000 Iteration 480 of 1000 Iteration 490 of 1000 Iteration 500 of 1000 Iteration 510 of 1000 Iteration 520 of 1000 Iteration 530 of 1000 Iteration 540 of 1000 Iteration 550 of 1000 Iteration 560 of 1000 Iteration 570 of 1000 Iteration 580 of 1000 Iteration 590 of 1000 Iteration 600 of 1000 Iteration 610 of 1000 Iteration 620 of 1000 Iteration 630 of 1000 Iteration 640 of 1000 Iteration 650 of 1000 Iteration 660 of 1000 Iteration 670 of 1000 Iteration 680 of 1000 Iteration 690 of 1000 Iteration 700 of 1000 Iteration 710 of 1000 Iteration 720 of 1000 Iteration 730 of 1000 Iteration 740 of 1000 Iteration 750 of 1000 Iteration 760 of 1000 Iteration 770 of 1000 Iteration 780 of 1000 Iteration 790 of 1000 Iteration 800 of 1000 Iteration 810 of 1000 Iteration 820 of 1000 Iteration 830 of 1000 Iteration 840 of 1000 Iteration 850 of 1000 Iteration 860 of 1000 Iteration 870 of 1000 Iteration 880 of 1000 Iteration 890 of 1000 Iteration 900 of 1000 Iteration 910 of 1000 Iteration 920 of 1000 Iteration 930 of 1000 Iteration 940 of 1000 Iteration 950 of 1000 Iteration 960 of 1000 Iteration 970 of 1000 Iteration 980 of 1000 Iteration 990 of 1000 Iteration 1000 of 1000 RprobitB:::mml(x = x, S = 10, method = \"pame\", check_conv = TRUE)  #> [1] 1.114556e-12"},{"path":"https://loelschlaeger.de/RprobitB/reference/model_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare fitted models. — model_selection","title":"Compare fitted models. — model_selection","text":"function guides process model selection providing criteria model comparison.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/model_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare fitted models. — model_selection","text":"","code":"model_selection(   ...,   criteria = c(\"WAIC\", \"npar\", \"LL\", \"AIC\", \"BIC\", \"BF\", \"PA\"),   sort_by = NULL,   S = 100,   print_progress = TRUE,   ncores = 1 )"},{"path":"https://loelschlaeger.de/RprobitB/reference/model_selection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare fitted models. — model_selection","text":"... One objects class RprobitB_fit. criteria vector one following characters: \"WAIC\" WAIC value, \"npar\" number model parameters. \"LL\" log-likelihood value, \"AIC\" AIC value, \"BIC\" BIC value, \"BF\" Bayes factor, \"PA\" prediction accuracy (explaining observed choices), sort_by Either NULL one element criteria, output sorted. S, print_progress, ncores Passed waic mml.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/model_selection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare fitted models. — model_selection","text":"data frame, models rows, criteria columns.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/model_selection.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare fitted models. — model_selection","text":"See vignette model selection details criteria.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/opening_choice.html","id":null,"dir":"Reference","previous_headings":"","what":"Choice of a chess opening — opening_choice","title":"Choice of a chess opening — opening_choice","text":"dataset includes first move choices White player chess games.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/opening_choice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Choice of a chess opening — opening_choice","text":"","code":"data(opening_choice)"},{"path":"https://loelschlaeger.de/RprobitB/reference/opening_choice.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Choice of a chess opening — opening_choice","text":"data frame containing first move choices White player 549 chess games. consists following columns: fideid, unique identifier player provided FIDE, move, chosen first move, country, player's federation, sex, player's gender, age, player's age, rating, player's rating, opponent_country, opponent's federation, opponent_sex, opponent's gender, opponent_country, opponent's federation, age_difference, player's age minus opponent's age, info, short description pairing.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/opening_choice.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Choice of a chess opening — opening_choice","text":"opening moves scraped Week Chess Archive https://theweekinchess.com/twic issues 1416, 1417, 1418, 1419, 1420. player's metadata (country, sex, age, rating) added matching pairings names official FIDE rating list http://ratings.fide.com 2022-01-25. Ambiguous matches dropped.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/overview_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Overview of effects. — overview_effects","title":"Overview of effects. — overview_effects","text":"function gives overview linear coefficients whether connected random effects.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/overview_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Overview of effects. — overview_effects","text":"","code":"overview_effects(form, re = NULL, alternatives)"},{"path":"https://loelschlaeger.de/RprobitB/reference/overview_effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Overview of effects. — overview_effects","text":"form formula object used specify probit model. structure choice ~ | B | C, names alternative choice situation specific covariates generic coefficient, B names choice situation specific covariates alternative specific coefficients, C names alternative choice situation specific covariates alternative specific coefficients. Separate multiple covariates one type + sign. default, alternative specific constants (ASCs) added model (except last alternative). can removed adding +0 second spot. See vignette vignette(\"data_management\", package = \"RprobitB\") details. re character (vector) covariates form random effects. re = NULL (default), random effects. random effects alternative specific constants, include \"ASC\" re. alternatives character vector names choice alternatives. specified, choice set defined observed choices.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/overview_effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Overview of effects. — overview_effects","text":"data frame coefficient names booleans indicating whether connected random effects.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/overview_effects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Overview of effects. — overview_effects","text":"","code":"form <- choice ~ price + time + comfort + change | 1 re <- c(\"price\", \"time\") alternatives <- c(\"A\", \"B\") overview_effects(form = form, re = re, alternatives = alternatives) #>      name    re #> 1 comfort FALSE #> 2  change FALSE #> 3   ASC_A FALSE #> 4   price  TRUE #> 5    time  TRUE"},{"path":"https://loelschlaeger.de/RprobitB/reference/parameter_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Create parameters labels — parameter_labels","title":"Create parameters labels — parameter_labels","text":"function model parameter labels.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/parameter_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create parameters labels — parameter_labels","text":"","code":"parameter_labels(   P_f,   P_r,   J,   C,   cov_sym,   keep_par = c(\"s\", \"alpha\", \"b\", \"Omega\", \"Sigma\"),   drop_par = NULL )"},{"path":"https://loelschlaeger.de/RprobitB/reference/parameter_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create parameters labels — parameter_labels","text":"P_f number covariates connected fixed coefficient (can 0). P_r number covariates connected random coefficient (can 0). J number (greater equal 2) choice alternatives. cov_sym Set TRUE labels symmetric covariance elements. keep_par vector parameter names kept. drop_par vector parameter names get dropped.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/parameter_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create parameters labels — parameter_labels","text":"list labels selected model parameters.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/parameter_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create parameters labels — parameter_labels","text":"","code":"RprobitB:::parameter_labels(P_f = 1, P_r = 2, J = 3, C = 2, cov_sym = TRUE) #> $s #> [1] \"1\" \"2\" #>  #> $alpha #> [1] \"1\" #>  #> $b #> [1] \"1.1\" \"1.2\" \"2.1\" \"2.2\" #>  #> $Omega #> [1] \"1.1,1\" \"1.1,2\" \"1.2,1\" \"1.2,2\" \"2.1,1\" \"2.1,2\" \"2.2,1\" \"2.2,2\" #>  #> $Sigma #> [1] \"1,1\" \"1,2\" \"2,1\" \"2,2\" #>"},{"path":"https://loelschlaeger.de/RprobitB/reference/plot.RprobitB_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for RprobitB_data — plot.RprobitB_data","title":"Plot method for RprobitB_data — plot.RprobitB_data","text":"function plot method object class RprobitB_data.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot.RprobitB_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for RprobitB_data — plot.RprobitB_data","text":"","code":"# S3 method for RprobitB_data plot(x, alpha = 0.9, position = \"identity\", ...)"},{"path":"https://loelschlaeger.de/RprobitB/reference/plot.RprobitB_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for RprobitB_data — plot.RprobitB_data","text":"x object class RprobitB_data. alpha, position Passed ggplot. ... Ignored.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot.RprobitB_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for RprobitB_data — plot.RprobitB_data","text":"return value. Draws plot current device.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot.RprobitB_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for RprobitB_data — plot.RprobitB_data","text":"","code":"data <- simulate_choices(  form = choice ~ cost | 0,  N = 100,  T = 10,  J = 2,  alternatives = c(\"bus\", \"car\"),  alpha = -1 ) plot(data)"},{"path":"https://loelschlaeger.de/RprobitB/reference/plot.RprobitB_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for RprobitB_fit — plot.RprobitB_fit","title":"Plot method for RprobitB_fit — plot.RprobitB_fit","text":"function plot method object class RprobitB_fit.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot.RprobitB_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for RprobitB_fit — plot.RprobitB_fit","text":"","code":"# S3 method for RprobitB_fit plot(x, type = \"effects\", ignore = NULL, ...)"},{"path":"https://loelschlaeger.de/RprobitB/reference/plot.RprobitB_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for RprobitB_fit — plot.RprobitB_fit","text":"x object class RprobitB_fit. type type plot, can one : \"effects\" (default) visualizing linear effects. \"mixture\" visualizing mixture distribution. \"acf\" autocorrelation plots Gibbs samples. \"trace\" trace plots Gibbs samples. \"class_seq\" visualizing sequence class numbers. \"class_allocation\" visualizing class allocation (P_r = 2) final Gibbs sampler iteration. See details section visualization options. ignore character (vector) covariate parameter names get visualized. ... Additional parameters, see details section.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot.RprobitB_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for RprobitB_fit — plot.RprobitB_fit","text":"return value. Draws plot current device.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot.RprobitB_fit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot method for RprobitB_fit — plot.RprobitB_fit","text":"plot types additional options can specified via submitting following parameters ellipsis arguments.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot.RprobitB_fit.html","id":"-type-class-allocation-","dir":"Reference","previous_headings":"","what":"\"type = class_allocation\"","title":"Plot method for RprobitB_fit — plot.RprobitB_fit","text":"numeric vector iterations plotting class allocation different iterations Gibbs sampler. numeric perc 0 1 draw perc percentile ellipsoids underlying Gaussian distributions (perc = 0.95 per default). numeric sleep, number seconds pause plotting. default 1.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot_class_allocation.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot class allocation (for P_r = 2 only) — plot_class_allocation","title":"Plot class allocation (for P_r = 2 only) — plot_class_allocation","text":"function plots allocation decision-maker specific coefficient vectors beta given allocation vector z, class means b, class covariance matrices Omega.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot_class_allocation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot class allocation (for P_r = 2 only) — plot_class_allocation","text":"","code":"plot_class_allocation(beta, z, b, Omega, ...)"},{"path":"https://loelschlaeger.de/RprobitB/reference/plot_class_allocation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot class allocation (for P_r = 2 only) — plot_class_allocation","text":"beta matrix decision-maker specific coefficient vectors dimension P_r x N. Set NA P_r = 0. z vector allocation variables length N. Set NA P_r = 0. b matrix class means columns dimension P_r x C. Set NA P_r = 0. Omega matrix class covariance matrices columns dimension P_r*P_r x C. Set NA P_r = 0. ... Optional visualization parameters: colors, character vector color specifications, perc, numeric 0 1 draw perc percentile ellipsoids underlying Gaussian distributions (perc = 0.95 per default), r, current iteration number Gibbs sampler displayed legend, sleep, number seconds pause plotting.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot_class_allocation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot class allocation (for P_r = 2 only) — plot_class_allocation","text":"return value. Draws plot current device.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot_class_allocation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot class allocation (for P_r = 2 only) — plot_class_allocation","text":"two-dimensional case, .e. P_r = 2.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/plot_class_allocation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot class allocation (for P_r = 2 only) — plot_class_allocation","text":"","code":"b <- matrix(c(-1,1,1,1), ncol = 2) Omega <- matrix(c(0.8,0.5,0.5,1,0.5,-0.2,-0.2,0.3), ncol = 2) z <- rep(1:2, each = 10) beta <- sapply(z, function(z) rmvnorm(mu = b[,z], Sigma = matrix(Omega[,z], ncol = 2))) RprobitB:::plot_class_allocation(beta = beta, z = z, b = b, Omega = Omega,                                  colors = c(\"red\",\"blue\"), perc = 0.5, r = 1)"},{"path":"https://loelschlaeger.de/RprobitB/reference/point_estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute point estimates of an RprobitB_fit. — point_estimates","title":"Compute point estimates of an RprobitB_fit. — point_estimates","text":"function computes point estimates RprobitB_fit. Per default, mean Gibbs samples used point estimate. However, statistic computes single numeric value vector Gibbs samples can specified FUN.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/point_estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute point estimates of an RprobitB_fit. — point_estimates","text":"","code":"point_estimates(x, FUN = mean)"},{"path":"https://loelschlaeger.de/RprobitB/reference/point_estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute point estimates of an RprobitB_fit. — point_estimates","text":"x object class RprobitB_fit. FUN function computes single numeric value vector numeric values.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/point_estimates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute point estimates of an RprobitB_fit. — point_estimates","text":"object class RprobitB_parameter.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/point_estimates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute point estimates of an RprobitB_fit. — point_estimates","text":"","code":"data <- simulate_choices(form = choice ~ covariate, N = 10, T = 10, J = 2) model <- mcmc(data) #> Iteration 10 of 10000 Iteration 20 of 10000 Iteration 30 of 10000 Iteration 40 of 10000 Iteration 50 of 10000 Iteration 60 of 10000 Iteration 70 of 10000 Iteration 80 of 10000 Iteration 90 of 10000 Iteration 100 of 10000 Iteration 110 of 10000 Iteration 120 of 10000 Iteration 130 of 10000 Iteration 140 of 10000 Iteration 150 of 10000 Iteration 160 of 10000 Iteration 170 of 10000 Iteration 180 of 10000 Iteration 190 of 10000 Iteration 200 of 10000 Iteration 210 of 10000 Iteration 220 of 10000 Iteration 230 of 10000 Iteration 240 of 10000 Iteration 250 of 10000 Iteration 260 of 10000 Iteration 270 of 10000 Iteration 280 of 10000 Iteration 290 of 10000 Iteration 300 of 10000 Iteration 310 of 10000 Iteration 320 of 10000 Iteration 330 of 10000 Iteration 340 of 10000 Iteration 350 of 10000 Iteration 360 of 10000 Iteration 370 of 10000 Iteration 380 of 10000 Iteration 390 of 10000 Iteration 400 of 10000 Iteration 410 of 10000 Iteration 420 of 10000 Iteration 430 of 10000 Iteration 440 of 10000 Iteration 450 of 10000 Iteration 460 of 10000 Iteration 470 of 10000 Iteration 480 of 10000 Iteration 490 of 10000 Iteration 500 of 10000 Iteration 510 of 10000 Iteration 520 of 10000 Iteration 530 of 10000 Iteration 540 of 10000 Iteration 550 of 10000 Iteration 560 of 10000 Iteration 570 of 10000 Iteration 580 of 10000 Iteration 590 of 10000 Iteration 600 of 10000 Iteration 610 of 10000 Iteration 620 of 10000 Iteration 630 of 10000 Iteration 640 of 10000 Iteration 650 of 10000 Iteration 660 of 10000 Iteration 670 of 10000 Iteration 680 of 10000 Iteration 690 of 10000 Iteration 700 of 10000 Iteration 710 of 10000 Iteration 720 of 10000 Iteration 730 of 10000 Iteration 740 of 10000 Iteration 750 of 10000 Iteration 760 of 10000 Iteration 770 of 10000 Iteration 780 of 10000 Iteration 790 of 10000 Iteration 800 of 10000 Iteration 810 of 10000 Iteration 820 of 10000 Iteration 830 of 10000 Iteration 840 of 10000 Iteration 850 of 10000 Iteration 860 of 10000 Iteration 870 of 10000 Iteration 880 of 10000 Iteration 890 of 10000 Iteration 900 of 10000 Iteration 910 of 10000 Iteration 920 of 10000 Iteration 930 of 10000 Iteration 940 of 10000 Iteration 950 of 10000 Iteration 960 of 10000 Iteration 970 of 10000 Iteration 980 of 10000 Iteration 990 of 10000 Iteration 1000 of 10000 Iteration 1010 of 10000 Iteration 1020 of 10000 Iteration 1030 of 10000 Iteration 1040 of 10000 Iteration 1050 of 10000 Iteration 1060 of 10000 Iteration 1070 of 10000 Iteration 1080 of 10000 Iteration 1090 of 10000 Iteration 1100 of 10000 Iteration 1110 of 10000 Iteration 1120 of 10000 Iteration 1130 of 10000 Iteration 1140 of 10000 Iteration 1150 of 10000 Iteration 1160 of 10000 Iteration 1170 of 10000 Iteration 1180 of 10000 Iteration 1190 of 10000 Iteration 1200 of 10000 Iteration 1210 of 10000 Iteration 1220 of 10000 Iteration 1230 of 10000 Iteration 1240 of 10000 Iteration 1250 of 10000 Iteration 1260 of 10000 Iteration 1270 of 10000 Iteration 1280 of 10000 Iteration 1290 of 10000 Iteration 1300 of 10000 Iteration 1310 of 10000 Iteration 1320 of 10000 Iteration 1330 of 10000 Iteration 1340 of 10000 Iteration 1350 of 10000 Iteration 1360 of 10000 Iteration 1370 of 10000 Iteration 1380 of 10000 Iteration 1390 of 10000 Iteration 1400 of 10000 Iteration 1410 of 10000 Iteration 1420 of 10000 Iteration 1430 of 10000 Iteration 1440 of 10000 Iteration 1450 of 10000 Iteration 1460 of 10000 Iteration 1470 of 10000 Iteration 1480 of 10000 Iteration 1490 of 10000 Iteration 1500 of 10000 Iteration 1510 of 10000 Iteration 1520 of 10000 Iteration 1530 of 10000 Iteration 1540 of 10000 Iteration 1550 of 10000 Iteration 1560 of 10000 Iteration 1570 of 10000 Iteration 1580 of 10000 Iteration 1590 of 10000 Iteration 1600 of 10000 Iteration 1610 of 10000 Iteration 1620 of 10000 Iteration 1630 of 10000 Iteration 1640 of 10000 Iteration 1650 of 10000 Iteration 1660 of 10000 Iteration 1670 of 10000 Iteration 1680 of 10000 Iteration 1690 of 10000 Iteration 1700 of 10000 Iteration 1710 of 10000 Iteration 1720 of 10000 Iteration 1730 of 10000 Iteration 1740 of 10000 Iteration 1750 of 10000 Iteration 1760 of 10000 Iteration 1770 of 10000 Iteration 1780 of 10000 Iteration 1790 of 10000 Iteration 1800 of 10000 Iteration 1810 of 10000 Iteration 1820 of 10000 Iteration 1830 of 10000 Iteration 1840 of 10000 Iteration 1850 of 10000 Iteration 1860 of 10000 Iteration 1870 of 10000 Iteration 1880 of 10000 Iteration 1890 of 10000 Iteration 1900 of 10000 Iteration 1910 of 10000 Iteration 1920 of 10000 Iteration 1930 of 10000 Iteration 1940 of 10000 Iteration 1950 of 10000 Iteration 1960 of 10000 Iteration 1970 of 10000 Iteration 1980 of 10000 Iteration 1990 of 10000 Iteration 2000 of 10000 Iteration 2010 of 10000 Iteration 2020 of 10000 Iteration 2030 of 10000 Iteration 2040 of 10000 Iteration 2050 of 10000 Iteration 2060 of 10000 Iteration 2070 of 10000 Iteration 2080 of 10000 Iteration 2090 of 10000 Iteration 2100 of 10000 Iteration 2110 of 10000 Iteration 2120 of 10000 Iteration 2130 of 10000 Iteration 2140 of 10000 Iteration 2150 of 10000 Iteration 2160 of 10000 Iteration 2170 of 10000 Iteration 2180 of 10000 Iteration 2190 of 10000 Iteration 2200 of 10000 Iteration 2210 of 10000 Iteration 2220 of 10000 Iteration 2230 of 10000 Iteration 2240 of 10000 Iteration 2250 of 10000 Iteration 2260 of 10000 Iteration 2270 of 10000 Iteration 2280 of 10000 Iteration 2290 of 10000 Iteration 2300 of 10000 Iteration 2310 of 10000 Iteration 2320 of 10000 Iteration 2330 of 10000 Iteration 2340 of 10000 Iteration 2350 of 10000 Iteration 2360 of 10000 Iteration 2370 of 10000 Iteration 2380 of 10000 Iteration 2390 of 10000 Iteration 2400 of 10000 Iteration 2410 of 10000 Iteration 2420 of 10000 Iteration 2430 of 10000 Iteration 2440 of 10000 Iteration 2450 of 10000 Iteration 2460 of 10000 Iteration 2470 of 10000 Iteration 2480 of 10000 Iteration 2490 of 10000 Iteration 2500 of 10000 Iteration 2510 of 10000 Iteration 2520 of 10000 Iteration 2530 of 10000 Iteration 2540 of 10000 Iteration 2550 of 10000 Iteration 2560 of 10000 Iteration 2570 of 10000 Iteration 2580 of 10000 Iteration 2590 of 10000 Iteration 2600 of 10000 Iteration 2610 of 10000 Iteration 2620 of 10000 Iteration 2630 of 10000 Iteration 2640 of 10000 Iteration 2650 of 10000 Iteration 2660 of 10000 Iteration 2670 of 10000 Iteration 2680 of 10000 Iteration 2690 of 10000 Iteration 2700 of 10000 Iteration 2710 of 10000 Iteration 2720 of 10000 Iteration 2730 of 10000 Iteration 2740 of 10000 Iteration 2750 of 10000 Iteration 2760 of 10000 Iteration 2770 of 10000 Iteration 2780 of 10000 Iteration 2790 of 10000 Iteration 2800 of 10000 Iteration 2810 of 10000 Iteration 2820 of 10000 Iteration 2830 of 10000 Iteration 2840 of 10000 Iteration 2850 of 10000 Iteration 2860 of 10000 Iteration 2870 of 10000 Iteration 2880 of 10000 Iteration 2890 of 10000 Iteration 2900 of 10000 Iteration 2910 of 10000 Iteration 2920 of 10000 Iteration 2930 of 10000 Iteration 2940 of 10000 Iteration 2950 of 10000 Iteration 2960 of 10000 Iteration 2970 of 10000 Iteration 2980 of 10000 Iteration 2990 of 10000 Iteration 3000 of 10000 Iteration 3010 of 10000 Iteration 3020 of 10000 Iteration 3030 of 10000 Iteration 3040 of 10000 Iteration 3050 of 10000 Iteration 3060 of 10000 Iteration 3070 of 10000 Iteration 3080 of 10000 Iteration 3090 of 10000 Iteration 3100 of 10000 Iteration 3110 of 10000 Iteration 3120 of 10000 Iteration 3130 of 10000 Iteration 3140 of 10000 Iteration 3150 of 10000 Iteration 3160 of 10000 Iteration 3170 of 10000 Iteration 3180 of 10000 Iteration 3190 of 10000 Iteration 3200 of 10000 Iteration 3210 of 10000 Iteration 3220 of 10000 Iteration 3230 of 10000 Iteration 3240 of 10000 Iteration 3250 of 10000 Iteration 3260 of 10000 Iteration 3270 of 10000 Iteration 3280 of 10000 Iteration 3290 of 10000 Iteration 3300 of 10000 Iteration 3310 of 10000 Iteration 3320 of 10000 Iteration 3330 of 10000 Iteration 3340 of 10000 Iteration 3350 of 10000 Iteration 3360 of 10000 Iteration 3370 of 10000 Iteration 3380 of 10000 Iteration 3390 of 10000 Iteration 3400 of 10000 Iteration 3410 of 10000 Iteration 3420 of 10000 Iteration 3430 of 10000 Iteration 3440 of 10000 Iteration 3450 of 10000 Iteration 3460 of 10000 Iteration 3470 of 10000 Iteration 3480 of 10000 Iteration 3490 of 10000 Iteration 3500 of 10000 Iteration 3510 of 10000 Iteration 3520 of 10000 Iteration 3530 of 10000 Iteration 3540 of 10000 Iteration 3550 of 10000 Iteration 3560 of 10000 Iteration 3570 of 10000 Iteration 3580 of 10000 Iteration 3590 of 10000 Iteration 3600 of 10000 Iteration 3610 of 10000 Iteration 3620 of 10000 Iteration 3630 of 10000 Iteration 3640 of 10000 Iteration 3650 of 10000 Iteration 3660 of 10000 Iteration 3670 of 10000 Iteration 3680 of 10000 Iteration 3690 of 10000 Iteration 3700 of 10000 Iteration 3710 of 10000 Iteration 3720 of 10000 Iteration 3730 of 10000 Iteration 3740 of 10000 Iteration 3750 of 10000 Iteration 3760 of 10000 Iteration 3770 of 10000 Iteration 3780 of 10000 Iteration 3790 of 10000 Iteration 3800 of 10000 Iteration 3810 of 10000 Iteration 3820 of 10000 Iteration 3830 of 10000 Iteration 3840 of 10000 Iteration 3850 of 10000 Iteration 3860 of 10000 Iteration 3870 of 10000 Iteration 3880 of 10000 Iteration 3890 of 10000 Iteration 3900 of 10000 Iteration 3910 of 10000 Iteration 3920 of 10000 Iteration 3930 of 10000 Iteration 3940 of 10000 Iteration 3950 of 10000 Iteration 3960 of 10000 Iteration 3970 of 10000 Iteration 3980 of 10000 Iteration 3990 of 10000 Iteration 4000 of 10000 Iteration 4010 of 10000 Iteration 4020 of 10000 Iteration 4030 of 10000 Iteration 4040 of 10000 Iteration 4050 of 10000 Iteration 4060 of 10000 Iteration 4070 of 10000 Iteration 4080 of 10000 Iteration 4090 of 10000 Iteration 4100 of 10000 Iteration 4110 of 10000 Iteration 4120 of 10000 Iteration 4130 of 10000 Iteration 4140 of 10000 Iteration 4150 of 10000 Iteration 4160 of 10000 Iteration 4170 of 10000 Iteration 4180 of 10000 Iteration 4190 of 10000 Iteration 4200 of 10000 Iteration 4210 of 10000 Iteration 4220 of 10000 Iteration 4230 of 10000 Iteration 4240 of 10000 Iteration 4250 of 10000 Iteration 4260 of 10000 Iteration 4270 of 10000 Iteration 4280 of 10000 Iteration 4290 of 10000 Iteration 4300 of 10000 Iteration 4310 of 10000 Iteration 4320 of 10000 Iteration 4330 of 10000 Iteration 4340 of 10000 Iteration 4350 of 10000 Iteration 4360 of 10000 Iteration 4370 of 10000 Iteration 4380 of 10000 Iteration 4390 of 10000 Iteration 4400 of 10000 Iteration 4410 of 10000 Iteration 4420 of 10000 Iteration 4430 of 10000 Iteration 4440 of 10000 Iteration 4450 of 10000 Iteration 4460 of 10000 Iteration 4470 of 10000 Iteration 4480 of 10000 Iteration 4490 of 10000 Iteration 4500 of 10000 Iteration 4510 of 10000 Iteration 4520 of 10000 Iteration 4530 of 10000 Iteration 4540 of 10000 Iteration 4550 of 10000 Iteration 4560 of 10000 Iteration 4570 of 10000 Iteration 4580 of 10000 Iteration 4590 of 10000 Iteration 4600 of 10000 Iteration 4610 of 10000 Iteration 4620 of 10000 Iteration 4630 of 10000 Iteration 4640 of 10000 Iteration 4650 of 10000 Iteration 4660 of 10000 Iteration 4670 of 10000 Iteration 4680 of 10000 Iteration 4690 of 10000 Iteration 4700 of 10000 Iteration 4710 of 10000 Iteration 4720 of 10000 Iteration 4730 of 10000 Iteration 4740 of 10000 Iteration 4750 of 10000 Iteration 4760 of 10000 Iteration 4770 of 10000 Iteration 4780 of 10000 Iteration 4790 of 10000 Iteration 4800 of 10000 Iteration 4810 of 10000 Iteration 4820 of 10000 Iteration 4830 of 10000 Iteration 4840 of 10000 Iteration 4850 of 10000 Iteration 4860 of 10000 Iteration 4870 of 10000 Iteration 4880 of 10000 Iteration 4890 of 10000 Iteration 4900 of 10000 Iteration 4910 of 10000 Iteration 4920 of 10000 Iteration 4930 of 10000 Iteration 4940 of 10000 Iteration 4950 of 10000 Iteration 4960 of 10000 Iteration 4970 of 10000 Iteration 4980 of 10000 Iteration 4990 of 10000 Iteration 5000 of 10000 Iteration 5010 of 10000 Iteration 5020 of 10000 Iteration 5030 of 10000 Iteration 5040 of 10000 Iteration 5050 of 10000 Iteration 5060 of 10000 Iteration 5070 of 10000 Iteration 5080 of 10000 Iteration 5090 of 10000 Iteration 5100 of 10000 Iteration 5110 of 10000 Iteration 5120 of 10000 Iteration 5130 of 10000 Iteration 5140 of 10000 Iteration 5150 of 10000 Iteration 5160 of 10000 Iteration 5170 of 10000 Iteration 5180 of 10000 Iteration 5190 of 10000 Iteration 5200 of 10000 Iteration 5210 of 10000 Iteration 5220 of 10000 Iteration 5230 of 10000 Iteration 5240 of 10000 Iteration 5250 of 10000 Iteration 5260 of 10000 Iteration 5270 of 10000 Iteration 5280 of 10000 Iteration 5290 of 10000 Iteration 5300 of 10000 Iteration 5310 of 10000 Iteration 5320 of 10000 Iteration 5330 of 10000 Iteration 5340 of 10000 Iteration 5350 of 10000 Iteration 5360 of 10000 Iteration 5370 of 10000 Iteration 5380 of 10000 Iteration 5390 of 10000 Iteration 5400 of 10000 Iteration 5410 of 10000 Iteration 5420 of 10000 Iteration 5430 of 10000 Iteration 5440 of 10000 Iteration 5450 of 10000 Iteration 5460 of 10000 Iteration 5470 of 10000 Iteration 5480 of 10000 Iteration 5490 of 10000 Iteration 5500 of 10000 Iteration 5510 of 10000 Iteration 5520 of 10000 Iteration 5530 of 10000 Iteration 5540 of 10000 Iteration 5550 of 10000 Iteration 5560 of 10000 Iteration 5570 of 10000 Iteration 5580 of 10000 Iteration 5590 of 10000 Iteration 5600 of 10000 Iteration 5610 of 10000 Iteration 5620 of 10000 Iteration 5630 of 10000 Iteration 5640 of 10000 Iteration 5650 of 10000 Iteration 5660 of 10000 Iteration 5670 of 10000 Iteration 5680 of 10000 Iteration 5690 of 10000 Iteration 5700 of 10000 Iteration 5710 of 10000 Iteration 5720 of 10000 Iteration 5730 of 10000 Iteration 5740 of 10000 Iteration 5750 of 10000 Iteration 5760 of 10000 Iteration 5770 of 10000 Iteration 5780 of 10000 Iteration 5790 of 10000 Iteration 5800 of 10000 Iteration 5810 of 10000 Iteration 5820 of 10000 Iteration 5830 of 10000 Iteration 5840 of 10000 Iteration 5850 of 10000 Iteration 5860 of 10000 Iteration 5870 of 10000 Iteration 5880 of 10000 Iteration 5890 of 10000 Iteration 5900 of 10000 Iteration 5910 of 10000 Iteration 5920 of 10000 Iteration 5930 of 10000 Iteration 5940 of 10000 Iteration 5950 of 10000 Iteration 5960 of 10000 Iteration 5970 of 10000 Iteration 5980 of 10000 Iteration 5990 of 10000 Iteration 6000 of 10000 Iteration 6010 of 10000 Iteration 6020 of 10000 Iteration 6030 of 10000 Iteration 6040 of 10000 Iteration 6050 of 10000 Iteration 6060 of 10000 Iteration 6070 of 10000 Iteration 6080 of 10000 Iteration 6090 of 10000 Iteration 6100 of 10000 Iteration 6110 of 10000 Iteration 6120 of 10000 Iteration 6130 of 10000 Iteration 6140 of 10000 Iteration 6150 of 10000 Iteration 6160 of 10000 Iteration 6170 of 10000 Iteration 6180 of 10000 Iteration 6190 of 10000 Iteration 6200 of 10000 Iteration 6210 of 10000 Iteration 6220 of 10000 Iteration 6230 of 10000 Iteration 6240 of 10000 Iteration 6250 of 10000 Iteration 6260 of 10000 Iteration 6270 of 10000 Iteration 6280 of 10000 Iteration 6290 of 10000 Iteration 6300 of 10000 Iteration 6310 of 10000 Iteration 6320 of 10000 Iteration 6330 of 10000 Iteration 6340 of 10000 Iteration 6350 of 10000 Iteration 6360 of 10000 Iteration 6370 of 10000 Iteration 6380 of 10000 Iteration 6390 of 10000 Iteration 6400 of 10000 Iteration 6410 of 10000 Iteration 6420 of 10000 Iteration 6430 of 10000 Iteration 6440 of 10000 Iteration 6450 of 10000 Iteration 6460 of 10000 Iteration 6470 of 10000 Iteration 6480 of 10000 Iteration 6490 of 10000 Iteration 6500 of 10000 Iteration 6510 of 10000 Iteration 6520 of 10000 Iteration 6530 of 10000 Iteration 6540 of 10000 Iteration 6550 of 10000 Iteration 6560 of 10000 Iteration 6570 of 10000 Iteration 6580 of 10000 Iteration 6590 of 10000 Iteration 6600 of 10000 Iteration 6610 of 10000 Iteration 6620 of 10000 Iteration 6630 of 10000 Iteration 6640 of 10000 Iteration 6650 of 10000 Iteration 6660 of 10000 Iteration 6670 of 10000 Iteration 6680 of 10000 Iteration 6690 of 10000 Iteration 6700 of 10000 Iteration 6710 of 10000 Iteration 6720 of 10000 Iteration 6730 of 10000 Iteration 6740 of 10000 Iteration 6750 of 10000 Iteration 6760 of 10000 Iteration 6770 of 10000 Iteration 6780 of 10000 Iteration 6790 of 10000 Iteration 6800 of 10000 Iteration 6810 of 10000 Iteration 6820 of 10000 Iteration 6830 of 10000 Iteration 6840 of 10000 Iteration 6850 of 10000 Iteration 6860 of 10000 Iteration 6870 of 10000 Iteration 6880 of 10000 Iteration 6890 of 10000 Iteration 6900 of 10000 Iteration 6910 of 10000 Iteration 6920 of 10000 Iteration 6930 of 10000 Iteration 6940 of 10000 Iteration 6950 of 10000 Iteration 6960 of 10000 Iteration 6970 of 10000 Iteration 6980 of 10000 Iteration 6990 of 10000 Iteration 7000 of 10000 Iteration 7010 of 10000 Iteration 7020 of 10000 Iteration 7030 of 10000 Iteration 7040 of 10000 Iteration 7050 of 10000 Iteration 7060 of 10000 Iteration 7070 of 10000 Iteration 7080 of 10000 Iteration 7090 of 10000 Iteration 7100 of 10000 Iteration 7110 of 10000 Iteration 7120 of 10000 Iteration 7130 of 10000 Iteration 7140 of 10000 Iteration 7150 of 10000 Iteration 7160 of 10000 Iteration 7170 of 10000 Iteration 7180 of 10000 Iteration 7190 of 10000 Iteration 7200 of 10000 Iteration 7210 of 10000 Iteration 7220 of 10000 Iteration 7230 of 10000 Iteration 7240 of 10000 Iteration 7250 of 10000 Iteration 7260 of 10000 Iteration 7270 of 10000 Iteration 7280 of 10000 Iteration 7290 of 10000 Iteration 7300 of 10000 Iteration 7310 of 10000 Iteration 7320 of 10000 Iteration 7330 of 10000 Iteration 7340 of 10000 Iteration 7350 of 10000 Iteration 7360 of 10000 Iteration 7370 of 10000 Iteration 7380 of 10000 Iteration 7390 of 10000 Iteration 7400 of 10000 Iteration 7410 of 10000 Iteration 7420 of 10000 Iteration 7430 of 10000 Iteration 7440 of 10000 Iteration 7450 of 10000 Iteration 7460 of 10000 Iteration 7470 of 10000 Iteration 7480 of 10000 Iteration 7490 of 10000 Iteration 7500 of 10000 Iteration 7510 of 10000 Iteration 7520 of 10000 Iteration 7530 of 10000 Iteration 7540 of 10000 Iteration 7550 of 10000 Iteration 7560 of 10000 Iteration 7570 of 10000 Iteration 7580 of 10000 Iteration 7590 of 10000 Iteration 7600 of 10000 Iteration 7610 of 10000 Iteration 7620 of 10000 Iteration 7630 of 10000 Iteration 7640 of 10000 Iteration 7650 of 10000 Iteration 7660 of 10000 Iteration 7670 of 10000 Iteration 7680 of 10000 Iteration 7690 of 10000 Iteration 7700 of 10000 Iteration 7710 of 10000 Iteration 7720 of 10000 Iteration 7730 of 10000 Iteration 7740 of 10000 Iteration 7750 of 10000 Iteration 7760 of 10000 Iteration 7770 of 10000 Iteration 7780 of 10000 Iteration 7790 of 10000 Iteration 7800 of 10000 Iteration 7810 of 10000 Iteration 7820 of 10000 Iteration 7830 of 10000 Iteration 7840 of 10000 Iteration 7850 of 10000 Iteration 7860 of 10000 Iteration 7870 of 10000 Iteration 7880 of 10000 Iteration 7890 of 10000 Iteration 7900 of 10000 Iteration 7910 of 10000 Iteration 7920 of 10000 Iteration 7930 of 10000 Iteration 7940 of 10000 Iteration 7950 of 10000 Iteration 7960 of 10000 Iteration 7970 of 10000 Iteration 7980 of 10000 Iteration 7990 of 10000 Iteration 8000 of 10000 Iteration 8010 of 10000 Iteration 8020 of 10000 Iteration 8030 of 10000 Iteration 8040 of 10000 Iteration 8050 of 10000 Iteration 8060 of 10000 Iteration 8070 of 10000 Iteration 8080 of 10000 Iteration 8090 of 10000 Iteration 8100 of 10000 Iteration 8110 of 10000 Iteration 8120 of 10000 Iteration 8130 of 10000 Iteration 8140 of 10000 Iteration 8150 of 10000 Iteration 8160 of 10000 Iteration 8170 of 10000 Iteration 8180 of 10000 Iteration 8190 of 10000 Iteration 8200 of 10000 Iteration 8210 of 10000 Iteration 8220 of 10000 Iteration 8230 of 10000 Iteration 8240 of 10000 Iteration 8250 of 10000 Iteration 8260 of 10000 Iteration 8270 of 10000 Iteration 8280 of 10000 Iteration 8290 of 10000 Iteration 8300 of 10000 Iteration 8310 of 10000 Iteration 8320 of 10000 Iteration 8330 of 10000 Iteration 8340 of 10000 Iteration 8350 of 10000 Iteration 8360 of 10000 Iteration 8370 of 10000 Iteration 8380 of 10000 Iteration 8390 of 10000 Iteration 8400 of 10000 Iteration 8410 of 10000 Iteration 8420 of 10000 Iteration 8430 of 10000 Iteration 8440 of 10000 Iteration 8450 of 10000 Iteration 8460 of 10000 Iteration 8470 of 10000 Iteration 8480 of 10000 Iteration 8490 of 10000 Iteration 8500 of 10000 Iteration 8510 of 10000 Iteration 8520 of 10000 Iteration 8530 of 10000 Iteration 8540 of 10000 Iteration 8550 of 10000 Iteration 8560 of 10000 Iteration 8570 of 10000 Iteration 8580 of 10000 Iteration 8590 of 10000 Iteration 8600 of 10000 Iteration 8610 of 10000 Iteration 8620 of 10000 Iteration 8630 of 10000 Iteration 8640 of 10000 Iteration 8650 of 10000 Iteration 8660 of 10000 Iteration 8670 of 10000 Iteration 8680 of 10000 Iteration 8690 of 10000 Iteration 8700 of 10000 Iteration 8710 of 10000 Iteration 8720 of 10000 Iteration 8730 of 10000 Iteration 8740 of 10000 Iteration 8750 of 10000 Iteration 8760 of 10000 Iteration 8770 of 10000 Iteration 8780 of 10000 Iteration 8790 of 10000 Iteration 8800 of 10000 Iteration 8810 of 10000 Iteration 8820 of 10000 Iteration 8830 of 10000 Iteration 8840 of 10000 Iteration 8850 of 10000 Iteration 8860 of 10000 Iteration 8870 of 10000 Iteration 8880 of 10000 Iteration 8890 of 10000 Iteration 8900 of 10000 Iteration 8910 of 10000 Iteration 8920 of 10000 Iteration 8930 of 10000 Iteration 8940 of 10000 Iteration 8950 of 10000 Iteration 8960 of 10000 Iteration 8970 of 10000 Iteration 8980 of 10000 Iteration 8990 of 10000 Iteration 9000 of 10000 Iteration 9010 of 10000 Iteration 9020 of 10000 Iteration 9030 of 10000 Iteration 9040 of 10000 Iteration 9050 of 10000 Iteration 9060 of 10000 Iteration 9070 of 10000 Iteration 9080 of 10000 Iteration 9090 of 10000 Iteration 9100 of 10000 Iteration 9110 of 10000 Iteration 9120 of 10000 Iteration 9130 of 10000 Iteration 9140 of 10000 Iteration 9150 of 10000 Iteration 9160 of 10000 Iteration 9170 of 10000 Iteration 9180 of 10000 Iteration 9190 of 10000 Iteration 9200 of 10000 Iteration 9210 of 10000 Iteration 9220 of 10000 Iteration 9230 of 10000 Iteration 9240 of 10000 Iteration 9250 of 10000 Iteration 9260 of 10000 Iteration 9270 of 10000 Iteration 9280 of 10000 Iteration 9290 of 10000 Iteration 9300 of 10000 Iteration 9310 of 10000 Iteration 9320 of 10000 Iteration 9330 of 10000 Iteration 9340 of 10000 Iteration 9350 of 10000 Iteration 9360 of 10000 Iteration 9370 of 10000 Iteration 9380 of 10000 Iteration 9390 of 10000 Iteration 9400 of 10000 Iteration 9410 of 10000 Iteration 9420 of 10000 Iteration 9430 of 10000 Iteration 9440 of 10000 Iteration 9450 of 10000 Iteration 9460 of 10000 Iteration 9470 of 10000 Iteration 9480 of 10000 Iteration 9490 of 10000 Iteration 9500 of 10000 Iteration 9510 of 10000 Iteration 9520 of 10000 Iteration 9530 of 10000 Iteration 9540 of 10000 Iteration 9550 of 10000 Iteration 9560 of 10000 Iteration 9570 of 10000 Iteration 9580 of 10000 Iteration 9590 of 10000 Iteration 9600 of 10000 Iteration 9610 of 10000 Iteration 9620 of 10000 Iteration 9630 of 10000 Iteration 9640 of 10000 Iteration 9650 of 10000 Iteration 9660 of 10000 Iteration 9670 of 10000 Iteration 9680 of 10000 Iteration 9690 of 10000 Iteration 9700 of 10000 Iteration 9710 of 10000 Iteration 9720 of 10000 Iteration 9730 of 10000 Iteration 9740 of 10000 Iteration 9750 of 10000 Iteration 9760 of 10000 Iteration 9770 of 10000 Iteration 9780 of 10000 Iteration 9790 of 10000 Iteration 9800 of 10000 Iteration 9810 of 10000 Iteration 9820 of 10000 Iteration 9830 of 10000 Iteration 9840 of 10000 Iteration 9850 of 10000 Iteration 9860 of 10000 Iteration 9870 of 10000 Iteration 9880 of 10000 Iteration 9890 of 10000 Iteration 9900 of 10000 Iteration 9910 of 10000 Iteration 9920 of 10000 Iteration 9930 of 10000 Iteration 9940 of 10000 Iteration 9950 of 10000 Iteration 9960 of 10000 Iteration 9970 of 10000 Iteration 9980 of 10000 Iteration 9990 of 10000 Iteration 10000 of 10000 point_estimates(model) #> RprobitB model parameter #>  #> alpha : double vector of length 2  #>  #> -2.4247 1.4482 #>  #> C : NA #>  #> s : NA #>  #> b : NA #>  #> Omega : NA #>  #> Sigma : 1 #>  #> Sigma_full : 2 x 2 matrix of doubles  #>  #>      [,1] [,2] #> [1,]    2    1 #> [2,]    1    1 #>  #>  #> beta : NA #>  #> z : NA #>  point_estimates(model, FUN = median) #> RprobitB model parameter #>  #> alpha : double vector of length 2  #>  #> -2.383 1.425 #>  #> C : NA #>  #> s : NA #>  #> b : NA #>  #> Omega : NA #>  #> Sigma : 1 #>  #> Sigma_full : 2 x 2 matrix of doubles  #>  #>      [,1] [,2] #> [1,]    2    1 #> [2,]    1    1 #>  #>  #> beta : NA #>  #> z : NA #>"},{"path":"https://loelschlaeger.de/RprobitB/reference/posterior_pars.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter sets from posterior samples — posterior_pars","title":"Parameter sets from posterior samples — posterior_pars","text":"function builds parameter sets based posterior samples.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/posterior_pars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter sets from posterior samples — posterior_pars","text":"","code":"posterior_pars(x, S)"},{"path":"https://loelschlaeger.de/RprobitB/reference/posterior_pars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter sets from posterior samples — posterior_pars","text":"x object class RprobitB_fit. S size parameter sets.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/posterior_pars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter sets from posterior samples — posterior_pars","text":"list RprobitB_parameter-objects.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/pprint.html","id":null,"dir":"Reference","previous_headings":"","what":"Print abbreviated matrices and vectors — pprint","title":"Print abbreviated matrices and vectors — pprint","text":"function prints abbreviated matrices vectors.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/pprint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print abbreviated matrices and vectors — pprint","text":"","code":"pprint(x, rowdots = 4, coldots = 4, digits = 4, name = NULL, desc = TRUE)"},{"path":"https://loelschlaeger.de/RprobitB/reference/pprint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print abbreviated matrices and vectors — pprint","text":"x (numeric character) matrix vector. rowdots row number replaced dots. coldots column number replaced dots. digits x numeric, sets number decimal places. name Either NULL label x. printed desc = TRUE. desc Set TRUE print name dimension x.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/pprint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print abbreviated matrices and vectors — pprint","text":"Invisibly returns x.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/pprint.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Print abbreviated matrices and vectors — pprint","text":"function modified version pprint.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/pprint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print abbreviated matrices and vectors — pprint","text":"","code":"RprobitB:::pprint(x = 1, name = \"single integer\") #> single integer : 1 RprobitB:::pprint(x = LETTERS[1:26], name = \"letters\") #> letters : character vector of length 26  #>  #> A B C ... Z RprobitB:::pprint(x = matrix(rnorm(100), ncol = 1), name = \"single column matrix\") #> single column matrix : 100 x 1 matrix of doubles  #>  #>           [,1] #> [1,]    0.5323 #> [2,]   -0.5233 #> [3,]   -0.6566 #> ...        ... #> [100,] -0.6835 RprobitB:::pprint(x = matrix(1:100, nrow = 1), name = \"single row matrix\") #> single row matrix : 1 x 100 matrix of integers  #>  #>      [,1] [,2] [,3] ... [,100] #> [1,]    1    2    3 ...    100 RprobitB:::pprint(x = matrix(LETTERS[1:24], ncol = 6), name = \"big matrix\") #> big matrix : 4 x 6 matrix of characters  #>  #>      [,1] [,2] [,3] ... [,6] #> [1,]    A    E    I ...    U #> [2,]    B    F    J ...    V #> [3,]    C    G    K ...    W #> [4,]    D    H    L ...    X"},{"path":"https://loelschlaeger.de/RprobitB/reference/predict.RprobitB_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Choice prediction — predict.RprobitB_fit","title":"Choice prediction — predict.RprobitB_fit","text":"function predicts choices decision makers.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/predict.RprobitB_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Choice prediction — predict.RprobitB_fit","text":"","code":"# S3 method for RprobitB_fit predict(object, data = NULL, overview = TRUE, ...)"},{"path":"https://loelschlaeger.de/RprobitB/reference/predict.RprobitB_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Choice prediction — predict.RprobitB_fit","text":"object object class RprobitB_fit. data Either NULL object class RprobitB_data. overview TRUE, aggregate prediction table. ... Ignored.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/predict.RprobitB_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Choice prediction — predict.RprobitB_fit","text":"Either table overview = TRUE data frame otherwise.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/predict.RprobitB_fit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Choice prediction — predict.RprobitB_fit","text":"Predictions made based maximum predicted probability choice alternative.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/predict.RprobitB_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Choice prediction — predict.RprobitB_fit","text":"","code":"data <- simulate_choices(form = choice ~ covariate, N = 10, T = 10, J = 2) object <- mcmc(data) #> Iteration 10 of 10000 Iteration 20 of 10000 Iteration 30 of 10000 Iteration 40 of 10000 Iteration 50 of 10000 Iteration 60 of 10000 Iteration 70 of 10000 Iteration 80 of 10000 Iteration 90 of 10000 Iteration 100 of 10000 Iteration 110 of 10000 Iteration 120 of 10000 Iteration 130 of 10000 Iteration 140 of 10000 Iteration 150 of 10000 Iteration 160 of 10000 Iteration 170 of 10000 Iteration 180 of 10000 Iteration 190 of 10000 Iteration 200 of 10000 Iteration 210 of 10000 Iteration 220 of 10000 Iteration 230 of 10000 Iteration 240 of 10000 Iteration 250 of 10000 Iteration 260 of 10000 Iteration 270 of 10000 Iteration 280 of 10000 Iteration 290 of 10000 Iteration 300 of 10000 Iteration 310 of 10000 Iteration 320 of 10000 Iteration 330 of 10000 Iteration 340 of 10000 Iteration 350 of 10000 Iteration 360 of 10000 Iteration 370 of 10000 Iteration 380 of 10000 Iteration 390 of 10000 Iteration 400 of 10000 Iteration 410 of 10000 Iteration 420 of 10000 Iteration 430 of 10000 Iteration 440 of 10000 Iteration 450 of 10000 Iteration 460 of 10000 Iteration 470 of 10000 Iteration 480 of 10000 Iteration 490 of 10000 Iteration 500 of 10000 Iteration 510 of 10000 Iteration 520 of 10000 Iteration 530 of 10000 Iteration 540 of 10000 Iteration 550 of 10000 Iteration 560 of 10000 Iteration 570 of 10000 Iteration 580 of 10000 Iteration 590 of 10000 Iteration 600 of 10000 Iteration 610 of 10000 Iteration 620 of 10000 Iteration 630 of 10000 Iteration 640 of 10000 Iteration 650 of 10000 Iteration 660 of 10000 Iteration 670 of 10000 Iteration 680 of 10000 Iteration 690 of 10000 Iteration 700 of 10000 Iteration 710 of 10000 Iteration 720 of 10000 Iteration 730 of 10000 Iteration 740 of 10000 Iteration 750 of 10000 Iteration 760 of 10000 Iteration 770 of 10000 Iteration 780 of 10000 Iteration 790 of 10000 Iteration 800 of 10000 Iteration 810 of 10000 Iteration 820 of 10000 Iteration 830 of 10000 Iteration 840 of 10000 Iteration 850 of 10000 Iteration 860 of 10000 Iteration 870 of 10000 Iteration 880 of 10000 Iteration 890 of 10000 Iteration 900 of 10000 Iteration 910 of 10000 Iteration 920 of 10000 Iteration 930 of 10000 Iteration 940 of 10000 Iteration 950 of 10000 Iteration 960 of 10000 Iteration 970 of 10000 Iteration 980 of 10000 Iteration 990 of 10000 Iteration 1000 of 10000 Iteration 1010 of 10000 Iteration 1020 of 10000 Iteration 1030 of 10000 Iteration 1040 of 10000 Iteration 1050 of 10000 Iteration 1060 of 10000 Iteration 1070 of 10000 Iteration 1080 of 10000 Iteration 1090 of 10000 Iteration 1100 of 10000 Iteration 1110 of 10000 Iteration 1120 of 10000 Iteration 1130 of 10000 Iteration 1140 of 10000 Iteration 1150 of 10000 Iteration 1160 of 10000 Iteration 1170 of 10000 Iteration 1180 of 10000 Iteration 1190 of 10000 Iteration 1200 of 10000 Iteration 1210 of 10000 Iteration 1220 of 10000 Iteration 1230 of 10000 Iteration 1240 of 10000 Iteration 1250 of 10000 Iteration 1260 of 10000 Iteration 1270 of 10000 Iteration 1280 of 10000 Iteration 1290 of 10000 Iteration 1300 of 10000 Iteration 1310 of 10000 Iteration 1320 of 10000 Iteration 1330 of 10000 Iteration 1340 of 10000 Iteration 1350 of 10000 Iteration 1360 of 10000 Iteration 1370 of 10000 Iteration 1380 of 10000 Iteration 1390 of 10000 Iteration 1400 of 10000 Iteration 1410 of 10000 Iteration 1420 of 10000 Iteration 1430 of 10000 Iteration 1440 of 10000 Iteration 1450 of 10000 Iteration 1460 of 10000 Iteration 1470 of 10000 Iteration 1480 of 10000 Iteration 1490 of 10000 Iteration 1500 of 10000 Iteration 1510 of 10000 Iteration 1520 of 10000 Iteration 1530 of 10000 Iteration 1540 of 10000 Iteration 1550 of 10000 Iteration 1560 of 10000 Iteration 1570 of 10000 Iteration 1580 of 10000 Iteration 1590 of 10000 Iteration 1600 of 10000 Iteration 1610 of 10000 Iteration 1620 of 10000 Iteration 1630 of 10000 Iteration 1640 of 10000 Iteration 1650 of 10000 Iteration 1660 of 10000 Iteration 1670 of 10000 Iteration 1680 of 10000 Iteration 1690 of 10000 Iteration 1700 of 10000 Iteration 1710 of 10000 Iteration 1720 of 10000 Iteration 1730 of 10000 Iteration 1740 of 10000 Iteration 1750 of 10000 Iteration 1760 of 10000 Iteration 1770 of 10000 Iteration 1780 of 10000 Iteration 1790 of 10000 Iteration 1800 of 10000 Iteration 1810 of 10000 Iteration 1820 of 10000 Iteration 1830 of 10000 Iteration 1840 of 10000 Iteration 1850 of 10000 Iteration 1860 of 10000 Iteration 1870 of 10000 Iteration 1880 of 10000 Iteration 1890 of 10000 Iteration 1900 of 10000 Iteration 1910 of 10000 Iteration 1920 of 10000 Iteration 1930 of 10000 Iteration 1940 of 10000 Iteration 1950 of 10000 Iteration 1960 of 10000 Iteration 1970 of 10000 Iteration 1980 of 10000 Iteration 1990 of 10000 Iteration 2000 of 10000 Iteration 2010 of 10000 Iteration 2020 of 10000 Iteration 2030 of 10000 Iteration 2040 of 10000 Iteration 2050 of 10000 Iteration 2060 of 10000 Iteration 2070 of 10000 Iteration 2080 of 10000 Iteration 2090 of 10000 Iteration 2100 of 10000 Iteration 2110 of 10000 Iteration 2120 of 10000 Iteration 2130 of 10000 Iteration 2140 of 10000 Iteration 2150 of 10000 Iteration 2160 of 10000 Iteration 2170 of 10000 Iteration 2180 of 10000 Iteration 2190 of 10000 Iteration 2200 of 10000 Iteration 2210 of 10000 Iteration 2220 of 10000 Iteration 2230 of 10000 Iteration 2240 of 10000 Iteration 2250 of 10000 Iteration 2260 of 10000 Iteration 2270 of 10000 Iteration 2280 of 10000 Iteration 2290 of 10000 Iteration 2300 of 10000 Iteration 2310 of 10000 Iteration 2320 of 10000 Iteration 2330 of 10000 Iteration 2340 of 10000 Iteration 2350 of 10000 Iteration 2360 of 10000 Iteration 2370 of 10000 Iteration 2380 of 10000 Iteration 2390 of 10000 Iteration 2400 of 10000 Iteration 2410 of 10000 Iteration 2420 of 10000 Iteration 2430 of 10000 Iteration 2440 of 10000 Iteration 2450 of 10000 Iteration 2460 of 10000 Iteration 2470 of 10000 Iteration 2480 of 10000 Iteration 2490 of 10000 Iteration 2500 of 10000 Iteration 2510 of 10000 Iteration 2520 of 10000 Iteration 2530 of 10000 Iteration 2540 of 10000 Iteration 2550 of 10000 Iteration 2560 of 10000 Iteration 2570 of 10000 Iteration 2580 of 10000 Iteration 2590 of 10000 Iteration 2600 of 10000 Iteration 2610 of 10000 Iteration 2620 of 10000 Iteration 2630 of 10000 Iteration 2640 of 10000 Iteration 2650 of 10000 Iteration 2660 of 10000 Iteration 2670 of 10000 Iteration 2680 of 10000 Iteration 2690 of 10000 Iteration 2700 of 10000 Iteration 2710 of 10000 Iteration 2720 of 10000 Iteration 2730 of 10000 Iteration 2740 of 10000 Iteration 2750 of 10000 Iteration 2760 of 10000 Iteration 2770 of 10000 Iteration 2780 of 10000 Iteration 2790 of 10000 Iteration 2800 of 10000 Iteration 2810 of 10000 Iteration 2820 of 10000 Iteration 2830 of 10000 Iteration 2840 of 10000 Iteration 2850 of 10000 Iteration 2860 of 10000 Iteration 2870 of 10000 Iteration 2880 of 10000 Iteration 2890 of 10000 Iteration 2900 of 10000 Iteration 2910 of 10000 Iteration 2920 of 10000 Iteration 2930 of 10000 Iteration 2940 of 10000 Iteration 2950 of 10000 Iteration 2960 of 10000 Iteration 2970 of 10000 Iteration 2980 of 10000 Iteration 2990 of 10000 Iteration 3000 of 10000 Iteration 3010 of 10000 Iteration 3020 of 10000 Iteration 3030 of 10000 Iteration 3040 of 10000 Iteration 3050 of 10000 Iteration 3060 of 10000 Iteration 3070 of 10000 Iteration 3080 of 10000 Iteration 3090 of 10000 Iteration 3100 of 10000 Iteration 3110 of 10000 Iteration 3120 of 10000 Iteration 3130 of 10000 Iteration 3140 of 10000 Iteration 3150 of 10000 Iteration 3160 of 10000 Iteration 3170 of 10000 Iteration 3180 of 10000 Iteration 3190 of 10000 Iteration 3200 of 10000 Iteration 3210 of 10000 Iteration 3220 of 10000 Iteration 3230 of 10000 Iteration 3240 of 10000 Iteration 3250 of 10000 Iteration 3260 of 10000 Iteration 3270 of 10000 Iteration 3280 of 10000 Iteration 3290 of 10000 Iteration 3300 of 10000 Iteration 3310 of 10000 Iteration 3320 of 10000 Iteration 3330 of 10000 Iteration 3340 of 10000 Iteration 3350 of 10000 Iteration 3360 of 10000 Iteration 3370 of 10000 Iteration 3380 of 10000 Iteration 3390 of 10000 Iteration 3400 of 10000 Iteration 3410 of 10000 Iteration 3420 of 10000 Iteration 3430 of 10000 Iteration 3440 of 10000 Iteration 3450 of 10000 Iteration 3460 of 10000 Iteration 3470 of 10000 Iteration 3480 of 10000 Iteration 3490 of 10000 Iteration 3500 of 10000 Iteration 3510 of 10000 Iteration 3520 of 10000 Iteration 3530 of 10000 Iteration 3540 of 10000 Iteration 3550 of 10000 Iteration 3560 of 10000 Iteration 3570 of 10000 Iteration 3580 of 10000 Iteration 3590 of 10000 Iteration 3600 of 10000 Iteration 3610 of 10000 Iteration 3620 of 10000 Iteration 3630 of 10000 Iteration 3640 of 10000 Iteration 3650 of 10000 Iteration 3660 of 10000 Iteration 3670 of 10000 Iteration 3680 of 10000 Iteration 3690 of 10000 Iteration 3700 of 10000 Iteration 3710 of 10000 Iteration 3720 of 10000 Iteration 3730 of 10000 Iteration 3740 of 10000 Iteration 3750 of 10000 Iteration 3760 of 10000 Iteration 3770 of 10000 Iteration 3780 of 10000 Iteration 3790 of 10000 Iteration 3800 of 10000 Iteration 3810 of 10000 Iteration 3820 of 10000 Iteration 3830 of 10000 Iteration 3840 of 10000 Iteration 3850 of 10000 Iteration 3860 of 10000 Iteration 3870 of 10000 Iteration 3880 of 10000 Iteration 3890 of 10000 Iteration 3900 of 10000 Iteration 3910 of 10000 Iteration 3920 of 10000 Iteration 3930 of 10000 Iteration 3940 of 10000 Iteration 3950 of 10000 Iteration 3960 of 10000 Iteration 3970 of 10000 Iteration 3980 of 10000 Iteration 3990 of 10000 Iteration 4000 of 10000 Iteration 4010 of 10000 Iteration 4020 of 10000 Iteration 4030 of 10000 Iteration 4040 of 10000 Iteration 4050 of 10000 Iteration 4060 of 10000 Iteration 4070 of 10000 Iteration 4080 of 10000 Iteration 4090 of 10000 Iteration 4100 of 10000 Iteration 4110 of 10000 Iteration 4120 of 10000 Iteration 4130 of 10000 Iteration 4140 of 10000 Iteration 4150 of 10000 Iteration 4160 of 10000 Iteration 4170 of 10000 Iteration 4180 of 10000 Iteration 4190 of 10000 Iteration 4200 of 10000 Iteration 4210 of 10000 Iteration 4220 of 10000 Iteration 4230 of 10000 Iteration 4240 of 10000 Iteration 4250 of 10000 Iteration 4260 of 10000 Iteration 4270 of 10000 Iteration 4280 of 10000 Iteration 4290 of 10000 Iteration 4300 of 10000 Iteration 4310 of 10000 Iteration 4320 of 10000 Iteration 4330 of 10000 Iteration 4340 of 10000 Iteration 4350 of 10000 Iteration 4360 of 10000 Iteration 4370 of 10000 Iteration 4380 of 10000 Iteration 4390 of 10000 Iteration 4400 of 10000 Iteration 4410 of 10000 Iteration 4420 of 10000 Iteration 4430 of 10000 Iteration 4440 of 10000 Iteration 4450 of 10000 Iteration 4460 of 10000 Iteration 4470 of 10000 Iteration 4480 of 10000 Iteration 4490 of 10000 Iteration 4500 of 10000 Iteration 4510 of 10000 Iteration 4520 of 10000 Iteration 4530 of 10000 Iteration 4540 of 10000 Iteration 4550 of 10000 Iteration 4560 of 10000 Iteration 4570 of 10000 Iteration 4580 of 10000 Iteration 4590 of 10000 Iteration 4600 of 10000 Iteration 4610 of 10000 Iteration 4620 of 10000 Iteration 4630 of 10000 Iteration 4640 of 10000 Iteration 4650 of 10000 Iteration 4660 of 10000 Iteration 4670 of 10000 Iteration 4680 of 10000 Iteration 4690 of 10000 Iteration 4700 of 10000 Iteration 4710 of 10000 Iteration 4720 of 10000 Iteration 4730 of 10000 Iteration 4740 of 10000 Iteration 4750 of 10000 Iteration 4760 of 10000 Iteration 4770 of 10000 Iteration 4780 of 10000 Iteration 4790 of 10000 Iteration 4800 of 10000 Iteration 4810 of 10000 Iteration 4820 of 10000 Iteration 4830 of 10000 Iteration 4840 of 10000 Iteration 4850 of 10000 Iteration 4860 of 10000 Iteration 4870 of 10000 Iteration 4880 of 10000 Iteration 4890 of 10000 Iteration 4900 of 10000 Iteration 4910 of 10000 Iteration 4920 of 10000 Iteration 4930 of 10000 Iteration 4940 of 10000 Iteration 4950 of 10000 Iteration 4960 of 10000 Iteration 4970 of 10000 Iteration 4980 of 10000 Iteration 4990 of 10000 Iteration 5000 of 10000 Iteration 5010 of 10000 Iteration 5020 of 10000 Iteration 5030 of 10000 Iteration 5040 of 10000 Iteration 5050 of 10000 Iteration 5060 of 10000 Iteration 5070 of 10000 Iteration 5080 of 10000 Iteration 5090 of 10000 Iteration 5100 of 10000 Iteration 5110 of 10000 Iteration 5120 of 10000 Iteration 5130 of 10000 Iteration 5140 of 10000 Iteration 5150 of 10000 Iteration 5160 of 10000 Iteration 5170 of 10000 Iteration 5180 of 10000 Iteration 5190 of 10000 Iteration 5200 of 10000 Iteration 5210 of 10000 Iteration 5220 of 10000 Iteration 5230 of 10000 Iteration 5240 of 10000 Iteration 5250 of 10000 Iteration 5260 of 10000 Iteration 5270 of 10000 Iteration 5280 of 10000 Iteration 5290 of 10000 Iteration 5300 of 10000 Iteration 5310 of 10000 Iteration 5320 of 10000 Iteration 5330 of 10000 Iteration 5340 of 10000 Iteration 5350 of 10000 Iteration 5360 of 10000 Iteration 5370 of 10000 Iteration 5380 of 10000 Iteration 5390 of 10000 Iteration 5400 of 10000 Iteration 5410 of 10000 Iteration 5420 of 10000 Iteration 5430 of 10000 Iteration 5440 of 10000 Iteration 5450 of 10000 Iteration 5460 of 10000 Iteration 5470 of 10000 Iteration 5480 of 10000 Iteration 5490 of 10000 Iteration 5500 of 10000 Iteration 5510 of 10000 Iteration 5520 of 10000 Iteration 5530 of 10000 Iteration 5540 of 10000 Iteration 5550 of 10000 Iteration 5560 of 10000 Iteration 5570 of 10000 Iteration 5580 of 10000 Iteration 5590 of 10000 Iteration 5600 of 10000 Iteration 5610 of 10000 Iteration 5620 of 10000 Iteration 5630 of 10000 Iteration 5640 of 10000 Iteration 5650 of 10000 Iteration 5660 of 10000 Iteration 5670 of 10000 Iteration 5680 of 10000 Iteration 5690 of 10000 Iteration 5700 of 10000 Iteration 5710 of 10000 Iteration 5720 of 10000 Iteration 5730 of 10000 Iteration 5740 of 10000 Iteration 5750 of 10000 Iteration 5760 of 10000 Iteration 5770 of 10000 Iteration 5780 of 10000 Iteration 5790 of 10000 Iteration 5800 of 10000 Iteration 5810 of 10000 Iteration 5820 of 10000 Iteration 5830 of 10000 Iteration 5840 of 10000 Iteration 5850 of 10000 Iteration 5860 of 10000 Iteration 5870 of 10000 Iteration 5880 of 10000 Iteration 5890 of 10000 Iteration 5900 of 10000 Iteration 5910 of 10000 Iteration 5920 of 10000 Iteration 5930 of 10000 Iteration 5940 of 10000 Iteration 5950 of 10000 Iteration 5960 of 10000 Iteration 5970 of 10000 Iteration 5980 of 10000 Iteration 5990 of 10000 Iteration 6000 of 10000 Iteration 6010 of 10000 Iteration 6020 of 10000 Iteration 6030 of 10000 Iteration 6040 of 10000 Iteration 6050 of 10000 Iteration 6060 of 10000 Iteration 6070 of 10000 Iteration 6080 of 10000 Iteration 6090 of 10000 Iteration 6100 of 10000 Iteration 6110 of 10000 Iteration 6120 of 10000 Iteration 6130 of 10000 Iteration 6140 of 10000 Iteration 6150 of 10000 Iteration 6160 of 10000 Iteration 6170 of 10000 Iteration 6180 of 10000 Iteration 6190 of 10000 Iteration 6200 of 10000 Iteration 6210 of 10000 Iteration 6220 of 10000 Iteration 6230 of 10000 Iteration 6240 of 10000 Iteration 6250 of 10000 Iteration 6260 of 10000 Iteration 6270 of 10000 Iteration 6280 of 10000 Iteration 6290 of 10000 Iteration 6300 of 10000 Iteration 6310 of 10000 Iteration 6320 of 10000 Iteration 6330 of 10000 Iteration 6340 of 10000 Iteration 6350 of 10000 Iteration 6360 of 10000 Iteration 6370 of 10000 Iteration 6380 of 10000 Iteration 6390 of 10000 Iteration 6400 of 10000 Iteration 6410 of 10000 Iteration 6420 of 10000 Iteration 6430 of 10000 Iteration 6440 of 10000 Iteration 6450 of 10000 Iteration 6460 of 10000 Iteration 6470 of 10000 Iteration 6480 of 10000 Iteration 6490 of 10000 Iteration 6500 of 10000 Iteration 6510 of 10000 Iteration 6520 of 10000 Iteration 6530 of 10000 Iteration 6540 of 10000 Iteration 6550 of 10000 Iteration 6560 of 10000 Iteration 6570 of 10000 Iteration 6580 of 10000 Iteration 6590 of 10000 Iteration 6600 of 10000 Iteration 6610 of 10000 Iteration 6620 of 10000 Iteration 6630 of 10000 Iteration 6640 of 10000 Iteration 6650 of 10000 Iteration 6660 of 10000 Iteration 6670 of 10000 Iteration 6680 of 10000 Iteration 6690 of 10000 Iteration 6700 of 10000 Iteration 6710 of 10000 Iteration 6720 of 10000 Iteration 6730 of 10000 Iteration 6740 of 10000 Iteration 6750 of 10000 Iteration 6760 of 10000 Iteration 6770 of 10000 Iteration 6780 of 10000 Iteration 6790 of 10000 Iteration 6800 of 10000 Iteration 6810 of 10000 Iteration 6820 of 10000 Iteration 6830 of 10000 Iteration 6840 of 10000 Iteration 6850 of 10000 Iteration 6860 of 10000 Iteration 6870 of 10000 Iteration 6880 of 10000 Iteration 6890 of 10000 Iteration 6900 of 10000 Iteration 6910 of 10000 Iteration 6920 of 10000 Iteration 6930 of 10000 Iteration 6940 of 10000 Iteration 6950 of 10000 Iteration 6960 of 10000 Iteration 6970 of 10000 Iteration 6980 of 10000 Iteration 6990 of 10000 Iteration 7000 of 10000 Iteration 7010 of 10000 Iteration 7020 of 10000 Iteration 7030 of 10000 Iteration 7040 of 10000 Iteration 7050 of 10000 Iteration 7060 of 10000 Iteration 7070 of 10000 Iteration 7080 of 10000 Iteration 7090 of 10000 Iteration 7100 of 10000 Iteration 7110 of 10000 Iteration 7120 of 10000 Iteration 7130 of 10000 Iteration 7140 of 10000 Iteration 7150 of 10000 Iteration 7160 of 10000 Iteration 7170 of 10000 Iteration 7180 of 10000 Iteration 7190 of 10000 Iteration 7200 of 10000 Iteration 7210 of 10000 Iteration 7220 of 10000 Iteration 7230 of 10000 Iteration 7240 of 10000 Iteration 7250 of 10000 Iteration 7260 of 10000 Iteration 7270 of 10000 Iteration 7280 of 10000 Iteration 7290 of 10000 Iteration 7300 of 10000 Iteration 7310 of 10000 Iteration 7320 of 10000 Iteration 7330 of 10000 Iteration 7340 of 10000 Iteration 7350 of 10000 Iteration 7360 of 10000 Iteration 7370 of 10000 Iteration 7380 of 10000 Iteration 7390 of 10000 Iteration 7400 of 10000 Iteration 7410 of 10000 Iteration 7420 of 10000 Iteration 7430 of 10000 Iteration 7440 of 10000 Iteration 7450 of 10000 Iteration 7460 of 10000 Iteration 7470 of 10000 Iteration 7480 of 10000 Iteration 7490 of 10000 Iteration 7500 of 10000 Iteration 7510 of 10000 Iteration 7520 of 10000 Iteration 7530 of 10000 Iteration 7540 of 10000 Iteration 7550 of 10000 Iteration 7560 of 10000 Iteration 7570 of 10000 Iteration 7580 of 10000 Iteration 7590 of 10000 Iteration 7600 of 10000 Iteration 7610 of 10000 Iteration 7620 of 10000 Iteration 7630 of 10000 Iteration 7640 of 10000 Iteration 7650 of 10000 Iteration 7660 of 10000 Iteration 7670 of 10000 Iteration 7680 of 10000 Iteration 7690 of 10000 Iteration 7700 of 10000 Iteration 7710 of 10000 Iteration 7720 of 10000 Iteration 7730 of 10000 Iteration 7740 of 10000 Iteration 7750 of 10000 Iteration 7760 of 10000 Iteration 7770 of 10000 Iteration 7780 of 10000 Iteration 7790 of 10000 Iteration 7800 of 10000 Iteration 7810 of 10000 Iteration 7820 of 10000 Iteration 7830 of 10000 Iteration 7840 of 10000 Iteration 7850 of 10000 Iteration 7860 of 10000 Iteration 7870 of 10000 Iteration 7880 of 10000 Iteration 7890 of 10000 Iteration 7900 of 10000 Iteration 7910 of 10000 Iteration 7920 of 10000 Iteration 7930 of 10000 Iteration 7940 of 10000 Iteration 7950 of 10000 Iteration 7960 of 10000 Iteration 7970 of 10000 Iteration 7980 of 10000 Iteration 7990 of 10000 Iteration 8000 of 10000 Iteration 8010 of 10000 Iteration 8020 of 10000 Iteration 8030 of 10000 Iteration 8040 of 10000 Iteration 8050 of 10000 Iteration 8060 of 10000 Iteration 8070 of 10000 Iteration 8080 of 10000 Iteration 8090 of 10000 Iteration 8100 of 10000 Iteration 8110 of 10000 Iteration 8120 of 10000 Iteration 8130 of 10000 Iteration 8140 of 10000 Iteration 8150 of 10000 Iteration 8160 of 10000 Iteration 8170 of 10000 Iteration 8180 of 10000 Iteration 8190 of 10000 Iteration 8200 of 10000 Iteration 8210 of 10000 Iteration 8220 of 10000 Iteration 8230 of 10000 Iteration 8240 of 10000 Iteration 8250 of 10000 Iteration 8260 of 10000 Iteration 8270 of 10000 Iteration 8280 of 10000 Iteration 8290 of 10000 Iteration 8300 of 10000 Iteration 8310 of 10000 Iteration 8320 of 10000 Iteration 8330 of 10000 Iteration 8340 of 10000 Iteration 8350 of 10000 Iteration 8360 of 10000 Iteration 8370 of 10000 Iteration 8380 of 10000 Iteration 8390 of 10000 Iteration 8400 of 10000 Iteration 8410 of 10000 Iteration 8420 of 10000 Iteration 8430 of 10000 Iteration 8440 of 10000 Iteration 8450 of 10000 Iteration 8460 of 10000 Iteration 8470 of 10000 Iteration 8480 of 10000 Iteration 8490 of 10000 Iteration 8500 of 10000 Iteration 8510 of 10000 Iteration 8520 of 10000 Iteration 8530 of 10000 Iteration 8540 of 10000 Iteration 8550 of 10000 Iteration 8560 of 10000 Iteration 8570 of 10000 Iteration 8580 of 10000 Iteration 8590 of 10000 Iteration 8600 of 10000 Iteration 8610 of 10000 Iteration 8620 of 10000 Iteration 8630 of 10000 Iteration 8640 of 10000 Iteration 8650 of 10000 Iteration 8660 of 10000 Iteration 8670 of 10000 Iteration 8680 of 10000 Iteration 8690 of 10000 Iteration 8700 of 10000 Iteration 8710 of 10000 Iteration 8720 of 10000 Iteration 8730 of 10000 Iteration 8740 of 10000 Iteration 8750 of 10000 Iteration 8760 of 10000 Iteration 8770 of 10000 Iteration 8780 of 10000 Iteration 8790 of 10000 Iteration 8800 of 10000 Iteration 8810 of 10000 Iteration 8820 of 10000 Iteration 8830 of 10000 Iteration 8840 of 10000 Iteration 8850 of 10000 Iteration 8860 of 10000 Iteration 8870 of 10000 Iteration 8880 of 10000 Iteration 8890 of 10000 Iteration 8900 of 10000 Iteration 8910 of 10000 Iteration 8920 of 10000 Iteration 8930 of 10000 Iteration 8940 of 10000 Iteration 8950 of 10000 Iteration 8960 of 10000 Iteration 8970 of 10000 Iteration 8980 of 10000 Iteration 8990 of 10000 Iteration 9000 of 10000 Iteration 9010 of 10000 Iteration 9020 of 10000 Iteration 9030 of 10000 Iteration 9040 of 10000 Iteration 9050 of 10000 Iteration 9060 of 10000 Iteration 9070 of 10000 Iteration 9080 of 10000 Iteration 9090 of 10000 Iteration 9100 of 10000 Iteration 9110 of 10000 Iteration 9120 of 10000 Iteration 9130 of 10000 Iteration 9140 of 10000 Iteration 9150 of 10000 Iteration 9160 of 10000 Iteration 9170 of 10000 Iteration 9180 of 10000 Iteration 9190 of 10000 Iteration 9200 of 10000 Iteration 9210 of 10000 Iteration 9220 of 10000 Iteration 9230 of 10000 Iteration 9240 of 10000 Iteration 9250 of 10000 Iteration 9260 of 10000 Iteration 9270 of 10000 Iteration 9280 of 10000 Iteration 9290 of 10000 Iteration 9300 of 10000 Iteration 9310 of 10000 Iteration 9320 of 10000 Iteration 9330 of 10000 Iteration 9340 of 10000 Iteration 9350 of 10000 Iteration 9360 of 10000 Iteration 9370 of 10000 Iteration 9380 of 10000 Iteration 9390 of 10000 Iteration 9400 of 10000 Iteration 9410 of 10000 Iteration 9420 of 10000 Iteration 9430 of 10000 Iteration 9440 of 10000 Iteration 9450 of 10000 Iteration 9460 of 10000 Iteration 9470 of 10000 Iteration 9480 of 10000 Iteration 9490 of 10000 Iteration 9500 of 10000 Iteration 9510 of 10000 Iteration 9520 of 10000 Iteration 9530 of 10000 Iteration 9540 of 10000 Iteration 9550 of 10000 Iteration 9560 of 10000 Iteration 9570 of 10000 Iteration 9580 of 10000 Iteration 9590 of 10000 Iteration 9600 of 10000 Iteration 9610 of 10000 Iteration 9620 of 10000 Iteration 9630 of 10000 Iteration 9640 of 10000 Iteration 9650 of 10000 Iteration 9660 of 10000 Iteration 9670 of 10000 Iteration 9680 of 10000 Iteration 9690 of 10000 Iteration 9700 of 10000 Iteration 9710 of 10000 Iteration 9720 of 10000 Iteration 9730 of 10000 Iteration 9740 of 10000 Iteration 9750 of 10000 Iteration 9760 of 10000 Iteration 9770 of 10000 Iteration 9780 of 10000 Iteration 9790 of 10000 Iteration 9800 of 10000 Iteration 9810 of 10000 Iteration 9820 of 10000 Iteration 9830 of 10000 Iteration 9840 of 10000 Iteration 9850 of 10000 Iteration 9860 of 10000 Iteration 9870 of 10000 Iteration 9880 of 10000 Iteration 9890 of 10000 Iteration 9900 of 10000 Iteration 9910 of 10000 Iteration 9920 of 10000 Iteration 9930 of 10000 Iteration 9940 of 10000 Iteration 9950 of 10000 Iteration 9960 of 10000 Iteration 9970 of 10000 Iteration 9980 of 10000 Iteration 9990 of 10000 Iteration 10000 of 10000 predict(object, overview = TRUE) #> Error in factor(apply(choice_probs[data$alternatives], 1, which.max),     labels = data$alternatives): invalid 'labels'; length 2 should be 1 or 1 predict(object, overview = FALSE) #> Error in factor(apply(choice_probs[data$alternatives], 1, which.max),     labels = data$alternatives): invalid 'labels'; length 2 should be 1 or 1"},{"path":"https://loelschlaeger.de/RprobitB/reference/preference_classification.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify preferences of deciders. — preference_classification","title":"Classify preferences of deciders. — preference_classification","text":"function classifies preferences deciders based estimated latent classes.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/preference_classification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify preferences of deciders. — preference_classification","text":"","code":"preference_classification(x)"},{"path":"https://loelschlaeger.de/RprobitB/reference/preference_classification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify preferences of deciders. — preference_classification","text":"x object class RprobitB_fit.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/preference_classification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify preferences of deciders. — preference_classification","text":"data frame deciders id latent class number.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/prepare_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare empirical choice data — prepare_data","title":"Prepare empirical choice data — prepare_data","text":"function prepares empirical choice data RprobitB package.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/prepare_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare empirical choice data — prepare_data","text":"","code":"prepare_data(   form,   choice_data,   re = NULL,   alternatives = NULL,   id = \"id\",   idc = NULL,   standardize = NULL,   missing_data = \"complete_cases\" )"},{"path":"https://loelschlaeger.de/RprobitB/reference/prepare_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare empirical choice data — prepare_data","text":"form formula object used specify probit model. structure choice ~ | B | C, names alternative choice situation specific covariates generic coefficient, B names choice situation specific covariates alternative specific coefficients, C names alternative choice situation specific covariates alternative specific coefficients. Separate multiple covariates one type + sign. default, alternative specific constants (ASCs) added model (except last alternative). can removed adding +0 second spot. See vignette vignette(\"data_management\", package = \"RprobitB\") details. choice_data data frame choice data following requirements: must \"wide\" format, .e. row represents one choice occasion. must contain column named id contains unique identifier decision maker. can contain column named idc contains unique identifier choice situation decision maker. information missing, identifier generated automatically appearance choices data set. can contain column named choice observed choices, choice must match name dependent variable form. column required model fitting prediction. must contain column named p_j alternative specific covariate p form choice alternative j alternatives. must contain column named q covariate q form constant across alternatives. re character (vector) covariates form random effects. re = NULL (default), random effects. random effects alternative specific constants, include \"ASC\" re. alternatives character vector names choice alternatives. specified, choice set defined observed choices. id character, name column choice_data contains unique identifier decision maker. default \"id\". idc character, name column choice_data contains unique identifier choice situation decision maker. default NULL, case identifier generated automatically. standardize character vector names covariates get standardized. Covariates type 1 3 addressed <covariate>_<alternative>. standardize = \"\", covariates get standardized. missing_data Specifies handle missing entries (NA, NaN, -Inf, Inf) choice_data. following options available: \"complete_cases\", removes rows containing missing entries, \"zero_out\", replaces missing entries zero, \"mean\", imputes missing entries covariate mean.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/prepare_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare empirical choice data — prepare_data","text":"object class RprobitB_data.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/prepare_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare empirical choice data — prepare_data","text":"See vignette \"Choice data\" details: vignette(\"choice_data\", package = \"RprobitB\").","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/prepare_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare empirical choice data — prepare_data","text":"","code":"data(\"Train\", package = \"mlogit\") data <- prepare_data(   form = choice ~ price + time + comfort + change | 1,   choice_data = Train,   re = c(\"price\", \"time\"),   id = \"id\",   idc = \"choiceid\" )"},{"path":"https://loelschlaeger.de/RprobitB/reference/rdirichlet.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw from Dirichlet distribution — rdirichlet","title":"Draw from Dirichlet distribution — rdirichlet","text":"Function draw Dirichlet distribution.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rdirichlet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw from Dirichlet distribution — rdirichlet","text":"","code":"rdirichlet(delta)"},{"path":"https://loelschlaeger.de/RprobitB/reference/rdirichlet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw from Dirichlet distribution — rdirichlet","text":"delta vector, concentration parameter.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rdirichlet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw from Dirichlet distribution — rdirichlet","text":"vector, sample Dirichlet distribution length delta.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rdirichlet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw from Dirichlet distribution — rdirichlet","text":"","code":"rdirichlet(delta = 1:3) #>            [,1] #> [1,] 0.04219752 #> [2,] 0.46569257 #> [3,] 0.49210991"},{"path":"https://loelschlaeger.de/RprobitB/reference/rmvnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw from multivariate normal distribution — rmvnorm","title":"Draw from multivariate normal distribution — rmvnorm","text":"function draws multivariate normal distribution.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rmvnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw from multivariate normal distribution — rmvnorm","text":"","code":"rmvnorm(mu, Sigma)"},{"path":"https://loelschlaeger.de/RprobitB/reference/rmvnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw from multivariate normal distribution — rmvnorm","text":"mu mean vector length n. Sigma covariance matrix dimension n x n.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rmvnorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw from multivariate normal distribution — rmvnorm","text":"numeric vector length n.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rmvnorm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw from multivariate normal distribution — rmvnorm","text":"function builds upon following fact: \\(\\epsilon = (\\epsilon_1,\\dots,\\epsilon_n)\\), \\(\\epsilon_i\\) drawn independently standard normal distribution, \\(\\mu+L\\epsilon\\) draw multivariate normal distribution \\(N(\\mu,\\Sigma)\\), \\(L\\) lower triangular factor Choleski decomposition \\(\\Sigma\\).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rmvnorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw from multivariate normal distribution — rmvnorm","text":"","code":"mu <- c(0,0) Sigma <- diag(2) rmvnorm(mu = mu, Sigma = Sigma) #>             [,1] #> [1,] -0.03606039 #> [2,]  1.27735276"},{"path":"https://loelschlaeger.de/RprobitB/reference/rtnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw from truncated normal — rtnorm","title":"Draw from truncated normal — rtnorm","text":"function draws truncated univariate normal distribution.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rtnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw from truncated normal — rtnorm","text":"","code":"rtnorm(mu, sig, trunpt, above)"},{"path":"https://loelschlaeger.de/RprobitB/reference/rtnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw from truncated normal — rtnorm","text":"mu mean. sig standard deviation. trunpt truncation point. boolean, TRUE truncate , otherwise .","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rtnorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw from truncated normal — rtnorm","text":"numeric value.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rtnorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw from truncated normal — rtnorm","text":"","code":"### draw R samples from a standard normal truncated at 1 from above R <- 1e4 draws <- replicate(R, rtnorm(1,1,1,TRUE)) ### draw the density plot(density(draws))"},{"path":"https://loelschlaeger.de/RprobitB/reference/rwishart.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw from Wishart distribution — rwishart","title":"Draw from Wishart distribution — rwishart","text":"function draws Wishart inverted Wishart distribution.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rwishart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw from Wishart distribution — rwishart","text":"","code":"rwishart(nu, V)"},{"path":"https://loelschlaeger.de/RprobitB/reference/rwishart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw from Wishart distribution — rwishart","text":"nu numeric, degrees freedom. Must least number dimensions. V matrix, scale matrix.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rwishart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw from Wishart distribution — rwishart","text":"list, draws Wishart (W), inverted Wishart (IW), corresponding Choleski decomposition (C CI).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rwishart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw from Wishart distribution — rwishart","text":"Wishart distribution generalization multiple dimensions gamma distributions draws space covariance matrices. expectation nu*V variance increases nu values V. Wishart distribution conjugate prior precision matrix multivariate normal distribution proper nu greater number dimensions.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/rwishart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw from Wishart distribution — rwishart","text":"","code":"rwishart(nu = 2, V = diag(2)) #> $W #>           [,1]      [,2] #> [1,] 0.8782119 0.0597661 #> [2,] 0.0597661 0.2480358 #>  #> $IW #>            [,1]       [,2] #> [1,]  1.1576608 -0.2789471 #> [2,] -0.2789471  4.0988905 #>  #> $C #>           [,1]      [,2] #> [1,] 0.9371296 0.0637757 #> [2,] 0.0000000 0.4939316 #>  #> $CI #>          [,1]       [,2] #> [1,] 1.067088 -0.1377808 #> [2,] 0.000000  2.0245717 #>"},{"path":"https://loelschlaeger.de/RprobitB/reference/set_initial_gibbs_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Set initial values for the Gibbs sampler — set_initial_gibbs_values","title":"Set initial values for the Gibbs sampler — set_initial_gibbs_values","text":"function sets initial values Gibbs sampler.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/set_initial_gibbs_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set initial values for the Gibbs sampler — set_initial_gibbs_values","text":"","code":"set_initial_gibbs_values(N, T, J, P_f, P_r, C)"},{"path":"https://loelschlaeger.de/RprobitB/reference/set_initial_gibbs_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set initial values for the Gibbs sampler — set_initial_gibbs_values","text":"N number (greater equal 1) decision makers. T number (greater equal 1) choice occasions vector choice occasions length N (.e. decision maker specific number). J number (greater equal 2) choice alternatives. P_f number covariates connected fixed coefficient (can 0). P_r number covariates connected random coefficient (can 0). C number (greater equal 1) latent classes.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/set_initial_gibbs_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set initial values for the Gibbs sampler — set_initial_gibbs_values","text":"list initial values Gibbs sampler.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/set_mfrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Balancing visualization of multiple figures — set_mfrow","title":"Balancing visualization of multiple figures — set_mfrow","text":"function finds balanced setting par(mfrow).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/set_mfrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Balancing visualization of multiple figures — set_mfrow","text":"","code":"set_mfrow(n)"},{"path":"https://loelschlaeger.de/RprobitB/reference/set_mfrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Balancing visualization of multiple figures — set_mfrow","text":"n total number figures.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/set_mfrow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Balancing visualization of multiple figures — set_mfrow","text":"vector form c(nr,nc). par(mfrow = c(nr,nc)), subsequent figures drawn nr x nc array current device rows.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/set_mfrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Balancing visualization of multiple figures — set_mfrow","text":"","code":"RprobitB:::set_mfrow(3) #> [1] 2 2"},{"path":"https://loelschlaeger.de/RprobitB/reference/simulate_choices.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate choice data. — simulate_choices","title":"Simulate choice data. — simulate_choices","text":"function simulates choice data RprobitB package.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/simulate_choices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate choice data. — simulate_choices","text":"","code":"simulate_choices(   form,   N,   T,   J,   re = NULL,   alternatives = NULL,   covariates = NULL,   seed = NULL,   ... )"},{"path":"https://loelschlaeger.de/RprobitB/reference/simulate_choices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate choice data. — simulate_choices","text":"form formula object used specify probit model. structure choice ~ | B | C, names alternative choice situation specific covariates generic coefficient, B names choice situation specific covariates alternative specific coefficients, C names alternative choice situation specific covariates alternative specific coefficients. Separate multiple covariates one type + sign. default, alternative specific constants (ASCs) added model (except last alternative). can removed adding +0 second spot. See vignette vignette(\"data_management\", package = \"RprobitB\") details. N number (greater equal 1) decision makers. T number (greater equal 1) choice occasions vector choice occasions length N (.e. decision maker specific number). J number (greater equal 2) choice alternatives. re character (vector) covariates form random effects. re = NULL (default), random effects. random effects alternative specific constants, include \"ASC\" re. alternatives character vector names choice alternatives. specified, choice set defined observed choices. covariates named list covariate values. element must vector length equal number choice occasions named according covariate. Covariates values supplied drawn standard normal distribution. seed Set seed simulation. ... Optionally specify alpha, C, s, b, Omega, Sigma, Sigma_full, beta, z simulation.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/simulate_choices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate choice data. — simulate_choices","text":"object class RprobitB_data.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/simulate_choices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate choice data. — simulate_choices","text":"See vignette \"Choice data\" details: vignette(\"choice_data\", package = \"RprobitB\").","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/simulate_choices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate choice data. — simulate_choices","text":"","code":"data <- simulate_choices(   form = choice ~ cost | income | time,   N = 100,   T = 10,   J = 2,   re = c(\"cost\", \"time\"),   alternatives = c(\"car\", \"bus\"),   seed = 1,   alpha = c(-1, 1),   b = matrix(c(-1, -1, -0.5, -1.5, 0, -1), ncol = 2),   C = 2 )"},{"path":"https://loelschlaeger.de/RprobitB/reference/sufficient_statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute sufficient statistics — sufficient_statistics","title":"Compute sufficient statistics — sufficient_statistics","text":"function computes sufficient statistics data Gibbs sampler.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/sufficient_statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute sufficient statistics — sufficient_statistics","text":"","code":"sufficient_statistics(data, normalization)"},{"path":"https://loelschlaeger.de/RprobitB/reference/sufficient_statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute sufficient statistics — sufficient_statistics","text":"data object class RprobitB_data. normalization object class RprobitB_normalization, can created via RprobitB_normalization.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/sufficient_statistics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute sufficient statistics — sufficient_statistics","text":"list sufficient statistics data Gibbs sampling, containing elements N, T, J, P_f P_r data, Tvec, vector choice occasions decider length N, csTvec, vector length N cumulated sums Tvec starting 0, W, list design matrices differenced respect alternative number normalization$level decider choice occasion covariates linked fixed coefficient (NA P_f = 0), X, list design matrices differenced respect alternative number normalization$level decider choice occasion covariates linked random coefficient (NA P_r = 0), y, matrix dimension N x max(Tvec) observed choices deciders rows choice occasions columns, decoded numeric values respect appearance data$alternatives, rows filled NA case unbalanced panel, WkW, matrix dimension P_f^2 x (J-1)^2, sum Kronecker products transposed element W , XkX, list length N, element constructed way WkW elements X separately decider.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/sufficient_statistics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute sufficient statistics — sufficient_statistics","text":"function provides set sufficient statistics data object estimation routine save computation time.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/sufficient_statistics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute sufficient statistics — sufficient_statistics","text":"","code":"data <- simulate_choices(form = choice ~ v1 | v2 + 0, N = 2, T = 1:2, J = 3, re = \"v2\") normalization <- RprobitB:::RprobitB_normalization(J = data$J, P_f = data$P_f) RprobitB:::sufficient_statistics(data = data, normalization = normalization) #> $N #> [1] 2 #>  #> $T #> [1] 1 2 #>  #> $J #> [1] 3 #>  #> $P_f #> [1] 1 #>  #> $P_r #> [1] 2 #>  #> $Tvec #> [1] 1 2 #>  #> $csTvec #> [1] 0 1 #>  #> $W #> $W[[1]] #>              v1 #> [1,] -0.1134949 #> [2,]  0.8146276 #>  #> $W[[2]] #>             v1 #> [1,] 0.4088111 #> [2,] 1.2051665 #>  #> $W[[3]] #>              v1 #> [1,]  1.5144790 #> [2,] -0.2588766 #>  #>  #> $X #> $X[[1]] #>            v2_A       v2_B #> [1,] 0.08900887 0.00000000 #> [2,] 0.00000000 0.08900887 #>  #> $X[[2]] #>             v2_A        v2_B #> [1,] -0.09891759  0.00000000 #> [2,]  0.00000000 -0.09891759 #>  #> $X[[3]] #>           v2_A      v2_B #> [1,] -1.315725  0.000000 #> [2,]  0.000000 -1.315725 #>  #>  #> $y #>      [,1] [,2] #> [1,]    1   NA #> [2,]    3    3 #>  #> $WkW #>          [,1]        [,2]        [,3]     [,4] #> [1,] 2.473654 0.008166166 0.008166166 2.183061 #>  #> $XkX #> $XkX[[1]] #>             [,1]        [,2]        [,3]        [,4] #> [1,] 0.007922579 0.000000000 0.000000000 0.000000000 #> [2,] 0.000000000 0.007922579 0.000000000 0.000000000 #> [3,] 0.000000000 0.000000000 0.007922579 0.000000000 #> [4,] 0.000000000 0.000000000 0.000000000 0.007922579 #>  #> $XkX[[2]] #>          [,1]     [,2]     [,3]     [,4] #> [1,] 1.740916 0.000000 0.000000 0.000000 #> [2,] 0.000000 1.740916 0.000000 0.000000 #> [3,] 0.000000 0.000000 1.740916 0.000000 #> [4,] 0.000000 0.000000 0.000000 1.740916 #>  #>"},{"path":"https://loelschlaeger.de/RprobitB/reference/train_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Split choice data. — train_test","title":"Split choice data. — train_test","text":"function splits choice data train test part.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/train_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split choice data. — train_test","text":"","code":"train_test(   x,   test_proportion = NULL,   test_number = NULL,   by = \"N\",   random = FALSE,   seed = NULL )"},{"path":"https://loelschlaeger.de/RprobitB/reference/train_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split choice data. — train_test","text":"x object class RprobitB_data. test_proportion number 0 1 gives proportion test subsample. test_number positive integer gives number observations test subsample. One \"N\" (split deciders) \"T\" (split choice occasions). random TRUE, subsamples build randomly. seed Set seed building subsamples randomly.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/train_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split choice data. — train_test","text":"list two objects class RprobitB_data, named \"train\"\"test\".","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/train_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Split choice data. — train_test","text":"See vignette \"Choice data\" details: vignette(\"choice_data\", package = \"RprobitB\").","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/train_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split choice data. — train_test","text":"","code":"x <- simulate_choices(form = choice ~ covariate, N = 10, T = 10, J = 2)  # 70% of deciders in the train subsample, 30% of deciders in the test subsample train_test(x, test_proportion = 0.3, by = \"N\") #> $train #> Simulated data of 70 choices. #>  #> $test #> Simulated data of 30 choices. #>   # 2 randomly chosen choice occasions per decider in the test subsample, the rest # in the train subsample train_test(x, test_number = 2, by = \"T\", random = TRUE, seed = 1) #> $train #> Simulated data of 80 choices. #>  #> $test #> Simulated data of 20 choices. #>"},{"path":"https://loelschlaeger.de/RprobitB/reference/transform.RprobitB_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the length of the burn-in period, the thinning factor and the scale\nafter Gibbs sampling. — transform.RprobitB_fit","title":"Change the length of the burn-in period, the thinning factor and the scale\nafter Gibbs sampling. — transform.RprobitB_fit","text":"Given object class RprobitB_fit, function can: change length B burn-period, change thinning factor Q Gibbs samples, change model scale.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform.RprobitB_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the length of the burn-in period, the thinning factor and the scale\nafter Gibbs sampling. — transform.RprobitB_fit","text":"","code":"# S3 method for RprobitB_fit transform(   `_data`,   B = NULL,   Q = NULL,   scale = NULL,   check_preference_flip = TRUE,   ... )"},{"path":"https://loelschlaeger.de/RprobitB/reference/transform.RprobitB_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the length of the burn-in period, the thinning factor and the scale\nafter Gibbs sampling. — transform.RprobitB_fit","text":"_data object class RprobitB_fit. B length burn-period, .e. non-negative number samples discarded. Q thinning factor Gibbs samples, .e. every Qth sample kept. scale named list three elements, determining parameter normalization respect utility scale: parameter: Either \"\" (linear coefficient \"alpha\") \"s\" (variance error-term covariance matrix \"Sigma\"). index: index parameter gets fixed. value: value fixed parameter. check_preference_flip TRUE check flip preferences new scale. ... Ignored.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform.RprobitB_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change the length of the burn-in period, the thinning factor and the scale\nafter Gibbs sampling. — transform.RprobitB_fit","text":"object class RprobitB_fit.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform.RprobitB_fit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Change the length of the burn-in period, the thinning factor and the scale\nafter Gibbs sampling. — transform.RprobitB_fit","text":"See vignette \"Model fitting\" details: vignette(\"model_fitting\", package = \"RprobitB\").","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform_gibbs_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Transformation of Gibbs samples. — transform_gibbs_samples","title":"Transformation of Gibbs samples. — transform_gibbs_samples","text":"function normalizes, burns thins Gibbs samples.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform_gibbs_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transformation of Gibbs samples. — transform_gibbs_samples","text":"","code":"transform_gibbs_samples(gibbs_samples, R, B, Q, normalization)"},{"path":"https://loelschlaeger.de/RprobitB/reference/transform_gibbs_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transformation of Gibbs samples. — transform_gibbs_samples","text":"gibbs_samples output gibbs_sampling. R number iterations Gibbs sampler. B length burn-period, .e. non-negative number samples discarded. Q thinning factor Gibbs samples, .e. every Qth sample kept. normalization object class RprobitB_normalization, can created via RprobitB_normalization.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform_gibbs_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transformation of Gibbs samples. — transform_gibbs_samples","text":"object class RprobitB_gibbs_samples, .e. list transformed Gibbs samples. element list, containing (available) Gibbs samples s, alpha, b, Omega, Sigma: gibbs_samples: function input gibbs_samples. gibbs_samples_n: list normalized samples based normalization. gibbs_samples_nb: list normalized burned samples based normalization B. gibbs_samples_nt: list normalized thinned samples based normalization Q gibbs_samples_nbt: list normalized, burned thinned samples based normalization, B Q","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform_parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Transformation of parameter values. — transform_parameter","title":"Transformation of parameter values. — transform_parameter","text":"function transforms parameter values based normalization.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform_parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transformation of parameter values. — transform_parameter","text":"","code":"transform_parameter(parameter, normalization)"},{"path":"https://loelschlaeger.de/RprobitB/reference/transform_parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transformation of parameter values. — transform_parameter","text":"parameter object class RprobitB_parameter. normalization object class RprobitB_normalization.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/transform_parameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transformation of parameter values. — transform_parameter","text":"object class RprobitB_parameter.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/undiff_Sigma.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform differenced to non-differenced error term covariance matrix. — undiff_Sigma","title":"Transform differenced to non-differenced error term covariance matrix. — undiff_Sigma","text":"function transforms differenced error term covariance matrix Sigma back non-differenced error term covariance matrix.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/undiff_Sigma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform differenced to non-differenced error term covariance matrix. — undiff_Sigma","text":"","code":"undiff_Sigma(Sigma, i, checks = TRUE, pos = TRUE, labels = TRUE)"},{"path":"https://loelschlaeger.de/RprobitB/reference/undiff_Sigma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform differenced to non-differenced error term covariance matrix. — undiff_Sigma","text":"Sigma error term covariance matrix dimension J-1 x J-1 differenced respect alternative . integer, alternative number respect Sigma differenced. checks TRUE function runs additional input transformation checks. pos TRUE function returns positive matrix. labels TRUE function adds labels output matrix.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/undiff_Sigma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform differenced to non-differenced error term covariance matrix. — undiff_Sigma","text":"covariance matrix dimension J x J. covariance matrix gets differenced respect alternative , results Sigma.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_Omega.html","id":null,"dir":"Reference","previous_headings":"","what":"Update class covariances — update_Omega","title":"Update class covariances — update_Omega","text":"function updates class covariances (independent classes).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_Omega.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update class covariances — update_Omega","text":"","code":"update_Omega(beta, b, z, m, nu, Theta)"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_Omega.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update class covariances — update_Omega","text":"beta matrix decision-maker specific coefficient vectors dimension P_r x N. Set NA P_r = 0. b matrix class means columns dimension P_r x C. Set NA P_r = 0. z vector allocation variables length N. Set NA P_r = 0. m vector class sizes length C. nu degrees freedom (natural number greater P_r) Inverse Wishart prior Omega_c. Theta scale matrix dimension P_r x P_r Inverse Wishart prior Omega_c.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_Omega.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update class covariances — update_Omega","text":"matrix updated covariance matrices class columns.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_Omega.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update class covariances — update_Omega","text":"following holds independently class \\(c\\). Let \\(\\Omega_c\\) covariance matrix class number c. priori, assume \\(\\Omega_c\\) inverse Wishart distributed \\(\\nu\\) degrees freedom scale matrix \\(\\Theta\\). Let \\((\\beta_n)_{z_n=c}\\) collection \\(\\beta_n\\) currently allocated class \\(c\\), \\(m_c\\) size class \\(c\\), \\(b_c\\) class mean vector. Due conjugacy prior, posterior \\(\\Pr(\\Omega_c \\mid (\\beta_n)_{z_n=c})\\) follows inverted Wishart distribution \\(\\nu + m_c\\) degrees freedom scale matrix \\(\\Theta^{-1} + \\sum_n (\\beta_n - b_c)(\\beta_n - b_c)'\\), product values \\(n\\) \\(z_n=c\\) holds.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_Omega.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update class covariances — update_Omega","text":"","code":"### N = 100 decider, P_r = 2 random coefficients, and C = 2 latent classes N <- 100 b <- cbind(c(0,0),c(1,1)) (Omega_true <- matrix(c(1,0.3,0.3,0.5,1,-0.3,-0.3,0.8), ncol=2)) #>      [,1] [,2] #> [1,]  1.0  1.0 #> [2,]  0.3 -0.3 #> [3,]  0.3 -0.3 #> [4,]  0.5  0.8 z <- c(rep(1,N/2),rep(2,N/2)) m <- as.numeric(table(z)) beta <- sapply(z, function(z) rmvnorm(b[,z], matrix(Omega_true[,z],2,2))) ### degrees of freedom and scale matrix for the Wishart prior nu <- 1 Theta <- diag(2) ### updated class covariance matrices (in columns) update_Omega(beta = beta, b = b, z = z, m = m, nu = nu, Theta = Theta) #>           [,1]       [,2] #> [1,] 0.6972189  1.0776332 #> [2,] 0.2217133 -0.2271837 #> [3,] 0.2217133 -0.2271837 #> [4,] 0.3307745  1.3250835"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_Sigma.html","id":null,"dir":"Reference","previous_headings":"","what":"Update error term covariance matrix of multiple linear regression — update_Sigma","title":"Update error term covariance matrix of multiple linear regression — update_Sigma","text":"function updates error term covariance matrix multiple linear regression.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_Sigma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update error term covariance matrix of multiple linear regression — update_Sigma","text":"","code":"update_Sigma(kappa, E, N, S)"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_Sigma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update error term covariance matrix of multiple linear regression — update_Sigma","text":"kappa degrees freedom (natural number greater J-1) Inverse Wishart prior Sigma. E scale matrix dimension J-1 x J-1 Inverse Wishart prior Sigma. N draw size. S matrix, sum outer products residuals \\((\\epsilon_n)_{n=1,\\dots,N}\\).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_Sigma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update error term covariance matrix of multiple linear regression — update_Sigma","text":"matrix, draw Inverse Wishart posterior distribution error term covariance matrix multiple linear regression.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_Sigma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update error term covariance matrix of multiple linear regression — update_Sigma","text":"function draws posterior distribution covariance matrix \\(\\Sigma\\) linear utility equation $$U_n = X_n\\beta + \\epsilon_n,$$ \\(U_n\\) (latent, assumed known) utility vector decider \\(n = 1,\\dots,N\\), \\(X_n\\) design matrix build choice characteristics faced \\(n\\), \\(\\beta\\) coefficient vector, \\(\\epsilon_n\\) error term assumed normally distributed mean \\(0\\) unknown covariance matrix \\(\\Sigma\\). priori assume (conjugate) Inverse Wishart distribution $$\\Sigma \\sim W(\\kappa,E)$$ \\(\\kappa\\) degrees freedom scale matrix \\(E\\). posterior \\(\\Sigma\\) Inverted Wishart distribution \\(\\kappa + N\\) degrees freedom scale matrix \\(E^{-1}+S\\), \\(S = \\sum_{n=1}^{N} \\epsilon_n \\epsilon_n'\\) sum outer products residuals \\((\\epsilon_n = U_n - X_n\\beta)_n\\).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_Sigma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update error term covariance matrix of multiple linear regression — update_Sigma","text":"","code":"### true error term covariance matrix (Sigma_true <- matrix(c(1,0.5,0.2,0.5,1,0.2,0.2,0.2,2), ncol=3)) #>      [,1] [,2] [,3] #> [1,]  1.0  0.5  0.2 #> [2,]  0.5  1.0  0.2 #> [3,]  0.2  0.2  2.0 ### coefficient vector beta <- matrix(c(-1,1), ncol=1) ### draw data N <- 100 X <- replicate(N, matrix(rnorm(6), ncol=2), simplify = FALSE) eps <- replicate(N, rmvnorm(mu = c(0,0,0), Sigma = Sigma_true), simplify = FALSE) U <- mapply(function(X, eps) X %*% beta + eps, X, eps, SIMPLIFY = FALSE) ### prior parameters for covariance matrix kappa <- 4 E <- diag(3) ### draw from posterior of coefficient vector outer_prod <- function(X, U) (U - X %*% beta) %*% t(U - X %*% beta) S <- Reduce(`+`, mapply(outer_prod, X, U, SIMPLIFY = FALSE)) Sigma_draws <- replicate(100, update_Sigma(kappa, E, N, S)) apply(Sigma_draws, 1:2, mean) #>           [,1]        [,2]        [,3] #> [1,] 1.2410191  0.61306570  0.16269546 #> [2,] 0.6130657  1.15402615 -0.04130621 #> [3,] 0.1626955 -0.04130621  1.50028635 apply(Sigma_draws, 1:2, stats::sd) #>           [,1]      [,2]      [,3] #> [1,] 0.2093024 0.1533339 0.1488460 #> [2,] 0.1533339 0.1634999 0.1488295 #> [3,] 0.1488460 0.1488295 0.2210208"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_U.html","id":null,"dir":"Reference","previous_headings":"","what":"Update latent utility vector — update_U","title":"Update latent utility vector — update_U","text":"function updates latent utility vector, (independent across deciders choice occasions) utility alternative updated conditional utilities.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_U.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update latent utility vector — update_U","text":"","code":"update_U(U, y, sys, Sigmainv)"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_U.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update latent utility vector — update_U","text":"U current utility vector length J-1. y integer 1 J, index chosen alternative. sys vector length J-1, systematic utility part. Sigmainv inverted error term covariance matrix dimension J-1 x J-1.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_U.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update latent utility vector — update_U","text":"updated utility vector length J-1.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_U.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update latent utility vector — update_U","text":"key ingredient Gibbs sampling probit models considering latent utilities parameters can updated (data augmentation). Independently deciders \\(n=1,\\dots,N\\) choice occasions \\(t=1,...,T_n\\), utility vectors \\((U_{nt})_{n,t}\\) linear utility equation \\(U_{nt} = X_{nt} \\beta + \\epsilon_{nt}\\) follow \\(J-1\\)-dimensional truncated normal distribution, \\(J\\) number alternatives, \\(X_{nt} \\beta\\) systematic (.e. non-random) part utility \\(\\epsilon_{nt} \\sim N(0,\\Sigma)\\) error term. truncation points determined choices \\(y_{nt}\\). draw truncated multivariate normal distribution, function implemented approach Geweke (1998) conditionally draw component separately univariate truncated normal distribution. See Oelschläger (2020) concrete formulas.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_U.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Update latent utility vector — update_U","text":"See Geweke (1998) Efficient Simulation Multivariate Normal Student-t Distributions Subject Linear Constraints Evaluation Constraint Probabilities Gibbs sampling truncated multivariate normal distribution. See Oelschläger Bauer (2020) Bayes Estimation Latent Class Mixed Multinomial Probit Models application probit utilities.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_U.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update latent utility vector — update_U","text":"","code":"U <- c(0,0,0) y <- 3 sys <- c(0,0,0) Sigmainv <- solve(diag(3)) update_U(U, y, sys, Sigmainv) #>            [,1] #> [1,] -0.5638333 #> [2,] -1.1810392 #> [3,]  0.8306494"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_b.html","id":null,"dir":"Reference","previous_headings":"","what":"Update class means — update_b","title":"Update class means — update_b","text":"function updates class means (independent classes).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_b.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update class means — update_b","text":"","code":"update_b(beta, Omega, z, m, xi, Dinv)"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_b.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update class means — update_b","text":"beta matrix decision-maker specific coefficient vectors dimension P_r x N. Set NA P_r = 0. Omega matrix class covariance matrices columns dimension P_r*P_r x C. Set NA P_r = 0. z vector allocation variables length N. Set NA P_r = 0. m vector class sizes length C. xi mean vector length P_r normal prior b_c. Dinv precision matrix (.e. inverse covariance matrix) dimension P_r x P_r normal prior b_c.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_b.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update class means — update_b","text":"matrix updated means class columns.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_b.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update class means — update_b","text":"following holds independently class \\(c\\). Let \\(b_c\\) mean class number \\(c\\). priori, assume \\(b_c\\) normally distributed mean vector \\(\\xi\\) covariance matrix \\(D\\). Let \\((\\beta_n)_{z_n=c}\\) collection \\(\\beta_n\\) currently allocated class \\(c\\), \\(m_c\\) class size, \\(\\bar{b}_c\\) arithmetic mean. Assuming independence across draws, \\((\\beta_n)_{z_n=c}\\) normal likelihood $$\\prod_n \\phi(\\beta_n \\mid b_c,\\Omega_c),$$ product values \\(n\\) \\(z_n=c\\) holds. Due conjugacy prior, posterior \\(\\Pr(b_c \\mid (\\beta_n)_{z_n=c})\\) follows normal distribution mean $$(D^{-1} + m_c\\Omega_c^{-1})^{-1}(D^{-1}\\xi + m_c\\Omega_c^{-1}\\bar{b}_c)$$ covariance matrix $$(D^{-1} + m_c \\Omega_c^{-1})^{-1}.$$","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_b.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update class means — update_b","text":"","code":"### N = 100 decider, P_r = 2 random coefficients, and C = 2 latent classes N <- 100 (b_true <- cbind(c(0,0),c(1,1))) #>      [,1] [,2] #> [1,]    0    1 #> [2,]    0    1 Omega <- matrix(c(1,0.3,0.3,0.5,1,-0.3,-0.3,0.8), ncol=2) z <- c(rep(1,N/2),rep(2,N/2)) m <- as.numeric(table(z)) beta <- sapply(z, function(z) rmvnorm(b_true[,z], matrix(Omega[,z],2,2))) ### prior mean vector and precision matrix (inverse of covariance matrix) xi <- c(0,0) Dinv <- diag(2) ### updated class means (in columns) update_b(beta = beta, Omega = Omega, z = z, m = m, xi = xi, Dinv = Dinv) #>              [,1]      [,2] #> [1,] -0.001664447 1.1152828 #> [2,]  0.126144693 0.7600389"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_classes_dp.html","id":null,"dir":"Reference","previous_headings":"","what":"Dirichlet process-based update of latent classes — update_classes_dp","title":"Dirichlet process-based update of latent classes — update_classes_dp","text":"function updates latent classes based Dirichlet process.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_classes_dp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dirichlet process-based update of latent classes — update_classes_dp","text":"","code":"update_classes_dp(   Cmax,   beta,   z,   b,   Omega,   delta,   xi,   D,   nu,   Theta,   s_desc = TRUE )"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_classes_dp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dirichlet process-based update of latent classes — update_classes_dp","text":"Cmax maximum number classes. beta matrix decision-maker specific coefficient vectors dimension P_r x N. Set NA P_r = 0. z vector allocation variables length N. Set NA P_r = 0. b matrix class means columns dimension P_r x C. Set NA P_r = 0. Omega matrix class covariance matrices columns dimension P_r*P_r x C. Set NA P_r = 0. delta numeric concentration parameter vector rep(delta,C) Dirichlet prior s. xi mean vector length P_r normal prior b_c. D covariance matrix dimension P_r x P_r normal prior b_c. nu degrees freedom (natural number greater P_r) Inverse Wishart prior Omega_c. Theta scale matrix dimension P_r x P_r Inverse Wishart prior Omega_c. s_desc TRUE, sort classes descending class weight.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_classes_dp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dirichlet process-based update of latent classes — update_classes_dp","text":"list updated values z, b, Omega, s.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_classes_dp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dirichlet process-based update of latent classes — update_classes_dp","text":"added.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_classes_dp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dirichlet process-based update of latent classes — update_classes_dp","text":"","code":"set.seed(1) z <- c(rep(1,20),rep(2,30)) b <- matrix(c(1,1,1,-1), ncol=2) Omega <- matrix(c(1,0.3,0.3,0.5,1,-0.3,-0.3,0.8), ncol=2) beta <- sapply(z, function(z) rmvnorm(b[,z], matrix(Omega[,z],2,2))) delta <- 1 xi <- numeric(2) D <- diag(2) nu <- 4 Theta <- diag(2) RprobitB:::update_classes_dp(Cmax = 10, beta = beta, z = z, b = b, Omega = Omega,                              delta = delta, xi = xi, D = D, nu = nu, Theta = Theta) #> $z #>       [,1] #>  [1,]    2 #>  [2,]    2 #>  [3,]    2 #>  [4,]    2 #>  [5,]    2 #>  [6,]    2 #>  [7,]    1 #>  [8,]    2 #>  [9,]    2 #> [10,]    2 #> [11,]    2 #> [12,]    1 #> [13,]    2 #> [14,]    2 #> [15,]    2 #> [16,]    2 #> [17,]    2 #> [18,]    3 #> [19,]    1 #> [20,]    2 #> [21,]    1 #> [22,]    1 #> [23,]    1 #> [24,]    1 #> [25,]    1 #> [26,]    1 #> [27,]    1 #> [28,]    1 #> [29,]    1 #> [30,]    1 #> [31,]    1 #> [32,]    1 #> [33,]    1 #> [34,]    3 #> [35,]    2 #> [36,]    1 #> [37,]    1 #> [38,]    1 #> [39,]    1 #> [40,]    1 #> [41,]    1 #> [42,]    1 #> [43,]    1 #> [44,]    1 #> [45,]    1 #> [46,]    1 #> [47,]    1 #> [48,]    1 #> [49,]    1 #> [50,]    3 #>  #> $b #>            [,1]     [,2]       [,3] #> [1,]  1.1955613 1.381324 -0.4912123 #> [2,] -0.9791527 1.218404  0.4543349 #>  #> $Omega #>            [,1]      [,2]        [,3] #> [1,]  0.7161232 0.4793177  0.37048920 #> [2,] -0.1869330 0.1085593 -0.03874837 #> [3,] -0.1869330 0.1085593 -0.03874837 #> [4,]  0.5616673 0.2745555  0.37381786 #>  #> $s #> [1] 0.60 0.34 0.06 #>"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_classes_wb.html","id":null,"dir":"Reference","previous_headings":"","what":"Weight-based update of latent classes — update_classes_wb","title":"Weight-based update of latent classes — update_classes_wb","text":"function updates latent classes based class weights.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_classes_wb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weight-based update of latent classes — update_classes_wb","text":"","code":"update_classes_wb(Cmax, epsmin, epsmax, distmin, s, b, Omega)"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_classes_wb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weight-based update of latent classes — update_classes_wb","text":"Cmax maximum number classes. epsmin threshold weight (0 1) removing class. epsmax threshold weight (0 1) splitting class. distmin (non-negative) threshold difference class means joining two classes. s vector class weights length C. Set NA P_r = 0. identifiability, vector must non-ascending. b matrix class means columns dimension P_r x C. Set NA P_r = 0. Omega matrix class covariance matrices columns dimension P_r*P_r x C. Set NA P_r = 0.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_classes_wb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weight-based update of latent classes — update_classes_wb","text":"list updated values s, b, Omega.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_classes_wb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weight-based update of latent classes — update_classes_wb","text":"updating scheme bases following rules: remove class \\(c\\), \\(s_c<\\epsilon_{\\text{min}}\\), .e. class weight \\(s_c\\) drops threshold \\(\\epsilon_{\\text{min}}\\). case indicates class \\(c\\) negligible impact mixing distribution. split class \\(c\\) two classes \\(c_1\\) \\(c_2\\), \\(s_c>\\epsilon_\\text{max}\\). case indicates class \\(c\\) high influence mixing distribution whose approximation can potentially improved increasing resolution directions high variance. Therefore, class means \\(b_{c_1}\\) \\(b_{c_2}\\) new classes \\(c_1\\) \\(c_2\\) shifted opposite directions class mean \\(b_c\\) old class \\(c\\) direction highest variance. join two classes \\(c_1\\) \\(c_2\\) one class \\(c\\), \\(\\lVert b_{c_1} - b_{c_2} \\rVert<\\epsilon_{\\text{distmin}}\\), .e. euclidean distance class means \\(b_{c_1}\\) \\(b_{c_2}\\) drops threshold \\(\\epsilon_{\\text{distmin}}\\). case indicates location redundancy repealed. parameters \\(c\\) assigned adding values \\(s\\) \\(c_1\\) \\(c_2\\) averaging values \\(b\\) \\(\\Omega\\). rules executed order, one rule per iteration Cmax exceeded.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_classes_wb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weight-based update of latent classes — update_classes_wb","text":"","code":"### parameter settings s <- c(0.8,0.2) b <- matrix(c(1,1,1,-1), ncol=2) Omega <- matrix(c(0.5,0.3,0.3,0.5,1,-0.1,-0.1,0.8), ncol=2)  ### Remove class 2 RprobitB:::update_classes_wb(Cmax = 10, epsmin = 0.3, epsmax = 0.9, distmin = 1,                              s = s, b = b, Omega = Omega) #> $s #>      [,1] #> [1,]    1 #>  #> $b #>      [,1] #> [1,]    1 #> [2,]    1 #>  #> $Omega #>      [,1] #> [1,]  0.5 #> [2,]  0.3 #> [3,]  0.3 #> [4,]  0.5 #>   ### Split class 1 RprobitB:::update_classes_wb(Cmax = 10, epsmin = 0.1, epsmax = 0.7, distmin = 1,                              s = s, b = b, Omega = Omega) #> $s #>      [,1] [,2] [,3] #> [1,]  0.4  0.4  0.2 #>  #> $b #>      [,1] [,2] [,3] #> [1,] 0.75 1.25    1 #> [2,] 1.00 1.00   -1 #>  #> $Omega #>      [,1] [,2] [,3] #> [1,] 0.25 0.25  1.0 #> [2,] 0.15 0.15 -0.1 #> [3,] 0.15 0.15 -0.1 #> [4,] 0.25 0.25  0.8 #>   ### Join classes RprobitB:::update_classes_wb(Cmax = 10, epsmin = 0.1, epsmax = 0.9, distmin = 3,                              s = s, b = b, Omega = Omega) #> $s #>      [,1] #> [1,]    1 #>  #> $b #>      [,1] #> [1,]    1 #> [2,]    0 #>  #> $Omega #>      [,1] #> [1,] 0.75 #> [2,] 0.10 #> [3,] 0.10 #> [4,] 0.65 #>"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_m.html","id":null,"dir":"Reference","previous_headings":"","what":"Update class sizes — update_m","title":"Update class sizes — update_m","text":"function updates class size vector.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_m.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update class sizes — update_m","text":"","code":"update_m(C, z, nozero = FALSE)"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_m.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update class sizes — update_m","text":"C number (greater equal 1) latent classes decision makers. Set NA P_r = 0. Otherwise, C = 1 per default. z vector allocation variables length N. Set NA P_r = 0. nozero TRUE, element output vector m least one (numerical stability).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_m.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update class sizes — update_m","text":"updated class size vector.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_m.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update class sizes — update_m","text":"","code":"update_m(C = 3, z = c(1,1,1,2,2,3)) #>      [,1] #> [1,]    3 #> [2,]    2 #> [3,]    1"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_reg.html","id":null,"dir":"Reference","previous_headings":"","what":"Update coefficient vector of multiple linear regression — update_reg","title":"Update coefficient vector of multiple linear regression — update_reg","text":"function updates coefficient vector multiple linear regression.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_reg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update coefficient vector of multiple linear regression — update_reg","text":"","code":"update_reg(mu0, Tau0, XSigX, XSigU)"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_reg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update coefficient vector of multiple linear regression — update_reg","text":"mu0 mean vector normal prior distribution coefficient vector. Tau0 precision matrix (.e. inverted covariance matrix) normal prior distribution coefficient vector. XSigX matrix \\(\\sum_{n=1}^N X_n'\\Sigma^{-1}X_n\\). See details. XSigU vector \\(\\sum_{n=1}^N X_n'\\Sigma^{-1}U_n\\). See details.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_reg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update coefficient vector of multiple linear regression — update_reg","text":"vector, draw normal posterior distribution coefficient vector multiple linear regression.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_reg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update coefficient vector of multiple linear regression — update_reg","text":"function draws posterior distribution \\(\\beta\\) linear utility equation $$U_n = X_n\\beta + \\epsilon_n,$$ \\(U_n\\) (latent, assumed known) utility vector decider \\(n = 1,\\dots,N\\), \\(X_n\\) design matrix build choice characteristics faced \\(n\\), \\(\\beta\\) unknown coefficient vector (can either fixed coefficient vector \\(\\alpha\\) decider-specific coefficient vector \\(\\beta_n\\)), \\(\\epsilon_n\\) error term assumed normally distributed mean \\(0\\) (known) covariance matrix \\(\\Sigma\\). priori assume (conjugate) normal prior distribution $$\\beta \\sim N(\\mu_0,\\Tau_0)$$ mean vector \\(\\mu_0\\) precision matrix (.e. inverted covariance matrix) \\(\\Tau_0\\). posterior distribution \\(\\beta\\) normal covariance matrix $$\\Sigma_1 = (\\Tau_0 + \\sum_{n=1}^N X_n'\\Sigma^{-1}X_n)^{-1}$$ mean vector $$\\mu_1 = \\Sigma_1(\\Tau_0\\mu_0 + \\sum_{n=1}^N X_n'\\Sigma^{-1}U_n)$$. Note analogy \\(\\mu_1\\) generalized least squares estimator $$\\hat{\\beta}_\\text{GLS} = (\\sum_{n=1}^N X_n'\\Sigma^{-1}X_n)^{-1} \\sum_{n=1}^N X_n'\\Sigma^{-1}U_n$$ becomes weighted prior parameters \\(\\mu_0\\) \\(\\Tau_0\\).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_reg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update coefficient vector of multiple linear regression — update_reg","text":"","code":"### true coefficient vector beta_true <- matrix(c(-1,1), ncol=1) ### error term covariance matrix Sigma <- matrix(c(1,0.5,0.2,0.5,1,0.2,0.2,0.2,2), ncol=3) ### draw data N <- 100 X <- replicate(N, matrix(rnorm(6), ncol=2), simplify = FALSE) eps <- replicate(N, rmvnorm(mu = c(0,0,0), Sigma = Sigma), simplify = FALSE) U <- mapply(function(X, eps) X %*% beta_true + eps, X, eps, SIMPLIFY = FALSE) ### prior parameters for coefficient vector mu0 <- c(0,0) Tau0 <- diag(2) ### draw from posterior of coefficient vector XSigX <- Reduce(`+`, lapply(X, function(X) t(X) %*% solve(Sigma) %*% X)) XSigU <- Reduce(`+`, mapply(function(X, U) t(X) %*% solve(Sigma) %*% U, X, U, SIMPLIFY = FALSE)) beta_draws <- replicate(100, update_reg(mu0, Tau0, XSigX, XSigU), simplify = TRUE) rowMeans(beta_draws) #> [1] -1.071996  0.986084"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_s.html","id":null,"dir":"Reference","previous_headings":"","what":"Update class weight vector — update_s","title":"Update class weight vector — update_s","text":"function updates class weight vector drawing posterior distribution.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_s.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update class weight vector — update_s","text":"","code":"update_s(delta, m)"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_s.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update class weight vector — update_s","text":"delta numeric concentration parameter vector rep(delta,C) Dirichlet prior s. m vector current class frequencies.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_s.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update class weight vector — update_s","text":"vector, draw Dirichlet posterior distribution s.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_s.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update class weight vector — update_s","text":"Let \\(m=(m_1,\\dots,m_C)\\) frequencies \\(C\\) classes. Given class weight (probability) vector \\(s=(s_1,\\dots,s_C)\\), distribution \\(m\\) multinomial likelihood $$L(m\\mid s) \\propto \\prod_{=1}^C s_i^{m_i}.$$ conjugate prior \\(p(s)\\) \\(s\\) Dirichlet distribution, density function proportional $$\\prod_{=1}^C s_i^{\\delta_i-1},$$ \\(\\delta = (\\delta_1,\\dots,\\delta_C)\\) concentration parameter vector. Note RprobitB, \\(\\delta_1=\\dots=\\delta_C\\). restriction necessary class number \\(C\\) can change. posterior distribution \\(s\\) proportional $$p(s) L(m\\mid s) \\propto \\prod_{=1}^C s_i^{\\delta_i + m_i - 1},$$ turn proportional Dirichlet distribution parameters \\(\\delta+m\\).","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_s.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update class weight vector — update_s","text":"","code":"### number of classes C <- 4 ### current class sizes m <- sample.int(C) ### concentration parameter for Dirichlet prior (single-valued) delta <- 1 ### updated class weight vector update_s(delta = 1, m = m) #>           [,1] #> [1,] 0.1839418 #> [2,] 0.1893315 #> [3,] 0.2454951 #> [4,] 0.3812317"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_z.html","id":null,"dir":"Reference","previous_headings":"","what":"Update class allocation vector — update_z","title":"Update class allocation vector — update_z","text":"function updates class allocation vector (independently observations) drawing conditional distribution.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_z.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update class allocation vector — update_z","text":"","code":"update_z(s, beta, b, Omega)"},{"path":"https://loelschlaeger.de/RprobitB/reference/update_z.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update class allocation vector — update_z","text":"s vector class weights length C. Set NA P_r = 0. identifiability, vector must non-ascending. beta matrix decision-maker specific coefficient vectors dimension P_r x N. Set NA P_r = 0. b matrix class means columns dimension P_r x C. Set NA P_r = 0. Omega matrix class covariance matrices columns dimension P_r*P_r x C. Set NA P_r = 0.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_z.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update class allocation vector — update_z","text":"updated class allocation vector.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_z.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update class allocation vector — update_z","text":"Let \\(z = (z_1,\\dots,z_N)\\) denote class allocation vector observations (mixed coefficients) \\(\\beta = (\\beta_1,\\dots,\\beta_N)\\). Independently \\(n\\), conditional probability \\(\\Pr(z_n = c \\mid s,\\beta_n,b,\\Omega)\\) \\(\\beta_n\\) allocated class \\(c\\) \\(c=1,\\dots,C\\) depends class allocation vector \\(s\\), class means \\(b=(b_c)_c\\) class covariance matrices \\(Omega=(Omega_c)_c\\) proportional $$s_c \\phi(\\beta_n \\mid b_c,Omega_c).$$","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/update_z.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update class allocation vector — update_z","text":"","code":"### class weights for C = 2 classes s <- rdirichlet(c(1,1)) ### coefficient vector for N = 1 decider and P_r = 2 random coefficients beta <- matrix(c(1,1), ncol = 1) ### class means and covariances b <- cbind(c(0,0),c(1,1)) Omega <- cbind(c(1,0,0,1),c(1,0,0,1)) ### updated class allocation vector update_z(s = s, beta = beta, b = b, Omega = Omega) #>      [,1] #> [1,]    1"},{"path":"https://loelschlaeger.de/RprobitB/reference/waic.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute WAIC value — waic","title":"Compute WAIC value — waic","text":"function computes WAIC value RprobitB_fit-object.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/waic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute WAIC value — waic","text":"","code":"waic(x, S = 1000, print_progress = TRUE, check_conv = TRUE, ncores = 1)"},{"path":"https://loelschlaeger.de/RprobitB/reference/waic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute WAIC value — waic","text":"x object class RprobitB_fit. S number posterior samples used calculation WAIC value. Must greater equal two variance computation. print_progress Set TRUE print computation progress. check_conv Set TRUE plot convergence behavior WAIC calculation. ncores Computation parallelized, set number cores.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/waic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute WAIC value — waic","text":"Invisibly returns list waic, WAIC value, se_waic, standard error waic, p_si, matrix probabilities observation S different posterior samples, S, number posterior samples, lppd, log pointwise predictive density, p_waic, effective number parameters, p_waic_i, vector summands p_waic.","code":""},{"path":"https://loelschlaeger.de/RprobitB/reference/waic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute WAIC value — waic","text":"","code":"data <- simulate_choices(   form = choice ~ cov | 0,   N = 10,   T = 10,   J = 2,   seed = 1 ) x <- mcmc(data, R = 1000) #> Iteration 10 of 1000 Iteration 20 of 1000 Iteration 30 of 1000 Iteration 40 of 1000 Iteration 50 of 1000 Iteration 60 of 1000 Iteration 70 of 1000 Iteration 80 of 1000 Iteration 90 of 1000 Iteration 100 of 1000 Iteration 110 of 1000 Iteration 120 of 1000 Iteration 130 of 1000 Iteration 140 of 1000 Iteration 150 of 1000 Iteration 160 of 1000 Iteration 170 of 1000 Iteration 180 of 1000 Iteration 190 of 1000 Iteration 200 of 1000 Iteration 210 of 1000 Iteration 220 of 1000 Iteration 230 of 1000 Iteration 240 of 1000 Iteration 250 of 1000 Iteration 260 of 1000 Iteration 270 of 1000 Iteration 280 of 1000 Iteration 290 of 1000 Iteration 300 of 1000 Iteration 310 of 1000 Iteration 320 of 1000 Iteration 330 of 1000 Iteration 340 of 1000 Iteration 350 of 1000 Iteration 360 of 1000 Iteration 370 of 1000 Iteration 380 of 1000 Iteration 390 of 1000 Iteration 400 of 1000 Iteration 410 of 1000 Iteration 420 of 1000 Iteration 430 of 1000 Iteration 440 of 1000 Iteration 450 of 1000 Iteration 460 of 1000 Iteration 470 of 1000 Iteration 480 of 1000 Iteration 490 of 1000 Iteration 500 of 1000 Iteration 510 of 1000 Iteration 520 of 1000 Iteration 530 of 1000 Iteration 540 of 1000 Iteration 550 of 1000 Iteration 560 of 1000 Iteration 570 of 1000 Iteration 580 of 1000 Iteration 590 of 1000 Iteration 600 of 1000 Iteration 610 of 1000 Iteration 620 of 1000 Iteration 630 of 1000 Iteration 640 of 1000 Iteration 650 of 1000 Iteration 660 of 1000 Iteration 670 of 1000 Iteration 680 of 1000 Iteration 690 of 1000 Iteration 700 of 1000 Iteration 710 of 1000 Iteration 720 of 1000 Iteration 730 of 1000 Iteration 740 of 1000 Iteration 750 of 1000 Iteration 760 of 1000 Iteration 770 of 1000 Iteration 780 of 1000 Iteration 790 of 1000 Iteration 800 of 1000 Iteration 810 of 1000 Iteration 820 of 1000 Iteration 830 of 1000 Iteration 840 of 1000 Iteration 850 of 1000 Iteration 860 of 1000 Iteration 870 of 1000 Iteration 880 of 1000 Iteration 890 of 1000 Iteration 900 of 1000 Iteration 910 of 1000 Iteration 920 of 1000 Iteration 930 of 1000 Iteration 940 of 1000 Iteration 950 of 1000 Iteration 960 of 1000 Iteration 970 of 1000 Iteration 980 of 1000 Iteration 990 of 1000 Iteration 1000 of 1000 RprobitB:::waic(x = x, S = 10, check_conv = TRUE)"},{"path":"https://loelschlaeger.de/RprobitB/news/index.html","id":"rprobitb-1009000","dir":"Changelog","previous_headings":"","what":"RprobitB 1.0.0.9000","title":"RprobitB 1.0.0.9000","text":"Added print method RprobitB_parameter. function choice_probs now called choice_probabilities() make functionality clearer. Splitting data set train test part can now done function train_test(). Consequently, argument test_prob removed prepare_data() simulate_choices(). function simulate_choices() argument distr anymore. Instead, covariates can supplied via covariates argument. Consequently, argument standardize removed well. function compare now called model_selection() make functionality clearer. function prepare now called prepare_data() make functionality clearer. function simulate now called simulate_choices() mask stats::simulate(). README file now R Markdown format.","code":""}]
